2025-05-28 13:00:35.156  INFO 21688 --- [main] c.e.p.PatientManagementSystemApplication : Starting PatientManagementSystemApplication using Java 21.0.7 on 少华从文 with PID 21688 (C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes started by 10263 in C:\Users\10263\Downloads\patient-management-system-complete)
2025-05-28 13:00:35.165 DEBUG 21688 --- [main] c.e.p.PatientManagementSystemApplication : Running with Spring Boot v2.7.14, Spring v5.3.29
2025-05-28 13:00:35.166  INFO 21688 --- [main] c.e.p.PatientManagementSystemApplication : No active profile set, falling back to 1 default profile: "default"
2025-05-28 13:00:36.120  INFO 21688 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-28 13:00:36.205  INFO 21688 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 74 ms. Found 6 JPA repository interfaces.
2025-05-28 13:00:37.154  INFO 21688 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-05-28 13:00:37.164  INFO 21688 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-05-28 13:00:37.165  INFO 21688 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-05-28 13:00:37.314  INFO 21688 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring embedded WebApplicationContext
2025-05-28 13:00:37.315  INFO 21688 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2087 ms
2025-05-28 13:00:37.741  WARN 21688 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-28 13:00:38.202  INFO 21688 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-28 13:00:39.321 ERROR 21688 --- [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:175) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-4.0.3.jar:na]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:272) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:223) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:295) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:252) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:223) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:233) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1284) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1245) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:494) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:349) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:342) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.findEntityManagerFactory(EntityManagerFactoryUtils.java:121) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.EntityManagerFactoryAccessor.setBeanFactory(EntityManagerFactoryAccessor.java:155) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1826) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1791) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1609) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1573) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1462) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1349) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:766) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:727) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:766) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:727) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4936) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(Unknown Source) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:795) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(Unknown Source) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:249) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:428) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:922) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577) ~[spring-context-5.3.29.jar:5.3.29]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292) ~[spring-boot-2.7.14.jar:2.7.14]
	at com.example.patientmanagementsystem.PatientManagementSystemApplication.main(PatientManagementSystemApplication.java:12) ~[classes/:na]
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(Unknown Source) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source) ~[na:na]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:166) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:945) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	... 162 common frames omitted
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Unknown Source) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(Unknown Source) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(Unknown Source) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(Unknown Source) ~[na:na]
	at java.base/java.net.Socket.connect(Unknown Source) ~[na:na]
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:153) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	... 165 common frames omitted

2025-05-28 13:00:40.027  INFO 21688 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-28 13:00:41.069 ERROR 21688 --- [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:175) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-4.0.3.jar:na]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:44) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:565) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:68) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:220) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:123) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:196) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:233) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1284) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1245) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:494) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:349) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:342) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.findEntityManagerFactory(EntityManagerFactoryUtils.java:121) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.EntityManagerFactoryAccessor.setBeanFactory(EntityManagerFactoryAccessor.java:155) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1826) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1791) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1609) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1573) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1462) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1349) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:766) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:727) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:766) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:727) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4936) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(Unknown Source) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:795) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(Unknown Source) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:249) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:428) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:922) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577) ~[spring-context-5.3.29.jar:5.3.29]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292) ~[spring-boot-2.7.14.jar:2.7.14]
	at com.example.patientmanagementsystem.PatientManagementSystemApplication.main(PatientManagementSystemApplication.java:12) ~[classes/:na]
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(Unknown Source) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source) ~[na:na]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:166) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:945) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	... 162 common frames omitted
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Unknown Source) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(Unknown Source) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(Unknown Source) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(Unknown Source) ~[na:na]
	at java.base/java.net.Socket.connect(Unknown Source) ~[na:na]
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:153) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	... 165 common frames omitted

2025-05-28 13:00:41.073 ERROR 21688 --- [main] o.h.engine.jdbc.spi.SqlExceptionHelper   : Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
2025-05-28 13:00:41.079 ERROR 21688 --- [main] j.LocalContainerEntityManagerFactoryBean : Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
2025-05-28 13:00:41.081 ERROR 21688 --- [main] o.s.b.web.embedded.tomcat.TomcatStarter  : Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through method 'setContentNegotationStrategy' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
2025-05-28 13:00:41.110  INFO 21688 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2025-05-28 13:00:41.114  WARN 21688 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2025-05-28 13:00:41.120  INFO 21688 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-05-28 13:00:41.137 ERROR 21688 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577) ~[spring-context-5.3.29.jar:5.3.29]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292) ~[spring-boot-2.7.14.jar:2.7.14]
	at com.example.patientmanagementsystem.PatientManagementSystemApplication.main(PatientManagementSystemApplication.java:12) ~[classes/:na]
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162) ~[spring-boot-2.7.14.jar:2.7.14]
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through method 'setContentNegotationStrategy' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:774) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:727) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4936) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(Unknown Source) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:795) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(Unknown Source) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:249) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:428) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:922) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123) ~[spring-boot-2.7.14.jar:2.7.14]
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:774) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:727) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:766) ~[spring-beans-5.3.29.jar:5.3.29]
	... 64 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1609) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1573) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1462) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1349) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:766) ~[spring-beans-5.3.29.jar:5.3.29]
	... 87 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:628) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-5.3.29.jar:5.3.29]
	... 103 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:233) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1284) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1245) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:494) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:349) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:342) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.findEntityManagerFactory(EntityManagerFactoryUtils.java:121) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.EntityManagerFactoryAccessor.setBeanFactory(EntityManagerFactoryAccessor.java:155) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1826) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1791) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.29.jar:5.3.29]
	... 113 common frames omitted
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.29.jar:5.3.29]
	... 129 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:112) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:71) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:565) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:68) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:220) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:123) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:196) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.29.jar:5.3.29]
	... 133 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:175) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-4.0.3.jar:na]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:44) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	... 149 common frames omitted
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(Unknown Source) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source) ~[na:na]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:166) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:945) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	... 162 common frames omitted
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Unknown Source) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(Unknown Source) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(Unknown Source) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(Unknown Source) ~[na:na]
	at java.base/java.net.Socket.connect(Unknown Source) ~[na:na]
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:153) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	... 165 common frames omitted

2025-05-28 13:00:54.792  INFO 6148 --- [main] c.e.p.PatientManagementSystemApplication : Starting PatientManagementSystemApplication using Java 21.0.7 on 少华从文 with PID 6148 (C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes started by 10263 in C:\Users\10263\Downloads\patient-management-system-complete)
2025-05-28 13:00:54.794 DEBUG 6148 --- [main] c.e.p.PatientManagementSystemApplication : Running with Spring Boot v2.7.14, Spring v5.3.29
2025-05-28 13:00:54.794  INFO 6148 --- [main] c.e.p.PatientManagementSystemApplication : No active profile set, falling back to 1 default profile: "default"
2025-05-28 13:00:55.589  INFO 6148 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-28 13:00:55.669  INFO 6148 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 69 ms. Found 6 JPA repository interfaces.
2025-05-28 13:00:56.495  INFO 6148 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-05-28 13:00:56.504  INFO 6148 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-05-28 13:00:56.504  INFO 6148 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-05-28 13:00:56.619  INFO 6148 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring embedded WebApplicationContext
2025-05-28 13:00:56.619  INFO 6148 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1775 ms
2025-05-28 13:00:56.944  WARN 6148 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-28 13:00:57.371  INFO 6148 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-28 13:00:58.490 ERROR 6148 --- [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:175) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-4.0.3.jar:na]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:272) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:223) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:295) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:252) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:223) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:233) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1284) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1245) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:494) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:349) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:342) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.findEntityManagerFactory(EntityManagerFactoryUtils.java:121) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.EntityManagerFactoryAccessor.setBeanFactory(EntityManagerFactoryAccessor.java:155) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1826) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1791) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1609) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1573) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1462) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1349) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:766) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:727) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:766) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:727) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4936) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(Unknown Source) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:795) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(Unknown Source) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:249) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:428) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:922) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577) ~[spring-context-5.3.29.jar:5.3.29]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292) ~[spring-boot-2.7.14.jar:2.7.14]
	at com.example.patientmanagementsystem.PatientManagementSystemApplication.main(PatientManagementSystemApplication.java:12) ~[classes/:na]
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(Unknown Source) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source) ~[na:na]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:166) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:945) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	... 162 common frames omitted
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Unknown Source) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(Unknown Source) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(Unknown Source) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(Unknown Source) ~[na:na]
	at java.base/java.net.Socket.connect(Unknown Source) ~[na:na]
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:153) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	... 165 common frames omitted

2025-05-28 13:00:59.111  INFO 6148 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-28 13:01:00.157 ERROR 6148 --- [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:175) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-4.0.3.jar:na]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:44) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:565) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:68) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:220) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:123) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:196) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:233) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1284) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1245) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:494) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:349) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:342) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.findEntityManagerFactory(EntityManagerFactoryUtils.java:121) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.EntityManagerFactoryAccessor.setBeanFactory(EntityManagerFactoryAccessor.java:155) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1826) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1791) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1609) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1573) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1462) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1349) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:766) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:727) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:766) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:727) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4936) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(Unknown Source) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:795) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(Unknown Source) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:249) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:428) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:922) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577) ~[spring-context-5.3.29.jar:5.3.29]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292) ~[spring-boot-2.7.14.jar:2.7.14]
	at com.example.patientmanagementsystem.PatientManagementSystemApplication.main(PatientManagementSystemApplication.java:12) ~[classes/:na]
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(Unknown Source) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source) ~[na:na]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:166) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:945) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	... 162 common frames omitted
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Unknown Source) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(Unknown Source) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(Unknown Source) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(Unknown Source) ~[na:na]
	at java.base/java.net.Socket.connect(Unknown Source) ~[na:na]
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:153) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	... 165 common frames omitted

2025-05-28 13:01:00.160 ERROR 6148 --- [main] o.h.engine.jdbc.spi.SqlExceptionHelper   : Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
2025-05-28 13:01:00.165 ERROR 6148 --- [main] j.LocalContainerEntityManagerFactoryBean : Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
2025-05-28 13:01:00.168 ERROR 6148 --- [main] o.s.b.web.embedded.tomcat.TomcatStarter  : Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through method 'setContentNegotationStrategy' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
2025-05-28 13:01:00.203  INFO 6148 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2025-05-28 13:01:00.206  WARN 6148 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2025-05-28 13:01:00.213  INFO 6148 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-05-28 13:01:00.230 ERROR 6148 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577) ~[spring-context-5.3.29.jar:5.3.29]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292) ~[spring-boot-2.7.14.jar:2.7.14]
	at com.example.patientmanagementsystem.PatientManagementSystemApplication.main(PatientManagementSystemApplication.java:12) ~[classes/:na]
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162) ~[spring-boot-2.7.14.jar:2.7.14]
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through method 'setContentNegotationStrategy' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:774) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:727) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4936) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(Unknown Source) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:795) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(Unknown Source) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:249) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:428) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:922) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123) ~[spring-boot-2.7.14.jar:2.7.14]
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:774) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:727) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:766) ~[spring-beans-5.3.29.jar:5.3.29]
	... 64 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1609) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1573) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1462) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1349) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:766) ~[spring-beans-5.3.29.jar:5.3.29]
	... 87 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:628) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-5.3.29.jar:5.3.29]
	... 103 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:233) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1284) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1245) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:494) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:349) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:342) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.findEntityManagerFactory(EntityManagerFactoryUtils.java:121) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.EntityManagerFactoryAccessor.setBeanFactory(EntityManagerFactoryAccessor.java:155) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1826) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1791) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.29.jar:5.3.29]
	... 113 common frames omitted
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.29.jar:5.3.29]
	... 129 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:112) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:71) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:565) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:68) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:220) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:123) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:196) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.29.jar:5.3.29]
	... 133 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:175) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-4.0.3.jar:na]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:44) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	... 149 common frames omitted
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(Unknown Source) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source) ~[na:na]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:166) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:945) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	... 162 common frames omitted
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Unknown Source) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(Unknown Source) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.connect(Unknown Source) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(Unknown Source) ~[na:na]
	at java.base/java.net.Socket.connect(Unknown Source) ~[na:na]
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:153) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	... 165 common frames omitted

2025-05-28 13:05:15.445  INFO 9676 --- [main] c.e.p.PatientManagementSystemApplication : Starting PatientManagementSystemApplication using Java 21.0.7 on 少华从文 with PID 9676 (C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes started by 10263 in C:\Users\10263\Downloads\patient-management-system-complete)
2025-05-28 13:05:15.448 DEBUG 9676 --- [main] c.e.p.PatientManagementSystemApplication : Running with Spring Boot v2.7.14, Spring v5.3.29
2025-05-28 13:05:15.448  INFO 9676 --- [main] c.e.p.PatientManagementSystemApplication : No active profile set, falling back to 1 default profile: "default"
2025-05-28 13:05:16.344  INFO 9676 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-28 13:05:16.428  INFO 9676 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 71 ms. Found 6 JPA repository interfaces.
2025-05-28 13:05:17.331  INFO 9676 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-05-28 13:05:17.341  INFO 9676 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-05-28 13:05:17.341  INFO 9676 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-05-28 13:05:17.481  INFO 9676 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring embedded WebApplicationContext
2025-05-28 13:05:17.482  INFO 9676 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1985 ms
2025-05-28 13:05:17.840  WARN 9676 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-28 13:05:18.340  INFO 9676 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-28 13:05:18.540  INFO 9676 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-05-28 13:05:19.389  INFO 9676 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 13:05:19.779 DEBUG 9676 --- [main] c.e.p.security.JwtAuthenticationFilter   : Filter 'jwtAuthenticationFilter' configured for use
2025-05-28 13:05:19.790  INFO 9676 --- [main] c.e.p.config.AdminAccountInitializer     : AdminAccountInitializer初始化，管理员账号: 13000000000 
2025-05-28 13:05:20.317  INFO 9676 --- [main] c.e.p.service.AuthService                : === 开始初始化管理员账号 ===
2025-05-28 13:05:20.442  INFO 9676 --- [main] c.e.p.service.AuthService                : 找到管理员账号: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true
2025-05-28 13:05:20.443  INFO 9676 --- [main] c.e.p.service.AuthService                : === 管理员账号初始化完成 ===
2025-05-28 13:05:20.639  INFO 9676 --- [main] c.e.p.service.DataService                : Python脚本已复制到临时可执行路径: C:\Users\10263\AppData\Local\Temp\pms_scripts_4205aed9\processorOfRawData.py
2025-05-28 13:05:20.954  INFO 9676 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@72851503, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@690c3b1f, org.springframework.security.web.context.SecurityContextPersistenceFilter@5f8a29ca, org.springframework.security.web.header.HeaderWriterFilter@65871cfd, org.springframework.web.filter.CorsFilter@1d722bff, org.springframework.security.web.authentication.logout.LogoutFilter@487bc2fe, com.example.patientmanagementsystem.security.JwtAuthenticationFilter@54780c40, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@492d38a2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b247ef6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@72c29d87, org.springframework.security.web.session.SessionManagementFilter@2f97e3de, org.springframework.security.web.access.ExceptionTranslationFilter@198a0416, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@28d1b2f]
2025-05-28 13:05:22.002  INFO 9676 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path '/api'
2025-05-28 13:05:22.017  INFO 9676 --- [main] c.e.p.PatientManagementSystemApplication : Started PatientManagementSystemApplication in 6.969 seconds (JVM running for 7.315)
2025-05-28 13:05:22.026  INFO 9676 --- [main] c.e.p.config.AdminAccountInitializer     : 开始初始化管理员账号...
2025-05-28 13:05:22.030  INFO 9676 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号已存在，ID: 5adb9db0-ac6c-4075-b80a-d397454591c6, isAdmin: true
2025-05-28 13:05:22.153  INFO 9676 --- [main] c.e.p.config.AdminAccountInitializer     : 更新管理员密码和信息完成
2025-05-28 13:05:22.269  INFO 9676 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号验证: ID=5adb9db0-ac6c-4075-b80a-d397454591c6, isAdmin=true, passwordMatches=true
2025-05-28 13:05:22.269  INFO 9676 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号初始化完成
2025-05-28 13:05:22.290  INFO 9676 --- [main] c.e.p.config.AdminUserInitializer        : Default admin user with phone: 13000000000  already exists.
2025-05-28 13:05:22.358  INFO 9676 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 开始全面修复管理员账号和权限...
2025-05-28 13:05:22.367  INFO 9676 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 数据库中管理员角色标志: 1
2025-05-28 13:05:22.429  INFO 9676 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员密码匹配: true
2025-05-28 13:05:22.431  INFO 9676 --- [main] c.e.p.security.JwtTokenProvider          : 生成token: username=13000000000 , roles=ROLE_ADMIN
2025-05-28 13:05:22.474  INFO 9676 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 生成管理员token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCAiLCJyb2xlcyI6IlJPTEVfQURNSU4iLCJpYXQiOjE3NDg0MDg3MjIsImV4cCI6MTc0ODQ5NTEyMn0.hkd8LfT8VIZzF4La0VDgigJUJOi2mpvOrrkgKBN_as4
2025-05-28 13:05:22.497  INFO 9676 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : Token中的角色: ROLE_ADMIN
2025-05-28 13:05:22.497  INFO 9676 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员账号和权限修复完成
2025-05-28 13:05:22.497  INFO 9676 --- [main] c.e.p.config.AdminRoleFixConfig          : 开始修复管理员角色...
2025-05-28 13:05:22.502  INFO 9676 --- [main] c.e.p.config.AdminRoleFixConfig          : 找到管理员账号: 13000000000  (ID: 5adb9db0-ac6c-4075-b80a-d397454591c6)
2025-05-28 13:05:22.502  INFO 9676 --- [main] c.e.p.config.AdminRoleFixConfig          : 管理员角色已正确设置，无需更新
2025-05-28 13:05:22.504  INFO 9676 --- [main] c.e.p.config.AdminRoleFixConfig          : 数据库中管理员角色标志: 1
2025-05-28 13:05:22.505  INFO 9676 --- [main] c.e.p.config.AdminUserFixConfig          : 开始强制重新创建管理员账号...
2025-05-28 13:05:22.508  INFO 9676 --- [main] c.e.p.config.AdminUserFixConfig          : 找到现有管理员账号，准备删除重建: 13000000000 
2025-05-28 13:05:22.598  INFO 9676 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员账号强制重建完成: 13000000000  (ID: 5826e6ee-ffa5-46a3-81ef-9877f2ebc199)
2025-05-28 13:05:22.600  INFO 9676 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员密码已加密: $2a$10$MK3EeCvjgmtPROIia6Ywdem1iKMGIJPIZrUUOL7NQ.LdEeuD4wOtO
2025-05-28 13:05:22.668  INFO 9676 --- [main] c.e.p.config.AdminUserFixConfig          : 密码匹配验证: 成功
2025-05-28 13:05:22.668  INFO 9676 --- [main] c.e.p.config.DirectAdminFixConfig        : 开始直接数据库操作修复管理员账号...
2025-05-28 13:05:22.670  INFO 9676 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号已存在，更新账号信息
2025-05-28 13:05:22.740  INFO 9676 --- [main] c.e.p.config.DirectAdminFixConfig        : 更新管理员账号: 1 行受影响
2025-05-28 13:05:22.801  INFO 9676 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号验证: ID=5826e6ee-ffa5-46a3-81ef-9877f2ebc199, isAdmin=true, passwordMatches=true
2025-05-28 13:05:22.802  INFO 9676 --- [main] c.e.p.config.DirectAdminFixConfig        : 直接数据库操作修复管理员账号完成
2025-05-28 13:05:22.803  INFO 9676 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 开始紧急修复管理员账号...
2025-05-28 13:05:22.804  INFO 9676 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员账号已存在，尝试更新角色标志
2025-05-28 13:05:22.805  INFO 9676 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新管理员角色标志: 1 行受影响
2025-05-28 13:05:22.807  INFO 9676 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新后管理员角色标志: 1
2025-05-28 13:05:22.864  INFO 9676 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员密码匹配，无需更新
2025-05-28 13:05:22.865  INFO 9676 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 紧急修复管理员账号完成
2025-05-28 13:21:29.344  INFO 9676 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 13:21:29.350  INFO 9676 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-05-28 13:21:29.359  INFO 9676 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-05-28 13:56:46.538  INFO 27976 --- [main] c.e.p.PatientManagementSystemApplication : Starting PatientManagementSystemApplication using Java 21.0.7 on 少华从文 with PID 27976 (C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes started by 10263 in C:\Users\10263\Downloads\patient-management-system-complete)
2025-05-28 13:56:46.541 DEBUG 27976 --- [main] c.e.p.PatientManagementSystemApplication : Running with Spring Boot v2.7.14, Spring v5.3.29
2025-05-28 13:56:46.542  INFO 27976 --- [main] c.e.p.PatientManagementSystemApplication : No active profile set, falling back to 1 default profile: "default"
2025-05-28 13:56:47.518  INFO 27976 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-28 13:56:47.615  INFO 27976 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 84 ms. Found 6 JPA repository interfaces.
2025-05-28 13:56:48.675  INFO 27976 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-05-28 13:56:48.689  INFO 27976 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-05-28 13:56:48.690  INFO 27976 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-05-28 13:56:48.824  INFO 27976 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring embedded WebApplicationContext
2025-05-28 13:56:48.825  INFO 27976 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2229 ms
2025-05-28 13:56:49.247  WARN 27976 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-28 13:56:49.868  INFO 27976 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-28 13:56:50.028  INFO 27976 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-05-28 13:56:51.071  INFO 27976 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 13:56:51.564 DEBUG 27976 --- [main] c.e.p.security.JwtAuthenticationFilter   : Filter 'jwtAuthenticationFilter' configured for use
2025-05-28 13:56:51.588  INFO 27976 --- [main] c.e.p.config.AdminAccountInitializer     : AdminAccountInitializer初始化，管理员账号: 13000000000 
2025-05-28 13:56:52.246  INFO 27976 --- [main] c.e.p.service.AuthService                : === 开始初始化管理员账号 ===
2025-05-28 13:56:52.374  INFO 27976 --- [main] c.e.p.service.AuthService                : 找到管理员账号: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true
2025-05-28 13:56:52.375  INFO 27976 --- [main] c.e.p.service.AuthService                : === 管理员账号初始化完成 ===
2025-05-28 13:56:52.597  INFO 27976 --- [main] c.e.p.service.DataService                : Python脚本已复制到临时可执行路径: C:\Users\10263\AppData\Local\Temp\pms_scripts_f6e661b1\processorOfRawData.py
2025-05-28 13:56:52.894  INFO 27976 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@108fd5d5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4125bc3c, org.springframework.security.web.context.SecurityContextPersistenceFilter@325a781c, org.springframework.security.web.header.HeaderWriterFilter@61cff1e4, org.springframework.web.filter.CorsFilter@28b47211, org.springframework.security.web.authentication.logout.LogoutFilter@5f8a29ca, com.example.patientmanagementsystem.security.JwtAuthenticationFilter@6c2e7591, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ae5e1cf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@df34b01, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4abb4041, org.springframework.security.web.session.SessionManagementFilter@787b7796, org.springframework.security.web.access.ExceptionTranslationFilter@3013e1e8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@17f7a1af]
2025-05-28 13:56:54.010  INFO 27976 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path '/api'
2025-05-28 13:56:54.025  INFO 27976 --- [main] c.e.p.PatientManagementSystemApplication : Started PatientManagementSystemApplication in 8.001 seconds (JVM running for 8.607)
2025-05-28 13:56:54.034  INFO 27976 --- [main] c.e.p.config.AdminAccountInitializer     : 开始初始化管理员账号...
2025-05-28 13:56:54.040  INFO 27976 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号已存在，ID: 7912a598-1359-42fb-a1ee-30cf2f745f54, isAdmin: true
2025-05-28 13:56:54.153  INFO 27976 --- [main] c.e.p.config.AdminAccountInitializer     : 更新管理员密码和信息完成
2025-05-28 13:56:54.250  INFO 27976 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号验证: ID=7912a598-1359-42fb-a1ee-30cf2f745f54, isAdmin=true, passwordMatches=true
2025-05-28 13:56:54.251  INFO 27976 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号初始化完成
2025-05-28 13:56:54.267  INFO 27976 --- [main] c.e.p.config.AdminUserInitializer        : Default admin user with phone: 13000000000  already exists.
2025-05-28 13:56:54.333  INFO 27976 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 开始全面修复管理员账号和权限...
2025-05-28 13:56:54.342  INFO 27976 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 数据库中管理员角色标志: 1
2025-05-28 13:56:54.412  INFO 27976 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员密码匹配: true
2025-05-28 13:56:54.414  INFO 27976 --- [main] c.e.p.security.JwtTokenProvider          : 生成token: username=13000000000 , roles=ROLE_ADMIN
2025-05-28 13:56:54.483  INFO 27976 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 生成管理员token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCAiLCJyb2xlcyI6IlJPTEVfQURNSU4iLCJpYXQiOjE3NDg0MTE4MTQsImV4cCI6MTc0ODQ5ODIxNH0.Uh_CJh2kVBiP3oNwqgtFL962qEzTqZuori0N_3IDkS4
2025-05-28 13:56:54.538  INFO 27976 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : Token中的角色: ROLE_ADMIN
2025-05-28 13:56:54.539  INFO 27976 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员账号和权限修复完成
2025-05-28 13:56:54.540  INFO 27976 --- [main] c.e.p.config.AdminRoleFixConfig          : 开始修复管理员角色...
2025-05-28 13:56:54.544  INFO 27976 --- [main] c.e.p.config.AdminRoleFixConfig          : 找到管理员账号: 13000000000  (ID: 7912a598-1359-42fb-a1ee-30cf2f745f54)
2025-05-28 13:56:54.545  INFO 27976 --- [main] c.e.p.config.AdminRoleFixConfig          : 管理员角色已正确设置，无需更新
2025-05-28 13:56:54.547  INFO 27976 --- [main] c.e.p.config.AdminRoleFixConfig          : 数据库中管理员角色标志: 1
2025-05-28 13:56:54.548  INFO 27976 --- [main] c.e.p.config.AdminUserFixConfig          : 开始强制重新创建管理员账号...
2025-05-28 13:56:54.552  INFO 27976 --- [main] c.e.p.config.AdminUserFixConfig          : 找到现有管理员账号，准备删除重建: 13000000000 
2025-05-28 13:56:54.650  INFO 27976 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员账号强制重建完成: 13000000000  (ID: a6b3c0ce-e2d2-449f-8648-fbf96c5a7dda)
2025-05-28 13:56:54.651  INFO 27976 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员密码已加密: $2a$10$feMCDqaskV5I4mLIOqwHo.wZpq8eqRVmAi04XPH9g.ySpqMLcLz.y
2025-05-28 13:56:54.733  INFO 27976 --- [main] c.e.p.config.AdminUserFixConfig          : 密码匹配验证: 成功
2025-05-28 13:56:54.733  INFO 27976 --- [main] c.e.p.config.DirectAdminFixConfig        : 开始直接数据库操作修复管理员账号...
2025-05-28 13:56:54.736  INFO 27976 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号已存在，更新账号信息
2025-05-28 13:56:54.861  INFO 27976 --- [main] c.e.p.config.DirectAdminFixConfig        : 更新管理员账号: 1 行受影响
2025-05-28 13:56:54.923  INFO 27976 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号验证: ID=a6b3c0ce-e2d2-449f-8648-fbf96c5a7dda, isAdmin=true, passwordMatches=true
2025-05-28 13:56:54.923  INFO 27976 --- [main] c.e.p.config.DirectAdminFixConfig        : 直接数据库操作修复管理员账号完成
2025-05-28 13:56:54.923  INFO 27976 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 开始紧急修复管理员账号...
2025-05-28 13:56:54.925  INFO 27976 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员账号已存在，尝试更新角色标志
2025-05-28 13:56:54.927  INFO 27976 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新管理员角色标志: 1 行受影响
2025-05-28 13:56:54.927  INFO 27976 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新后管理员角色标志: 1
2025-05-28 13:56:54.997  INFO 27976 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员密码匹配，无需更新
2025-05-28 13:56:54.999  INFO 27976 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 紧急修复管理员账号完成
2025-05-28 14:08:57.124  INFO 27976 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-28 14:08:57.125  INFO 27976 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-05-28 14:08:57.129  INFO 27976 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2025-05-28 14:08:57.154  INFO 27976 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/admin/relations
2025-05-28 14:08:57.158  INFO 27976 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 14:08:57.160  INFO 27976 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 13000000000
2025-05-28 14:08:57.160  INFO 27976 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=13000000000
2025-05-28 14:08:57.165  INFO 27976 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 找到用户: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true, isDoctor=false, isPatient=false
2025-05-28 14:08:57.166  INFO 27976 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 用户拥有管理员角色
2025-05-28 14:08:57.168  INFO 27976 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 用户 13000000000 的权限: [ROLE_ADMIN]
2025-05-28 14:08:57.170  INFO 27976 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=13000000000, authorities=[ROLE_ADMIN]
2025-05-28 14:08:57.171  INFO 27976 --- [http-nio-8080-exec-1] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_ADMIN
2025-05-28 14:08:57.173  INFO 27976 --- [http-nio-8080-exec-1] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_ADMIN]
2025-05-28 14:08:57.174  INFO 27976 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=13000000000, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], authorities=[ROLE_ADMIN]
2025-05-28 14:09:12.708  INFO 27976 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 14:09:12.711  INFO 27976 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-05-28 14:09:12.740  INFO 27976 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-05-28 14:09:18.456  INFO 28244 --- [main] c.e.p.PatientManagementSystemApplication : Starting PatientManagementSystemApplication using Java 21.0.7 on 少华从文 with PID 28244 (C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes started by 10263 in C:\Users\10263\Downloads\patient-management-system-complete)
2025-05-28 14:09:18.458 DEBUG 28244 --- [main] c.e.p.PatientManagementSystemApplication : Running with Spring Boot v2.7.14, Spring v5.3.29
2025-05-28 14:09:18.458  INFO 28244 --- [main] c.e.p.PatientManagementSystemApplication : No active profile set, falling back to 1 default profile: "default"
2025-05-28 14:09:19.388  INFO 28244 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-28 14:09:19.467  INFO 28244 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 71 ms. Found 6 JPA repository interfaces.
2025-05-28 14:09:20.527  INFO 28244 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-05-28 14:09:20.538  INFO 28244 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-05-28 14:09:20.539  INFO 28244 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-05-28 14:09:20.680  INFO 28244 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring embedded WebApplicationContext
2025-05-28 14:09:20.682  INFO 28244 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2172 ms
2025-05-28 14:09:21.097  WARN 28244 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-28 14:09:21.608  INFO 28244 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-28 14:09:21.758  INFO 28244 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-05-28 14:09:22.820  INFO 28244 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 14:09:23.251 DEBUG 28244 --- [main] c.e.p.security.JwtAuthenticationFilter   : Filter 'jwtAuthenticationFilter' configured for use
2025-05-28 14:09:23.266  INFO 28244 --- [main] c.e.p.config.AdminAccountInitializer     : AdminAccountInitializer初始化，管理员账号: 13000000000 
2025-05-28 14:09:23.866  INFO 28244 --- [main] c.e.p.service.AuthService                : === 开始初始化管理员账号 ===
2025-05-28 14:09:24.002  INFO 28244 --- [main] c.e.p.service.AuthService                : 找到管理员账号: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true
2025-05-28 14:09:24.004  INFO 28244 --- [main] c.e.p.service.AuthService                : === 管理员账号初始化完成 ===
2025-05-28 14:09:24.229  INFO 28244 --- [main] c.e.p.service.DataService                : Python脚本已复制到临时可执行路径: C:\Users\10263\AppData\Local\Temp\pms_scripts_979768bc\processorOfRawData.py
2025-05-28 14:09:24.519  INFO 28244 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@108fd5d5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4125bc3c, org.springframework.security.web.context.SecurityContextPersistenceFilter@325a781c, org.springframework.security.web.header.HeaderWriterFilter@61cff1e4, org.springframework.web.filter.CorsFilter@28b47211, org.springframework.security.web.authentication.logout.LogoutFilter@5f8a29ca, com.example.patientmanagementsystem.security.JwtAuthenticationFilter@6c2e7591, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ae5e1cf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@df34b01, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4abb4041, org.springframework.security.web.session.SessionManagementFilter@787b7796, org.springframework.security.web.access.ExceptionTranslationFilter@3013e1e8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@17f7a1af]
2025-05-28 14:09:25.809  INFO 28244 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path '/api'
2025-05-28 14:09:25.824  INFO 28244 --- [main] c.e.p.PatientManagementSystemApplication : Started PatientManagementSystemApplication in 7.842 seconds (JVM running for 8.279)
2025-05-28 14:09:25.833  INFO 28244 --- [main] c.e.p.config.AdminAccountInitializer     : 开始初始化管理员账号...
2025-05-28 14:09:25.839  INFO 28244 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号已存在，ID: a6b3c0ce-e2d2-449f-8648-fbf96c5a7dda, isAdmin: true
2025-05-28 14:09:25.965  INFO 28244 --- [main] c.e.p.config.AdminAccountInitializer     : 更新管理员密码和信息完成
2025-05-28 14:09:26.059  INFO 28244 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号验证: ID=a6b3c0ce-e2d2-449f-8648-fbf96c5a7dda, isAdmin=true, passwordMatches=true
2025-05-28 14:09:26.060  INFO 28244 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号初始化完成
2025-05-28 14:09:26.080  INFO 28244 --- [main] c.e.p.config.AdminUserInitializer        : Default admin user with phone: 13000000000  already exists.
2025-05-28 14:09:26.144  INFO 28244 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 开始全面修复管理员账号和权限...
2025-05-28 14:09:26.153  INFO 28244 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 数据库中管理员角色标志: 1
2025-05-28 14:09:26.228  INFO 28244 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员密码匹配: true
2025-05-28 14:09:26.229  INFO 28244 --- [main] c.e.p.security.JwtTokenProvider          : 生成token: username=13000000000 , roles=ROLE_ADMIN
2025-05-28 14:09:26.303  INFO 28244 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 生成管理员token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCAiLCJyb2xlcyI6IlJPTEVfQURNSU4iLCJpYXQiOjE3NDg0MTI1NjYsImV4cCI6MTc0ODQ5ODk2Nn0.0_7bRDRTfChUSyEvLIIDFm6glIeU3JvoJrApyjBBwXA
2025-05-28 14:09:26.355  INFO 28244 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : Token中的角色: ROLE_ADMIN
2025-05-28 14:09:26.355  INFO 28244 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员账号和权限修复完成
2025-05-28 14:09:26.356  INFO 28244 --- [main] c.e.p.config.AdminRoleFixConfig          : 开始修复管理员角色...
2025-05-28 14:09:26.360  INFO 28244 --- [main] c.e.p.config.AdminRoleFixConfig          : 找到管理员账号: 13000000000  (ID: a6b3c0ce-e2d2-449f-8648-fbf96c5a7dda)
2025-05-28 14:09:26.361  INFO 28244 --- [main] c.e.p.config.AdminRoleFixConfig          : 管理员角色已正确设置，无需更新
2025-05-28 14:09:26.362  INFO 28244 --- [main] c.e.p.config.AdminRoleFixConfig          : 数据库中管理员角色标志: 1
2025-05-28 14:09:26.363  INFO 28244 --- [main] c.e.p.config.AdminUserFixConfig          : 开始强制重新创建管理员账号...
2025-05-28 14:09:26.367  INFO 28244 --- [main] c.e.p.config.AdminUserFixConfig          : 找到现有管理员账号，准备删除重建: 13000000000 
2025-05-28 14:09:26.469  INFO 28244 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员账号强制重建完成: 13000000000  (ID: aafde893-8f38-43ce-8bc0-bdb06b614b88)
2025-05-28 14:09:26.470  INFO 28244 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员密码已加密: $2a$10$LH5P/WeE3oI0YIXiAqq3BeSvRCN/rJwU/fTmGvTBEEXSHdOUQ7TIW
2025-05-28 14:09:26.527  INFO 28244 --- [main] c.e.p.config.AdminUserFixConfig          : 密码匹配验证: 成功
2025-05-28 14:09:26.527  INFO 28244 --- [main] c.e.p.config.DirectAdminFixConfig        : 开始直接数据库操作修复管理员账号...
2025-05-28 14:09:26.529  INFO 28244 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号已存在，更新账号信息
2025-05-28 14:09:26.606  INFO 28244 --- [main] c.e.p.config.DirectAdminFixConfig        : 更新管理员账号: 1 行受影响
2025-05-28 14:09:26.705  INFO 28244 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号验证: ID=aafde893-8f38-43ce-8bc0-bdb06b614b88, isAdmin=true, passwordMatches=true
2025-05-28 14:09:26.706  INFO 28244 --- [main] c.e.p.config.DirectAdminFixConfig        : 直接数据库操作修复管理员账号完成
2025-05-28 14:09:26.706  INFO 28244 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 开始紧急修复管理员账号...
2025-05-28 14:09:26.708  INFO 28244 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员账号已存在，尝试更新角色标志
2025-05-28 14:09:26.709  INFO 28244 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新管理员角色标志: 1 行受影响
2025-05-28 14:09:26.712  INFO 28244 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新后管理员角色标志: 1
2025-05-28 14:09:26.769  INFO 28244 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员密码匹配，无需更新
2025-05-28 14:09:26.770  INFO 28244 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 紧急修复管理员账号完成
2025-05-28 14:09:39.272  INFO 28244 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-28 14:09:39.273  INFO 28244 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-05-28 14:09:39.275  INFO 28244 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2025-05-28 14:09:39.293  INFO 28244 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/admin/relations
2025-05-28 14:09:39.295  INFO 28244 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 14:09:39.296  INFO 28244 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 13000000000
2025-05-28 14:09:39.298  INFO 28244 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=13000000000
2025-05-28 14:09:39.302  INFO 28244 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 找到用户: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true, isDoctor=false, isPatient=false
2025-05-28 14:09:39.302  INFO 28244 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 用户拥有管理员角色
2025-05-28 14:09:39.304  INFO 28244 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 用户 13000000000 的权限: [ROLE_ADMIN]
2025-05-28 14:09:39.305  INFO 28244 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=13000000000, authorities=[ROLE_ADMIN]
2025-05-28 14:09:39.306  INFO 28244 --- [http-nio-8080-exec-1] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_ADMIN
2025-05-28 14:09:39.307  INFO 28244 --- [http-nio-8080-exec-1] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_ADMIN]
2025-05-28 14:09:39.309  INFO 28244 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=13000000000, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], authorities=[ROLE_ADMIN]
2025-05-28 14:19:32.487  INFO 28244 --- [http-nio-8080-exec-5] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/admin/relations
2025-05-28 14:19:32.489  INFO 28244 --- [http-nio-8080-exec-5] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 14:19:32.492  INFO 28244 --- [http-nio-8080-exec-5] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 13000000000
2025-05-28 14:19:32.493  INFO 28244 --- [http-nio-8080-exec-5] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=13000000000
2025-05-28 14:19:32.498  INFO 28244 --- [http-nio-8080-exec-5] c.e.p.security.CustomUserDetailsService  : 找到用户: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true, isDoctor=false, isPatient=false
2025-05-28 14:19:32.499  INFO 28244 --- [http-nio-8080-exec-5] c.e.p.security.CustomUserDetailsService  : 用户拥有管理员角色
2025-05-28 14:19:32.501  INFO 28244 --- [http-nio-8080-exec-5] c.e.p.security.CustomUserDetailsService  : 用户 13000000000 的权限: [ROLE_ADMIN]
2025-05-28 14:19:32.502  INFO 28244 --- [http-nio-8080-exec-5] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=13000000000, authorities=[ROLE_ADMIN]
2025-05-28 14:19:32.505  INFO 28244 --- [http-nio-8080-exec-5] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_ADMIN
2025-05-28 14:19:32.506  INFO 28244 --- [http-nio-8080-exec-5] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_ADMIN]
2025-05-28 14:19:32.508  INFO 28244 --- [http-nio-8080-exec-5] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=13000000000, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], authorities=[ROLE_ADMIN]
2025-05-28 14:27:39.934  INFO 28244 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 处理请求: POST /api/session
2025-05-28 14:27:39.935  INFO 28244 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 请求不包含有效JWT令牌
2025-05-28 14:27:40.017  INFO 28244 --- [http-nio-8080-exec-8] c.e.p.controller.AuthController          : 收到登录请求: username=18743005518
2025-05-28 14:27:40.022  INFO 28244 --- [http-nio-8080-exec-8] c.e.p.service.AuthService                : 用户登录: username=18743005518
2025-05-28 14:27:40.111  INFO 28244 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 14:27:40.115  INFO 28244 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 14:27:40.116  INFO 28244 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 14:27:40.116  INFO 28244 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 14:27:40.196  INFO 28244 --- [http-nio-8080-exec-8] c.e.p.security.JwtTokenProvider          : 生成token: username=18743005518, roles=ROLE_DOCTOR
2025-05-28 14:27:40.197  INFO 28244 --- [http-nio-8080-exec-8] c.e.p.service.AuthService                : 生成token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxODc0MzAwNTUxOCIsInJvbGVzIjoiUk9MRV9ET0NUT1IiLCJpYXQiOjE3NDg0MTM2NjAsImV4cCI6MTc0ODUwMDA2MH0.9Esi_ZSPsxVFniXHxmotCjOoQJYvMqzc-_FUpK6rZC4
2025-05-28 14:27:40.200  INFO 28244 --- [http-nio-8080-exec-8] c.e.p.service.AuthService                : 用户登录成功: id=223ffe8a-50ac-4006-82bb-70df8606d203, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 14:27:40.201  INFO 28244 --- [http-nio-8080-exec-8] c.e.p.controller.AuthController          : 登录成功: userId=223ffe8a-50ac-4006-82bb-70df8606d203, isAdmin=false, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxODc0MzAwNTUxOCIsInJvbGVzIjoiUk9MRV9ET0NUT1IiLCJpYXQiOjE3NDg0MTM2NjAsImV4cCI6MTc0ODUwMDA2MH0.9Esi_ZSPsxVFniXHxmotCjOoQJYvMqzc-_FUpK6rZC4
2025-05-28 14:30:02.590  INFO 28244 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/admin/relations
2025-05-28 14:30:02.592  INFO 28244 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 14:30:02.595  INFO 28244 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 14:30:02.595  INFO 28244 --- [http-nio-8080-exec-2] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 14:30:02.599  INFO 28244 --- [http-nio-8080-exec-2] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 14:30:02.600  INFO 28244 --- [http-nio-8080-exec-2] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 14:30:02.600  INFO 28244 --- [http-nio-8080-exec-2] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 14:30:02.600  INFO 28244 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 14:30:02.602  INFO 28244 --- [http-nio-8080-exec-2] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 14:30:02.603  INFO 28244 --- [http-nio-8080-exec-2] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 14:30:02.603  INFO 28244 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 14:30:36.184  INFO 28244 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 14:30:36.188  INFO 28244 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-05-28 14:30:36.200  INFO 28244 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-05-28 14:30:38.828  INFO 3528 --- [main] c.e.p.PatientManagementSystemApplication : Starting PatientManagementSystemApplication using Java 21.0.7 on 少华从文 with PID 3528 (C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes started by 10263 in C:\Users\10263\Downloads\patient-management-system-complete)
2025-05-28 14:30:38.831 DEBUG 3528 --- [main] c.e.p.PatientManagementSystemApplication : Running with Spring Boot v2.7.14, Spring v5.3.29
2025-05-28 14:30:38.832  INFO 3528 --- [main] c.e.p.PatientManagementSystemApplication : No active profile set, falling back to 1 default profile: "default"
2025-05-28 14:30:39.708  INFO 3528 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-28 14:30:39.800  INFO 3528 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 79 ms. Found 6 JPA repository interfaces.
2025-05-28 14:30:40.728  INFO 3528 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-05-28 14:30:40.738  INFO 3528 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-05-28 14:30:40.738  INFO 3528 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-05-28 14:30:40.867  INFO 3528 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring embedded WebApplicationContext
2025-05-28 14:30:40.867  INFO 3528 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1987 ms
2025-05-28 14:30:41.208  WARN 3528 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-28 14:30:41.714  INFO 3528 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-28 14:30:41.855  INFO 3528 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-05-28 14:30:42.712  INFO 3528 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 14:30:43.147 DEBUG 3528 --- [main] c.e.p.security.JwtAuthenticationFilter   : Filter 'jwtAuthenticationFilter' configured for use
2025-05-28 14:30:43.161  INFO 3528 --- [main] c.e.p.config.AdminAccountInitializer     : AdminAccountInitializer初始化，管理员账号: 13000000000 
2025-05-28 14:30:43.433  WARN 3528 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'adminController' defined in file [C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes\com\example\patientmanagementsystem\controller\AdminController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'doctorService' defined in file [C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes\com\example\patientmanagementsystem\service\DoctorService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'doctorRepository' defined in com.example.patientmanagementsystem.repository.DoctorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional com.example.patientmanagementsystem.repository.DoctorRepository.findByUserId(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional com.example.patientmanagementsystem.repository.DoctorRepository.findByUserId(java.lang.String)! Unable to locate Attribute  with the the given name [userId] on this ManagedType [com.example.patientmanagementsystem.model.Doctor]; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.example.patientmanagementsystem.repository.DoctorRepository.findByUserId(java.lang.String)! Unable to locate Attribute  with the the given name [userId] on this ManagedType [com.example.patientmanagementsystem.model.Doctor]
2025-05-28 14:30:43.435  INFO 3528 --- [main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 14:30:43.436  INFO 3528 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-05-28 14:30:43.441  INFO 3528 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-05-28 14:30:43.444  INFO 3528 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2025-05-28 14:30:43.454  INFO 3528 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-05-28 14:30:43.483 ERROR 3528 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'adminController' defined in file [C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes\com\example\patientmanagementsystem\controller\AdminController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'doctorService' defined in file [C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes\com\example\patientmanagementsystem\service\DoctorService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'doctorRepository' defined in com.example.patientmanagementsystem.repository.DoctorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional com.example.patientmanagementsystem.repository.DoctorRepository.findByUserId(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional com.example.patientmanagementsystem.repository.DoctorRepository.findByUserId(java.lang.String)! Unable to locate Attribute  with the the given name [userId] on this ManagedType [com.example.patientmanagementsystem.model.Doctor]; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.example.patientmanagementsystem.repository.DoctorRepository.findByUserId(java.lang.String)! Unable to locate Attribute  with the the given name [userId] on this ManagedType [com.example.patientmanagementsystem.model.Doctor]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:921) ~[spring-context-5.3.29.jar:5.3.29]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.29.jar:5.3.29]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292) ~[spring-boot-2.7.14.jar:2.7.14]
	at com.example.patientmanagementsystem.PatientManagementSystemApplication.main(PatientManagementSystemApplication.java:12) ~[classes/:na]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'doctorService' defined in file [C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes\com\example\patientmanagementsystem\service\DoctorService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'doctorRepository' defined in com.example.patientmanagementsystem.repository.DoctorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional com.example.patientmanagementsystem.repository.DoctorRepository.findByUserId(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional com.example.patientmanagementsystem.repository.DoctorRepository.findByUserId(java.lang.String)! Unable to locate Attribute  with the the given name [userId] on this ManagedType [com.example.patientmanagementsystem.model.Doctor]; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.example.patientmanagementsystem.repository.DoctorRepository.findByUserId(java.lang.String)! Unable to locate Attribute  with the the given name [userId] on this ManagedType [com.example.patientmanagementsystem.model.Doctor]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-5.3.29.jar:5.3.29]
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'doctorRepository' defined in com.example.patientmanagementsystem.repository.DoctorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional com.example.patientmanagementsystem.repository.DoctorRepository.findByUserId(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional com.example.patientmanagementsystem.repository.DoctorRepository.findByUserId(java.lang.String)! Unable to locate Attribute  with the the given name [userId] on this ManagedType [com.example.patientmanagementsystem.model.Doctor]; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.example.patientmanagementsystem.repository.DoctorRepository.findByUserId(java.lang.String)! Unable to locate Attribute  with the the given name [userId] on this ManagedType [com.example.patientmanagementsystem.model.Doctor]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-5.3.29.jar:5.3.29]
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional com.example.patientmanagementsystem.repository.DoctorRepository.findByUserId(java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional com.example.patientmanagementsystem.repository.DoctorRepository.findByUserId(java.lang.String)! Unable to locate Attribute  with the the given name [userId] on this ManagedType [com.example.patientmanagementsystem.model.Doctor]; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.example.patientmanagementsystem.repository.DoctorRepository.findByUserId(java.lang.String)! Unable to locate Attribute  with the the given name [userId] on this ManagedType [com.example.patientmanagementsystem.model.Doctor]
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101) ~[spring-data-commons-2.7.14.jar:2.7.14]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107) ~[spring-data-commons-2.7.14.jar:2.7.14]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95) ~[spring-data-commons-2.7.14.jar:2.7.14]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) ~[na:na]
	at java.base/java.util.Iterator.forEachRemaining(Unknown Source) ~[na:na]
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source) ~[na:na]
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) ~[na:na]
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline.collect(Unknown Source) ~[na:na]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97) ~[spring-data-commons-2.7.14.jar:2.7.14]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87) ~[spring-data-commons-2.7.14.jar:2.7.14]
	at java.base/java.util.Optional.map(Unknown Source) ~[na:na]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87) ~[spring-data-commons-2.7.14.jar:2.7.14]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365) ~[spring-data-commons-2.7.14.jar:2.7.14]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323) ~[spring-data-commons-2.7.14.jar:2.7.14]
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231) ~[spring-data-commons-2.7.14.jar:2.7.14]
	at org.springframework.data.util.Lazy.get(Lazy.java:115) ~[spring-data-commons-2.7.14.jar:2.7.14]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329) ~[spring-data-commons-2.7.14.jar:2.7.14]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144) ~[spring-data-jpa-2.7.14.jar:2.7.14]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.29.jar:5.3.29]
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.example.patientmanagementsystem.repository.DoctorRepository.findByUserId(java.lang.String)! Unable to locate Attribute  with the the given name [userId] on this ManagedType [com.example.patientmanagementsystem.model.Doctor]
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96) ~[spring-data-jpa-2.7.14.jar:2.7.14]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:119) ~[spring-data-jpa-2.7.14.jar:2.7.14]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:259) ~[spring-data-jpa-2.7.14.jar:2.7.14]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93) ~[spring-data-jpa-2.7.14.jar:2.7.14]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103) ~[spring-data-commons-2.7.14.jar:2.7.14]
	... 66 common frames omitted
Caused by: java.lang.IllegalArgumentException: Unable to locate Attribute  with the the given name [userId] on this ManagedType [com.example.patientmanagementsystem.model.Doctor]
	at org.hibernate.metamodel.model.domain.internal.AbstractManagedType.checkNotNull(AbstractManagedType.java:148) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getAttribute(AbstractManagedType.java:119) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getAttribute(AbstractManagedType.java:44) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.springframework.data.jpa.repository.query.QueryUtils.requiresOuterJoin(QueryUtils.java:822) ~[spring-data-jpa-2.7.14.jar:2.7.14]
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:763) ~[spring-data-jpa-2.7.14.jar:2.7.14]
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:742) ~[spring-data-jpa-2.7.14.jar:2.7.14]
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:738) ~[spring-data-jpa-2.7.14.jar:2.7.14]
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.getTypedPath(JpaQueryCreator.java:394) ~[spring-data-jpa-2.7.14.jar:2.7.14]
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.build(JpaQueryCreator.java:317) ~[spring-data-jpa-2.7.14.jar:2.7.14]
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:217) ~[spring-data-jpa-2.7.14.jar:2.7.14]
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:125) ~[spring-data-jpa-2.7.14.jar:2.7.14]
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:60) ~[spring-data-jpa-2.7.14.jar:2.7.14]
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:120) ~[spring-data-commons-2.7.14.jar:2.7.14]
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:96) ~[spring-data-commons-2.7.14.jar:2.7.14]
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:82) ~[spring-data-commons-2.7.14.jar:2.7.14]
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:217) ~[spring-data-jpa-2.7.14.jar:2.7.14]
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$CountQueryPreparer.<init>(PartTreeJpaQuery.java:348) ~[spring-data-jpa-2.7.14.jar:2.7.14]
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:91) ~[spring-data-jpa-2.7.14.jar:2.7.14]
	... 70 common frames omitted

2025-05-28 14:32:06.901  INFO 4828 --- [main] c.e.p.PatientManagementSystemApplication : Starting PatientManagementSystemApplication using Java 21.0.7 on 少华从文 with PID 4828 (C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes started by 10263 in C:\Users\10263\Downloads\patient-management-system-complete)
2025-05-28 14:32:06.903 DEBUG 4828 --- [main] c.e.p.PatientManagementSystemApplication : Running with Spring Boot v2.7.14, Spring v5.3.29
2025-05-28 14:32:06.904  INFO 4828 --- [main] c.e.p.PatientManagementSystemApplication : No active profile set, falling back to 1 default profile: "default"
2025-05-28 14:32:07.694  INFO 4828 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-28 14:32:07.776  INFO 4828 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 72 ms. Found 6 JPA repository interfaces.
2025-05-28 14:32:08.686  INFO 4828 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-05-28 14:32:08.694  INFO 4828 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-05-28 14:32:08.694  INFO 4828 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-05-28 14:32:08.802  INFO 4828 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring embedded WebApplicationContext
2025-05-28 14:32:08.802  INFO 4828 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1848 ms
2025-05-28 14:32:09.146  WARN 4828 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-28 14:32:09.583  INFO 4828 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-28 14:32:09.726  INFO 4828 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-05-28 14:32:10.462  INFO 4828 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 14:32:10.958 DEBUG 4828 --- [main] c.e.p.security.JwtAuthenticationFilter   : Filter 'jwtAuthenticationFilter' configured for use
2025-05-28 14:32:10.978  INFO 4828 --- [main] c.e.p.config.AdminAccountInitializer     : AdminAccountInitializer初始化，管理员账号: 13000000000 
2025-05-28 14:32:11.492  INFO 4828 --- [main] c.e.p.service.AuthService                : === 开始初始化管理员账号 ===
2025-05-28 14:32:11.623  INFO 4828 --- [main] c.e.p.service.AuthService                : 找到管理员账号: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true
2025-05-28 14:32:11.626  INFO 4828 --- [main] c.e.p.service.AuthService                : === 管理员账号初始化完成 ===
2025-05-28 14:32:11.857  INFO 4828 --- [main] c.e.p.service.DataService                : Python脚本已复制到临时可执行路径: C:\Users\10263\AppData\Local\Temp\pms_scripts_7b76c8c0\processorOfRawData.py
2025-05-28 14:32:12.225  INFO 4828 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@17f7a1af, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@d62feaf, org.springframework.security.web.context.SecurityContextPersistenceFilter@212be8c, org.springframework.security.web.header.HeaderWriterFilter@47629063, org.springframework.web.filter.CorsFilter@3093161a, org.springframework.security.web.authentication.logout.LogoutFilter@7db679, com.example.patientmanagementsystem.security.JwtAuthenticationFilter@f833223, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@787b7796, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6ae5e1cf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@73a88711, org.springframework.security.web.session.SessionManagementFilter@7d381eae, org.springframework.security.web.access.ExceptionTranslationFilter@1c76b2fe, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@e280006]
2025-05-28 14:32:13.315  INFO 4828 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path '/api'
2025-05-28 14:32:13.329  INFO 4828 --- [main] c.e.p.PatientManagementSystemApplication : Started PatientManagementSystemApplication in 6.848 seconds (JVM running for 7.198)
2025-05-28 14:32:13.340  INFO 4828 --- [main] c.e.p.config.AdminAccountInitializer     : 开始初始化管理员账号...
2025-05-28 14:32:13.345  INFO 4828 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号已存在，ID: aafde893-8f38-43ce-8bc0-bdb06b614b88, isAdmin: true
2025-05-28 14:32:13.465  INFO 4828 --- [main] c.e.p.config.AdminAccountInitializer     : 更新管理员密码和信息完成
2025-05-28 14:32:13.568  INFO 4828 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号验证: ID=aafde893-8f38-43ce-8bc0-bdb06b614b88, isAdmin=true, passwordMatches=true
2025-05-28 14:32:13.569  INFO 4828 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号初始化完成
2025-05-28 14:32:13.597  INFO 4828 --- [main] c.e.p.config.AdminUserInitializer        : Default admin user with phone: 13000000000  already exists.
2025-05-28 14:32:13.661  INFO 4828 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 开始全面修复管理员账号和权限...
2025-05-28 14:32:13.669  INFO 4828 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 数据库中管理员角色标志: 1
2025-05-28 14:32:13.731  INFO 4828 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员密码匹配: true
2025-05-28 14:32:13.733  INFO 4828 --- [main] c.e.p.security.JwtTokenProvider          : 生成token: username=13000000000 , roles=ROLE_ADMIN
2025-05-28 14:32:13.781  INFO 4828 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 生成管理员token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCAiLCJyb2xlcyI6IlJPTEVfQURNSU4iLCJpYXQiOjE3NDg0MTM5MzMsImV4cCI6MTc0ODUwMDMzM30.u4m6f1evxnvKqlCr16G7Rn-wWed7e_gR6Ssj7xPQRY8
2025-05-28 14:32:13.804  INFO 4828 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : Token中的角色: ROLE_ADMIN
2025-05-28 14:32:13.804  INFO 4828 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员账号和权限修复完成
2025-05-28 14:32:13.805  INFO 4828 --- [main] c.e.p.config.AdminRoleFixConfig          : 开始修复管理员角色...
2025-05-28 14:32:13.807  INFO 4828 --- [main] c.e.p.config.AdminRoleFixConfig          : 找到管理员账号: 13000000000  (ID: aafde893-8f38-43ce-8bc0-bdb06b614b88)
2025-05-28 14:32:13.808  INFO 4828 --- [main] c.e.p.config.AdminRoleFixConfig          : 管理员角色已正确设置，无需更新
2025-05-28 14:32:13.809  INFO 4828 --- [main] c.e.p.config.AdminRoleFixConfig          : 数据库中管理员角色标志: 1
2025-05-28 14:32:13.809  INFO 4828 --- [main] c.e.p.config.AdminUserFixConfig          : 开始强制重新创建管理员账号...
2025-05-28 14:32:13.812  INFO 4828 --- [main] c.e.p.config.AdminUserFixConfig          : 找到现有管理员账号，准备删除重建: 13000000000 
2025-05-28 14:32:13.915  INFO 4828 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员账号强制重建完成: 13000000000  (ID: 9a834101-416a-4a9f-b92b-687b2ec6eecf)
2025-05-28 14:32:13.916  INFO 4828 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员密码已加密: $2a$10$dA/zfSc50JRmGsoDGfe23.Drm0dZ0D.u.dZZEZ.FRGmgb4BzILyxK
2025-05-28 14:32:13.980  INFO 4828 --- [main] c.e.p.config.AdminUserFixConfig          : 密码匹配验证: 成功
2025-05-28 14:32:13.981  INFO 4828 --- [main] c.e.p.config.DirectAdminFixConfig        : 开始直接数据库操作修复管理员账号...
2025-05-28 14:32:13.982  INFO 4828 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号已存在，更新账号信息
2025-05-28 14:32:14.058  INFO 4828 --- [main] c.e.p.config.DirectAdminFixConfig        : 更新管理员账号: 1 行受影响
2025-05-28 14:32:14.127  INFO 4828 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号验证: ID=9a834101-416a-4a9f-b92b-687b2ec6eecf, isAdmin=true, passwordMatches=true
2025-05-28 14:32:14.127  INFO 4828 --- [main] c.e.p.config.DirectAdminFixConfig        : 直接数据库操作修复管理员账号完成
2025-05-28 14:32:14.127  INFO 4828 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 开始紧急修复管理员账号...
2025-05-28 14:32:14.128  INFO 4828 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员账号已存在，尝试更新角色标志
2025-05-28 14:32:14.129  INFO 4828 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新管理员角色标志: 1 行受影响
2025-05-28 14:32:14.130  INFO 4828 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新后管理员角色标志: 1
2025-05-28 14:32:14.188  INFO 4828 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员密码匹配，无需更新
2025-05-28 14:32:14.189  INFO 4828 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 紧急修复管理员账号完成
2025-05-28 14:32:28.714  INFO 4828 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-28 14:32:28.714  INFO 4828 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-05-28 14:32:28.715  INFO 4828 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-05-28 14:32:28.728  INFO 4828 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/admin/relations
2025-05-28 14:32:28.730  INFO 4828 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 14:32:28.731  INFO 4828 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 14:32:28.731  INFO 4828 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 14:32:28.734  INFO 4828 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 14:32:28.735  INFO 4828 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 14:32:28.736  INFO 4828 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 14:32:28.737  INFO 4828 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 14:32:28.739  INFO 4828 --- [http-nio-8080-exec-1] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 14:32:28.739  INFO 4828 --- [http-nio-8080-exec-1] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 14:32:28.740  INFO 4828 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 14:41:52.903  INFO 4828 --- [http-nio-8080-exec-4] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/session/api/admin/relations
2025-05-28 14:41:52.907 ERROR 4828 --- [http-nio-8080-exec-4] c.e.p.security.JwtTokenProvider          : JWT验证失败: JWT strings must contain exactly 2 period characters. Found: 0
2025-05-28 14:41:52.909  INFO 4828 --- [http-nio-8080-exec-4] c.e.p.security.JwtAuthenticationFilter   : 请求不包含有效JWT令牌
2025-05-28 14:42:19.966  INFO 4828 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/session/api/admin/relations
2025-05-28 14:42:19.970 ERROR 4828 --- [http-nio-8080-exec-6] c.e.p.security.JwtTokenProvider          : JWT验证失败: JWT strings must contain exactly 2 period characters. Found: 0
2025-05-28 14:42:19.970  INFO 4828 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 请求不包含有效JWT令牌
2025-05-28 14:42:41.055  INFO 4828 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 处理请求: POST /api/session
2025-05-28 14:42:41.055  INFO 4828 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 请求不包含有效JWT令牌
2025-05-28 14:42:41.134  INFO 4828 --- [http-nio-8080-exec-7] c.e.p.controller.AuthController          : 收到登录请求: username=13000000000
2025-05-28 14:42:41.135  INFO 4828 --- [http-nio-8080-exec-7] c.e.p.controller.AuthController          : 检测到管理员登录请求
2025-05-28 14:42:41.139  INFO 4828 --- [http-nio-8080-exec-7] c.e.p.service.AuthService                : 用户登录: username=13000000000
2025-05-28 14:42:41.139  INFO 4828 --- [http-nio-8080-exec-7] c.e.p.service.AuthService                : 检测到管理员登录，使用管理员专用登录方法
2025-05-28 14:42:41.140  INFO 4828 --- [http-nio-8080-exec-7] c.e.p.service.AuthService                : 管理员登录: 13000000000
2025-05-28 14:42:41.143  INFO 4828 --- [http-nio-8080-exec-7] c.e.p.service.AuthService                : 找到管理员用户: id=a421d099-6273-464a-b7d7-266d61cf07ea, isAdmin=true
2025-05-28 14:42:41.201  INFO 4828 --- [http-nio-8080-exec-7] c.e.p.service.AuthService                : 创建管理员认证对象，权限: [ROLE_ADMIN]
2025-05-28 14:42:41.202  INFO 4828 --- [http-nio-8080-exec-7] c.e.p.security.JwtTokenProvider          : 生成token: username=13000000000, roles=ROLE_ADMIN
2025-05-28 14:42:41.203  INFO 4828 --- [http-nio-8080-exec-7] c.e.p.service.AuthService                : 生成管理员token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCIsInJvbGVzIjoiUk9MRV9BRE1JTiIsImlhdCI6MTc0ODQxNDU2MSwiZXhwIjoxNzQ4NTAwOTYxfQ.__0agMFEFUwiI96ZxuuZAcJT4Jc-MC_rBNvQeTYaXj4
2025-05-28 14:42:41.204  INFO 4828 --- [http-nio-8080-exec-7] c.e.p.service.AuthService                : 管理员登录成功: userId=a421d099-6273-464a-b7d7-266d61cf07ea, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCIsInJvbGVzIjoiUk9MRV9BRE1JTiIsImlhdCI6MTc0ODQxNDU2MSwiZXhwIjoxNzQ4NTAwOTYxfQ.__0agMFEFUwiI96ZxuuZAcJT4Jc-MC_rBNvQeTYaXj4
2025-05-28 14:42:41.204  INFO 4828 --- [http-nio-8080-exec-7] c.e.p.controller.AuthController          : 登录成功: userId=a421d099-6273-464a-b7d7-266d61cf07ea, isAdmin=true, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCIsInJvbGVzIjoiUk9MRV9BRE1JTiIsImlhdCI6MTc0ODQxNDU2MSwiZXhwIjoxNzQ4NTAwOTYxfQ.__0agMFEFUwiI96ZxuuZAcJT4Jc-MC_rBNvQeTYaXj4
2025-05-28 14:42:53.185  INFO 4828 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/session/api/admin/relations
2025-05-28 14:42:53.188  INFO 4828 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 14:42:53.190  INFO 4828 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 13000000000
2025-05-28 14:42:53.192  INFO 4828 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=13000000000
2025-05-28 14:42:53.198  INFO 4828 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 找到用户: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true, isDoctor=false, isPatient=false
2025-05-28 14:42:53.200  INFO 4828 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 用户拥有管理员角色
2025-05-28 14:42:53.202  INFO 4828 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 用户 13000000000 的权限: [ROLE_ADMIN]
2025-05-28 14:42:53.203  INFO 4828 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=13000000000, authorities=[ROLE_ADMIN]
2025-05-28 14:42:53.205  INFO 4828 --- [http-nio-8080-exec-8] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_ADMIN
2025-05-28 14:42:53.205  INFO 4828 --- [http-nio-8080-exec-8] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_ADMIN]
2025-05-28 14:42:53.206  INFO 4828 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=13000000000, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], authorities=[ROLE_ADMIN]
2025-05-28 14:46:43.638  INFO 4828 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/session/api/admin/relations
2025-05-28 14:46:43.641  INFO 4828 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 14:46:43.642  INFO 4828 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 13000000000
2025-05-28 14:46:43.643  INFO 4828 --- [http-nio-8080-exec-2] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=13000000000
2025-05-28 14:46:43.647  INFO 4828 --- [http-nio-8080-exec-2] c.e.p.security.CustomUserDetailsService  : 找到用户: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true, isDoctor=false, isPatient=false
2025-05-28 14:46:43.648  INFO 4828 --- [http-nio-8080-exec-2] c.e.p.security.CustomUserDetailsService  : 用户拥有管理员角色
2025-05-28 14:46:43.648  INFO 4828 --- [http-nio-8080-exec-2] c.e.p.security.CustomUserDetailsService  : 用户 13000000000 的权限: [ROLE_ADMIN]
2025-05-28 14:46:43.648  INFO 4828 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=13000000000, authorities=[ROLE_ADMIN]
2025-05-28 14:46:43.649  INFO 4828 --- [http-nio-8080-exec-2] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_ADMIN
2025-05-28 14:46:43.650  INFO 4828 --- [http-nio-8080-exec-2] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_ADMIN]
2025-05-28 14:46:43.650  INFO 4828 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=13000000000, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], authorities=[ROLE_ADMIN]
2025-05-28 14:46:46.612  INFO 4828 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 14:46:46.615  INFO 4828 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-05-28 14:46:46.627  INFO 4828 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-05-28 14:46:48.475  INFO 28460 --- [main] c.e.p.PatientManagementSystemApplication : Starting PatientManagementSystemApplication using Java 21.0.7 on 少华从文 with PID 28460 (C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes started by 10263 in C:\Users\10263\Downloads\patient-management-system-complete)
2025-05-28 14:46:48.476 DEBUG 28460 --- [main] c.e.p.PatientManagementSystemApplication : Running with Spring Boot v2.7.14, Spring v5.3.29
2025-05-28 14:46:48.477  INFO 28460 --- [main] c.e.p.PatientManagementSystemApplication : No active profile set, falling back to 1 default profile: "default"
2025-05-28 14:46:49.336  INFO 28460 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-28 14:46:49.419  INFO 28460 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 73 ms. Found 6 JPA repository interfaces.
2025-05-28 14:46:50.337  INFO 28460 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-05-28 14:46:50.351  INFO 28460 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-05-28 14:46:50.352  INFO 28460 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-05-28 14:46:50.490  INFO 28460 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring embedded WebApplicationContext
2025-05-28 14:46:50.491  INFO 28460 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1966 ms
2025-05-28 14:46:50.809  WARN 28460 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-28 14:46:51.357  INFO 28460 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-28 14:46:51.526  INFO 28460 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-05-28 14:46:52.356  INFO 28460 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 14:46:52.783 DEBUG 28460 --- [main] c.e.p.security.JwtAuthenticationFilter   : Filter 'jwtAuthenticationFilter' configured for use
2025-05-28 14:46:52.797  INFO 28460 --- [main] c.e.p.config.AdminAccountInitializer     : AdminAccountInitializer初始化，管理员账号: 13000000000 
2025-05-28 14:46:53.345  INFO 28460 --- [main] c.e.p.service.AuthService                : === 开始初始化管理员账号 ===
2025-05-28 14:46:53.509  INFO 28460 --- [main] c.e.p.service.AuthService                : 找到管理员账号: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true
2025-05-28 14:46:53.511  INFO 28460 --- [main] c.e.p.service.AuthService                : === 管理员账号初始化完成 ===
2025-05-28 14:46:53.732  INFO 28460 --- [main] c.e.p.service.DataService                : Python脚本已复制到临时可执行路径: C:\Users\10263\AppData\Local\Temp\pms_scripts_12ca30fc\processorOfRawData.py
2025-05-28 14:46:54.045  INFO 28460 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2df24f19, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@c76762, org.springframework.security.web.context.SecurityContextPersistenceFilter@30d944d8, org.springframework.security.web.header.HeaderWriterFilter@79735611, org.springframework.web.filter.CorsFilter@5318731f, org.springframework.security.web.authentication.logout.LogoutFilter@113e6e06, com.example.patientmanagementsystem.security.JwtAuthenticationFilter@af57949, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7fa2473a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2aeb3f3b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2db82155, org.springframework.security.web.session.SessionManagementFilter@401d83ce, org.springframework.security.web.access.ExceptionTranslationFilter@73072745, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@68c3aa38]
2025-05-28 14:46:55.128  INFO 28460 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path '/api'
2025-05-28 14:46:55.144  INFO 28460 --- [main] c.e.p.PatientManagementSystemApplication : Started PatientManagementSystemApplication in 7.09 seconds (JVM running for 7.478)
2025-05-28 14:46:55.152  INFO 28460 --- [main] c.e.p.config.AdminAccountInitializer     : 开始初始化管理员账号...
2025-05-28 14:46:55.159  INFO 28460 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号已存在，ID: 9a834101-416a-4a9f-b92b-687b2ec6eecf, isAdmin: true
2025-05-28 14:46:55.315  INFO 28460 --- [main] c.e.p.config.AdminAccountInitializer     : 更新管理员密码和信息完成
2025-05-28 14:46:55.419  INFO 28460 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号验证: ID=9a834101-416a-4a9f-b92b-687b2ec6eecf, isAdmin=true, passwordMatches=true
2025-05-28 14:46:55.419  INFO 28460 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号初始化完成
2025-05-28 14:46:55.441  INFO 28460 --- [main] c.e.p.config.AdminUserInitializer        : Default admin user with phone: 13000000000  already exists.
2025-05-28 14:46:55.510  INFO 28460 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 开始全面修复管理员账号和权限...
2025-05-28 14:46:55.519  INFO 28460 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 数据库中管理员角色标志: 1
2025-05-28 14:46:55.595  INFO 28460 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员密码匹配: true
2025-05-28 14:46:55.597  INFO 28460 --- [main] c.e.p.security.JwtTokenProvider          : 生成token: username=13000000000 , roles=ROLE_ADMIN
2025-05-28 14:46:55.662  INFO 28460 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 生成管理员token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCAiLCJyb2xlcyI6IlJPTEVfQURNSU4iLCJpYXQiOjE3NDg0MTQ4MTUsImV4cCI6MTc0ODUwMTIxNX0.JsfBhBA7aGzWzg4yBAGWT-jxUYIKbwO1GLCNa2M-cbM
2025-05-28 14:46:55.689  INFO 28460 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : Token中的角色: ROLE_ADMIN
2025-05-28 14:46:55.689  INFO 28460 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员账号和权限修复完成
2025-05-28 14:46:55.690  INFO 28460 --- [main] c.e.p.config.AdminRoleFixConfig          : 开始修复管理员角色...
2025-05-28 14:46:55.694  INFO 28460 --- [main] c.e.p.config.AdminRoleFixConfig          : 找到管理员账号: 13000000000  (ID: 9a834101-416a-4a9f-b92b-687b2ec6eecf)
2025-05-28 14:46:55.695  INFO 28460 --- [main] c.e.p.config.AdminRoleFixConfig          : 管理员角色已正确设置，无需更新
2025-05-28 14:46:55.696  INFO 28460 --- [main] c.e.p.config.AdminRoleFixConfig          : 数据库中管理员角色标志: 1
2025-05-28 14:46:55.697  INFO 28460 --- [main] c.e.p.config.AdminUserFixConfig          : 开始强制重新创建管理员账号...
2025-05-28 14:46:55.700  INFO 28460 --- [main] c.e.p.config.AdminUserFixConfig          : 找到现有管理员账号，准备删除重建: 13000000000 
2025-05-28 14:46:55.799  INFO 28460 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员账号强制重建完成: 13000000000  (ID: 04ac46ba-4a3e-48ea-aefc-0a2dabeb2ed0)
2025-05-28 14:46:55.800  INFO 28460 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员密码已加密: $2a$10$ru7gH.VHV4FxTQ2OFbUQLes9EeseYASJjwYVKDhd6LO2C24V4O1Sy
2025-05-28 14:46:55.862  INFO 28460 --- [main] c.e.p.config.AdminUserFixConfig          : 密码匹配验证: 成功
2025-05-28 14:46:55.863  INFO 28460 --- [main] c.e.p.config.DirectAdminFixConfig        : 开始直接数据库操作修复管理员账号...
2025-05-28 14:46:55.864  INFO 28460 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号已存在，更新账号信息
2025-05-28 14:46:55.938  INFO 28460 --- [main] c.e.p.config.DirectAdminFixConfig        : 更新管理员账号: 1 行受影响
2025-05-28 14:46:56.020  INFO 28460 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号验证: ID=04ac46ba-4a3e-48ea-aefc-0a2dabeb2ed0, isAdmin=true, passwordMatches=true
2025-05-28 14:46:56.021  INFO 28460 --- [main] c.e.p.config.DirectAdminFixConfig        : 直接数据库操作修复管理员账号完成
2025-05-28 14:46:56.022  INFO 28460 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 开始紧急修复管理员账号...
2025-05-28 14:46:56.023  INFO 28460 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员账号已存在，尝试更新角色标志
2025-05-28 14:46:56.025  INFO 28460 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新管理员角色标志: 1 行受影响
2025-05-28 14:46:56.026  INFO 28460 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新后管理员角色标志: 1
2025-05-28 14:46:56.091  INFO 28460 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员密码匹配，无需更新
2025-05-28 14:46:56.091  INFO 28460 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 紧急修复管理员账号完成
2025-05-28 14:47:05.987  INFO 28460 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-28 14:47:05.987  INFO 28460 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-05-28 14:47:05.990  INFO 28460 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2025-05-28 14:47:06.013  INFO 28460 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/admin/relations
2025-05-28 14:47:06.016  INFO 28460 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 14:47:06.017  INFO 28460 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 14:47:06.018  INFO 28460 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 14:47:06.022  INFO 28460 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 14:47:06.023  INFO 28460 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 14:47:06.023  INFO 28460 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 14:47:06.025  INFO 28460 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 14:47:06.027  INFO 28460 --- [http-nio-8080-exec-1] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 14:47:06.028  INFO 28460 --- [http-nio-8080-exec-1] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 14:47:06.029  INFO 28460 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 14:49:03.380  INFO 28460 --- [http-nio-8080-exec-5] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/admin/relations
2025-05-28 14:49:03.383  INFO 28460 --- [http-nio-8080-exec-5] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 14:49:03.386  INFO 28460 --- [http-nio-8080-exec-5] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 14:49:03.387  INFO 28460 --- [http-nio-8080-exec-5] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 14:49:03.391  INFO 28460 --- [http-nio-8080-exec-5] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 14:49:03.392  INFO 28460 --- [http-nio-8080-exec-5] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 14:49:03.393  INFO 28460 --- [http-nio-8080-exec-5] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 14:49:03.393  INFO 28460 --- [http-nio-8080-exec-5] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 14:49:03.394  INFO 28460 --- [http-nio-8080-exec-5] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 14:49:03.395  INFO 28460 --- [http-nio-8080-exec-5] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 14:49:03.395  INFO 28460 --- [http-nio-8080-exec-5] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 14:49:34.819  INFO 28460 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 处理请求: POST /api/admin/relations
2025-05-28 14:49:34.822  INFO 28460 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 14:49:34.824  INFO 28460 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 14:49:34.826  INFO 28460 --- [http-nio-8080-exec-6] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 14:49:34.831  INFO 28460 --- [http-nio-8080-exec-6] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 14:49:34.831  INFO 28460 --- [http-nio-8080-exec-6] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 14:49:34.831  INFO 28460 --- [http-nio-8080-exec-6] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 14:49:34.832  INFO 28460 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 14:49:34.833  INFO 28460 --- [http-nio-8080-exec-6] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 14:49:34.833  INFO 28460 --- [http-nio-8080-exec-6] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 14:49:34.834  INFO 28460 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 14:50:26.685  INFO 28460 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 处理请求: POST /api/admin/relations
2025-05-28 14:50:26.689  INFO 28460 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 14:50:26.694  INFO 28460 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 14:50:26.695  INFO 28460 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 14:50:26.706  INFO 28460 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 14:50:26.707  INFO 28460 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 14:50:26.708  INFO 28460 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 14:50:26.709  INFO 28460 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 14:50:26.714  INFO 28460 --- [http-nio-8080-exec-7] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 14:50:26.716  INFO 28460 --- [http-nio-8080-exec-7] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 14:50:26.717  INFO 28460 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 14:50:37.510  INFO 28460 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 处理请求: POST /api/admin/relations
2025-05-28 14:50:37.514  INFO 28460 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 14:50:37.516  INFO 28460 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 14:50:37.517  INFO 28460 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 14:50:37.523  INFO 28460 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 14:50:37.524  INFO 28460 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 14:50:37.525  INFO 28460 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 14:50:37.527  INFO 28460 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 14:50:37.530  INFO 28460 --- [http-nio-8080-exec-8] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 14:50:37.531  INFO 28460 --- [http-nio-8080-exec-8] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 14:50:37.532  INFO 28460 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 14:51:29.072  INFO 28460 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 14:51:29.075  INFO 28460 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-05-28 14:51:29.088  INFO 28460 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-05-28 14:51:31.043  INFO 7084 --- [main] c.e.p.PatientManagementSystemApplication : Starting PatientManagementSystemApplication using Java 21.0.7 on 少华从文 with PID 7084 (C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes started by 10263 in C:\Users\10263\Downloads\patient-management-system-complete)
2025-05-28 14:51:31.046 DEBUG 7084 --- [main] c.e.p.PatientManagementSystemApplication : Running with Spring Boot v2.7.14, Spring v5.3.29
2025-05-28 14:51:31.046  INFO 7084 --- [main] c.e.p.PatientManagementSystemApplication : No active profile set, falling back to 1 default profile: "default"
2025-05-28 14:51:31.831  INFO 7084 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-28 14:51:31.916  INFO 7084 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 74 ms. Found 6 JPA repository interfaces.
2025-05-28 14:51:32.825  INFO 7084 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-05-28 14:51:32.836  INFO 7084 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-05-28 14:51:32.837  INFO 7084 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-05-28 14:51:32.960  INFO 7084 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring embedded WebApplicationContext
2025-05-28 14:51:32.961  INFO 7084 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1860 ms
2025-05-28 14:51:33.306  WARN 7084 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-28 14:51:33.735  INFO 7084 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-28 14:51:33.870  INFO 7084 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-05-28 14:51:34.660  INFO 7084 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 14:51:35.165 DEBUG 7084 --- [main] c.e.p.security.JwtAuthenticationFilter   : Filter 'jwtAuthenticationFilter' configured for use
2025-05-28 14:51:35.182  INFO 7084 --- [main] c.e.p.config.AdminAccountInitializer     : AdminAccountInitializer初始化，管理员账号: 13000000000 
2025-05-28 14:51:35.678  INFO 7084 --- [main] c.e.p.service.AuthService                : === 开始初始化管理员账号 ===
2025-05-28 14:51:35.781  INFO 7084 --- [main] c.e.p.service.AuthService                : 找到管理员账号: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true
2025-05-28 14:51:35.782  INFO 7084 --- [main] c.e.p.service.AuthService                : === 管理员账号初始化完成 ===
2025-05-28 14:51:35.946  INFO 7084 --- [main] c.e.p.service.DataService                : Python脚本已复制到临时可执行路径: C:\Users\10263\AppData\Local\Temp\pms_scripts_fcb66ea6\processorOfRawData.py
2025-05-28 14:51:36.201  INFO 7084 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@294ebdae, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@e280006, org.springframework.security.web.context.SecurityContextPersistenceFilter@1fc4b8d6, org.springframework.security.web.header.HeaderWriterFilter@401d83ce, org.springframework.web.filter.CorsFilter@54e3cba2, org.springframework.security.web.authentication.logout.LogoutFilter@7a57c5d9, com.example.patientmanagementsystem.security.JwtAuthenticationFilter@542754be, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2dbc66f0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3fe21d0e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4f1aa2bc, org.springframework.security.web.session.SessionManagementFilter@13f17b8f, org.springframework.security.web.access.ExceptionTranslationFilter@5466a819, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@55849272]
2025-05-28 14:51:37.177  INFO 7084 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path '/api'
2025-05-28 14:51:37.191  INFO 7084 --- [main] c.e.p.PatientManagementSystemApplication : Started PatientManagementSystemApplication in 6.558 seconds (JVM running for 6.879)
2025-05-28 14:51:37.200  INFO 7084 --- [main] c.e.p.config.AdminAccountInitializer     : 开始初始化管理员账号...
2025-05-28 14:51:37.205  INFO 7084 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号已存在，ID: 04ac46ba-4a3e-48ea-aefc-0a2dabeb2ed0, isAdmin: true
2025-05-28 14:51:37.315  INFO 7084 --- [main] c.e.p.config.AdminAccountInitializer     : 更新管理员密码和信息完成
2025-05-28 14:51:37.409  INFO 7084 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号验证: ID=04ac46ba-4a3e-48ea-aefc-0a2dabeb2ed0, isAdmin=true, passwordMatches=true
2025-05-28 14:51:37.410  INFO 7084 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号初始化完成
2025-05-28 14:51:37.425  INFO 7084 --- [main] c.e.p.config.AdminUserInitializer        : Default admin user with phone: 13000000000  already exists.
2025-05-28 14:51:37.486  INFO 7084 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 开始全面修复管理员账号和权限...
2025-05-28 14:51:37.496  INFO 7084 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 数据库中管理员角色标志: 1
2025-05-28 14:51:37.571  INFO 7084 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员密码匹配: true
2025-05-28 14:51:37.573  INFO 7084 --- [main] c.e.p.security.JwtTokenProvider          : 生成token: username=13000000000 , roles=ROLE_ADMIN
2025-05-28 14:51:37.615  INFO 7084 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 生成管理员token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCAiLCJyb2xlcyI6IlJPTEVfQURNSU4iLCJpYXQiOjE3NDg0MTUwOTcsImV4cCI6MTc0ODUwMTQ5N30.C4BeDDQsn9ASHrHEYqXL1PMsOjhZ-RMJduYjrpGPwTg
2025-05-28 14:51:37.636  INFO 7084 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : Token中的角色: ROLE_ADMIN
2025-05-28 14:51:37.637  INFO 7084 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员账号和权限修复完成
2025-05-28 14:51:37.637  INFO 7084 --- [main] c.e.p.config.AdminRoleFixConfig          : 开始修复管理员角色...
2025-05-28 14:51:37.640  INFO 7084 --- [main] c.e.p.config.AdminRoleFixConfig          : 找到管理员账号: 13000000000  (ID: 04ac46ba-4a3e-48ea-aefc-0a2dabeb2ed0)
2025-05-28 14:51:37.642  INFO 7084 --- [main] c.e.p.config.AdminRoleFixConfig          : 管理员角色已正确设置，无需更新
2025-05-28 14:51:37.643  INFO 7084 --- [main] c.e.p.config.AdminRoleFixConfig          : 数据库中管理员角色标志: 1
2025-05-28 14:51:37.644  INFO 7084 --- [main] c.e.p.config.AdminUserFixConfig          : 开始强制重新创建管理员账号...
2025-05-28 14:51:37.647  INFO 7084 --- [main] c.e.p.config.AdminUserFixConfig          : 找到现有管理员账号，准备删除重建: 13000000000 
2025-05-28 14:51:37.737  INFO 7084 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员账号强制重建完成: 13000000000  (ID: 7ae87b7f-1572-4cc1-81c2-3af78bf90e70)
2025-05-28 14:51:37.737  INFO 7084 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员密码已加密: $2a$10$xaSs.F1itTguXJ7na5WJk.k49ksvJZ7sFmbcCnEnMVrooBo4CsrZG
2025-05-28 14:51:37.796  INFO 7084 --- [main] c.e.p.config.AdminUserFixConfig          : 密码匹配验证: 成功
2025-05-28 14:51:37.797  INFO 7084 --- [main] c.e.p.config.DirectAdminFixConfig        : 开始直接数据库操作修复管理员账号...
2025-05-28 14:51:37.799  INFO 7084 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号已存在，更新账号信息
2025-05-28 14:51:37.868  INFO 7084 --- [main] c.e.p.config.DirectAdminFixConfig        : 更新管理员账号: 1 行受影响
2025-05-28 14:51:37.927  INFO 7084 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号验证: ID=7ae87b7f-1572-4cc1-81c2-3af78bf90e70, isAdmin=true, passwordMatches=true
2025-05-28 14:51:37.928  INFO 7084 --- [main] c.e.p.config.DirectAdminFixConfig        : 直接数据库操作修复管理员账号完成
2025-05-28 14:51:37.928  INFO 7084 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 开始紧急修复管理员账号...
2025-05-28 14:51:37.929  INFO 7084 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员账号已存在，尝试更新角色标志
2025-05-28 14:51:37.931  INFO 7084 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新管理员角色标志: 1 行受影响
2025-05-28 14:51:37.932  INFO 7084 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新后管理员角色标志: 1
2025-05-28 14:51:38.002  INFO 7084 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员密码匹配，无需更新
2025-05-28 14:51:38.004  INFO 7084 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 紧急修复管理员账号完成
2025-05-28 14:51:41.429  INFO 7084 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-28 14:51:41.430  INFO 7084 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-05-28 14:51:41.431  INFO 7084 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-05-28 14:51:41.441  INFO 7084 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 处理请求: POST /api/admin/relations
2025-05-28 14:51:41.443  INFO 7084 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 14:51:41.445  INFO 7084 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 14:51:41.446  INFO 7084 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 14:51:41.449  INFO 7084 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 14:51:41.450  INFO 7084 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 14:51:41.451  INFO 7084 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 14:51:41.452  INFO 7084 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 14:51:41.454  INFO 7084 --- [http-nio-8080-exec-1] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 14:51:41.454  INFO 7084 --- [http-nio-8080-exec-1] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 14:51:41.455  INFO 7084 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 14:53:40.000  INFO 7084 --- [http-nio-8080-exec-5] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/admin/relations
2025-05-28 14:53:40.002  INFO 7084 --- [http-nio-8080-exec-5] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 14:53:40.005  INFO 7084 --- [http-nio-8080-exec-5] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 13000000000
2025-05-28 14:53:40.005  INFO 7084 --- [http-nio-8080-exec-5] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=13000000000
2025-05-28 14:53:40.009  INFO 7084 --- [http-nio-8080-exec-5] c.e.p.security.CustomUserDetailsService  : 找到用户: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true, isDoctor=false, isPatient=false
2025-05-28 14:53:40.010  INFO 7084 --- [http-nio-8080-exec-5] c.e.p.security.CustomUserDetailsService  : 用户拥有管理员角色
2025-05-28 14:53:40.011  INFO 7084 --- [http-nio-8080-exec-5] c.e.p.security.CustomUserDetailsService  : 用户 13000000000 的权限: [ROLE_ADMIN]
2025-05-28 14:53:40.012  INFO 7084 --- [http-nio-8080-exec-5] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=13000000000, authorities=[ROLE_ADMIN]
2025-05-28 14:53:40.014  INFO 7084 --- [http-nio-8080-exec-5] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_ADMIN
2025-05-28 14:53:40.014  INFO 7084 --- [http-nio-8080-exec-5] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_ADMIN]
2025-05-28 14:53:40.015  INFO 7084 --- [http-nio-8080-exec-5] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=13000000000, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], authorities=[ROLE_ADMIN]
2025-05-28 14:54:28.407  INFO 7084 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 处理请求: POST /api/admin/relations
2025-05-28 14:54:28.409  INFO 7084 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 14:54:28.412  INFO 7084 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 13000000000
2025-05-28 14:54:28.412  INFO 7084 --- [http-nio-8080-exec-6] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=13000000000
2025-05-28 14:54:28.414  INFO 7084 --- [http-nio-8080-exec-6] c.e.p.security.CustomUserDetailsService  : 找到用户: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true, isDoctor=false, isPatient=false
2025-05-28 14:54:28.416  INFO 7084 --- [http-nio-8080-exec-6] c.e.p.security.CustomUserDetailsService  : 用户拥有管理员角色
2025-05-28 14:54:28.416  INFO 7084 --- [http-nio-8080-exec-6] c.e.p.security.CustomUserDetailsService  : 用户 13000000000 的权限: [ROLE_ADMIN]
2025-05-28 14:54:28.416  INFO 7084 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=13000000000, authorities=[ROLE_ADMIN]
2025-05-28 14:54:28.418  INFO 7084 --- [http-nio-8080-exec-6] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_ADMIN
2025-05-28 14:54:28.418  INFO 7084 --- [http-nio-8080-exec-6] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_ADMIN]
2025-05-28 14:54:28.418  INFO 7084 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=13000000000, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], authorities=[ROLE_ADMIN]
2025-05-28 14:54:28.473  INFO 7084 --- [http-nio-8080-exec-6] c.e.p.service.RelationService            : Attempting to add relation. Requested doctorId: 18b36498-9bb5-4492-bdae-dbd2616b2890, patientId: c49f68f3-43dc-4411-b09a-f04a5cbe9624
2025-05-28 14:54:28.474  INFO 7084 --- [http-nio-8080-exec-6] c.e.p.service.RelationService            : Authenticated username: 13000000000
2025-05-28 14:54:28.474  INFO 7084 --- [http-nio-8080-exec-6] c.e.p.service.RelationService            : User roles: isDoctor=false, isAdmin=true
2025-05-28 14:54:28.474  INFO 7084 --- [http-nio-8080-exec-6] c.e.p.service.RelationService            : Admin request. Using doctorIdFromRequest: 18b36498-9bb5-4492-bdae-dbd2616b2890
2025-05-28 14:54:28.475  INFO 7084 --- [http-nio-8080-exec-6] c.e.p.service.RelationService            : Final doctorId to use for operation: 18b36498-9bb5-4492-bdae-dbd2616b2890
2025-05-28 14:54:28.510  INFO 7084 --- [http-nio-8080-exec-6] c.e.p.service.RelationService            : Successfully added relation for doctorId: 18b36498-9bb5-4492-bdae-dbd2616b2890 and patientId: c49f68f3-43dc-4411-b09a-f04a5cbe9624
2025-05-28 14:58:01.752  INFO 7084 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 处理请求: POST /api/admin/relations
2025-05-28 14:58:01.756  INFO 7084 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 14:58:01.757  INFO 7084 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 14:58:01.758  INFO 7084 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 14:58:01.761  INFO 7084 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 14:58:01.761  INFO 7084 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 14:58:01.762  INFO 7084 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 14:58:01.762  INFO 7084 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 14:58:01.763  INFO 7084 --- [http-nio-8080-exec-8] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 14:58:01.764  INFO 7084 --- [http-nio-8080-exec-8] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 14:58:01.764  INFO 7084 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 15:01:55.354  INFO 7084 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 处理请求: POST /api/admin/relations
2025-05-28 15:01:55.358  INFO 7084 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 15:01:55.360  INFO 7084 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 15:01:55.361  INFO 7084 --- [http-nio-8080-exec-2] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 15:01:55.366  INFO 7084 --- [http-nio-8080-exec-2] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 15:01:55.367  INFO 7084 --- [http-nio-8080-exec-2] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 15:01:55.367  INFO 7084 --- [http-nio-8080-exec-2] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 15:01:55.368  INFO 7084 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 15:01:55.369  INFO 7084 --- [http-nio-8080-exec-2] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 15:01:55.370  INFO 7084 --- [http-nio-8080-exec-2] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 15:01:55.370  INFO 7084 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 15:06:58.988  INFO 7084 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 15:06:58.992  INFO 7084 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-05-28 15:06:59.004  INFO 7084 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-05-28 15:07:00.948  INFO 21876 --- [main] c.e.p.PatientManagementSystemApplication : Starting PatientManagementSystemApplication using Java 21.0.7 on 少华从文 with PID 21876 (C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes started by 10263 in C:\Users\10263\Downloads\patient-management-system-complete)
2025-05-28 15:07:00.950 DEBUG 21876 --- [main] c.e.p.PatientManagementSystemApplication : Running with Spring Boot v2.7.14, Spring v5.3.29
2025-05-28 15:07:00.951  INFO 21876 --- [main] c.e.p.PatientManagementSystemApplication : No active profile set, falling back to 1 default profile: "default"
2025-05-28 15:07:01.678  INFO 21876 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-28 15:07:01.755  INFO 21876 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 69 ms. Found 6 JPA repository interfaces.
2025-05-28 15:07:02.558  INFO 21876 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-05-28 15:07:02.566  INFO 21876 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-05-28 15:07:02.567  INFO 21876 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-05-28 15:07:02.706  INFO 21876 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring embedded WebApplicationContext
2025-05-28 15:07:02.707  INFO 21876 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1710 ms
2025-05-28 15:07:02.990  WARN 21876 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-28 15:07:03.424  INFO 21876 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-28 15:07:04.604 ERROR 21876 --- [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

java.sql.SQLException: Access denied for user 'your_mysql_username'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-4.0.3.jar:na]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:272) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:223) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:295) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:252) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:223) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:233) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1284) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1245) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:494) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:349) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:342) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.findEntityManagerFactory(EntityManagerFactoryUtils.java:121) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.EntityManagerFactoryAccessor.setBeanFactory(EntityManagerFactoryAccessor.java:155) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1826) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1791) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1609) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1573) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1462) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1349) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:766) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:727) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:766) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:727) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4936) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(Unknown Source) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:795) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(Unknown Source) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:249) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:428) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:922) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577) ~[spring-context-5.3.29.jar:5.3.29]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292) ~[spring-boot-2.7.14.jar:2.7.14]
	at com.example.patientmanagementsystem.PatientManagementSystemApplication.main(PatientManagementSystemApplication.java:12) ~[classes/:na]

2025-05-28 15:07:05.193  INFO 21876 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-28 15:07:06.219 ERROR 21876 --- [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

java.sql.SQLException: Access denied for user 'your_mysql_username'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-4.0.3.jar:na]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:44) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:565) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:68) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:220) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:123) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:196) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:233) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1284) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1245) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:494) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:349) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:342) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.findEntityManagerFactory(EntityManagerFactoryUtils.java:121) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.EntityManagerFactoryAccessor.setBeanFactory(EntityManagerFactoryAccessor.java:155) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1826) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1791) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1609) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1573) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1462) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1349) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:766) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:727) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:766) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:727) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4936) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(Unknown Source) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:795) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(Unknown Source) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:249) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:428) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:922) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577) ~[spring-context-5.3.29.jar:5.3.29]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292) ~[spring-boot-2.7.14.jar:2.7.14]
	at com.example.patientmanagementsystem.PatientManagementSystemApplication.main(PatientManagementSystemApplication.java:12) ~[classes/:na]

2025-05-28 15:07:06.221 ERROR 21876 --- [main] o.h.engine.jdbc.spi.SqlExceptionHelper   : Access denied for user 'your_mysql_username'@'localhost' (using password: YES)
2025-05-28 15:07:06.224 ERROR 21876 --- [main] j.LocalContainerEntityManagerFactoryBean : Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
2025-05-28 15:07:06.226 ERROR 21876 --- [main] o.s.b.web.embedded.tomcat.TomcatStarter  : Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through method 'setContentNegotationStrategy' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
2025-05-28 15:07:06.251  INFO 21876 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2025-05-28 15:07:06.255  WARN 21876 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2025-05-28 15:07:06.261  INFO 21876 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-05-28 15:07:06.287 ERROR 21876 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577) ~[spring-context-5.3.29.jar:5.3.29]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292) ~[spring-boot-2.7.14.jar:2.7.14]
	at com.example.patientmanagementsystem.PatientManagementSystemApplication.main(PatientManagementSystemApplication.java:12) ~[classes/:na]
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:481) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162) ~[spring-boot-2.7.14.jar:2.7.14]
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through method 'setContentNegotationStrategy' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:774) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:727) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:213) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:176) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:171) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:156) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4936) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(Unknown Source) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:795) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source) ~[na:na]
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.util.concurrent.AbstractExecutorService.submit(Unknown Source) ~[na:na]
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:249) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:428) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:922) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123) ~[spring-boot-2.7.14.jar:2.7.14]
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:774) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:727) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:766) ~[spring-beans-5.3.29.jar:5.3.29]
	... 64 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1609) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1573) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1462) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1349) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:766) ~[spring-beans-5.3.29.jar:5.3.29]
	... 87 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:628) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-5.3.29.jar:5.3.29]
	... 103 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:233) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1284) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1245) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:494) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:349) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:342) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.findEntityManagerFactory(EntityManagerFactoryUtils.java:121) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.EntityManagerFactoryAccessor.setBeanFactory(EntityManagerFactoryAccessor.java:155) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1826) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1791) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.29.jar:5.3.29]
	... 113 common frames omitted
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.29.jar:5.3.29]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.29.jar:5.3.29]
	... 129 common frames omitted
Caused by: org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:71) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:565) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:68) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:220) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:123) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:196) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.29.jar:5.3.29]
	... 133 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'your_mysql_username'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-4.0.3.jar:na]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:44) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	... 149 common frames omitted

2025-05-28 15:08:38.702  INFO 22132 --- [main] c.e.p.PatientManagementSystemApplication : Starting PatientManagementSystemApplication using Java 21.0.7 on 少华从文 with PID 22132 (C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes started by 10263 in C:\Users\10263\Downloads\patient-management-system-complete)
2025-05-28 15:08:38.704 DEBUG 22132 --- [main] c.e.p.PatientManagementSystemApplication : Running with Spring Boot v2.7.14, Spring v5.3.29
2025-05-28 15:08:38.705  INFO 22132 --- [main] c.e.p.PatientManagementSystemApplication : No active profile set, falling back to 1 default profile: "default"
2025-05-28 15:08:39.441  INFO 22132 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-28 15:08:39.518  INFO 22132 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 70 ms. Found 6 JPA repository interfaces.
2025-05-28 15:08:40.275  INFO 22132 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-05-28 15:08:40.283  INFO 22132 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-05-28 15:08:40.284  INFO 22132 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-05-28 15:08:40.391  INFO 22132 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring embedded WebApplicationContext
2025-05-28 15:08:40.392  INFO 22132 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1641 ms
2025-05-28 15:08:40.686  WARN 22132 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-28 15:08:41.104  INFO 22132 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-28 15:08:41.248  INFO 22132 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-05-28 15:08:41.995  INFO 22132 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 15:08:42.412 DEBUG 22132 --- [main] c.e.p.security.JwtAuthenticationFilter   : Filter 'jwtAuthenticationFilter' configured for use
2025-05-28 15:08:42.424  INFO 22132 --- [main] c.e.p.config.AdminAccountInitializer     : AdminAccountInitializer初始化，管理员账号: 13000000000 
2025-05-28 15:08:42.891 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 15:08:42.895 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.getDoctors(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:42.913 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 15:08:42.914 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.createDoctor(com.example.patientmanagementsystem.dto.DoctorRegistrationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:42.915 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 15:08:42.915 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.updateDoctor(java.lang.String,com.example.patientmanagementsystem.dto.UpdateDoctorRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:42.915 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 15:08:42.916 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.deleteDoctor(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:42.916 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 15:08:42.917 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.searchDoctors(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:42.932  INFO 22132 --- [main] c.e.p.service.AuthService                : === 开始初始化管理员账号 ===
2025-05-28 15:08:43.035  INFO 22132 --- [main] c.e.p.service.AuthService                : 找到管理员账号: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true
2025-05-28 15:08:43.036  INFO 22132 --- [main] c.e.p.service.AuthService                : === 管理员账号初始化完成 ===
2025-05-28 15:08:43.044 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or @doctorSecurityService.isDoctorSelf(#doctorId)") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 15:08:43.046 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.DoctorController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or @doctorSecurityService.isDoctorSelf(#doctorId)', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:43.168 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.updatePatient(java.lang.String,com.example.patientmanagementsystem.dto.UpdatePatientRequestDTO)
2025-05-28 15:08:43.168 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.updatePatient(java.lang.String,com.example.patientmanagementsystem.dto.UpdatePatientRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:43.169 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.deletePatient(java.lang.String)
2025-05-28 15:08:43.170 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.deletePatient(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:43.170 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.searchPatients(java.lang.String)
2025-05-28 15:08:43.170 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.searchPatients(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:43.171 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("@patientSecurityService.canAccessPatientData(#patientId)") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatientReports(java.lang.String)
2025-05-28 15:08:43.171 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatientReports(java.lang.String)]] with attributes [[authorize: '@patientSecurityService.canAccessPatientData(#patientId)', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:43.171 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatients(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 15:08:43.172 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatients(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:43.179 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.addRelation(com.example.patientmanagementsystem.dto.AddRelationRequestDTO)
2025-05-28 15:08:43.180 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.addRelation(com.example.patientmanagementsystem.dto.AddRelationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:43.181 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.updateRelation(com.example.patientmanagementsystem.dto.UpdateRelationRequestDTO)
2025-05-28 15:08:43.181 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.updateRelation(com.example.patientmanagementsystem.dto.UpdateRelationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:43.181 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.deleteRelation(java.lang.String,java.lang.String)
2025-05-28 15:08:43.182 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.deleteRelation(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:43.182 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.getRelations(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 15:08:43.182 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.getRelations(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:43.192 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 15:08:43.193 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.updateReportDetails(java.lang.String,com.example.patientmanagementsystem.dto.UpdateReportRequestDTO)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:43.194 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 15:08:43.194 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.getReportDetail(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:43.194 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 15:08:43.194 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.downloadReport(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:43.195 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 15:08:43.195 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.uploadReport(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:43.195 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 15:08:43.197 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.getPatientReports(java.lang.String,int,int)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:43.246  INFO 22132 --- [main] c.e.p.service.DataService                : Python脚本已复制到临时可执行路径: C:\Users\10263\AppData\Local\Temp\pms_scripts_97124180\processorOfRawData.py
2025-05-28 15:08:43.251 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.UploadController
2025-05-28 15:08:43.252 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.UploadController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.UploadController.getDataRecords(java.lang.String,int,int)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:43.254 DEBUG 22132 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.UploadController
2025-05-28 15:08:43.254 DEBUG 22132 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.UploadController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.UploadController.uploadFourCsvFiles(org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:08:43.526 DEBUG 22132 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/session']
2025-05-28 15:08:43.527 DEBUG 22132 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/users']
2025-05-28 15:08:43.528 DEBUG 22132 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/h2-console/**']
2025-05-28 15:08:43.528 DEBUG 22132 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasRole('ROLE_ADMIN')] for Ant [pattern='/admin/**']
2025-05-28 15:08:43.528 DEBUG 22132 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')] for Ant [pattern='/doctors/**']
2025-05-28 15:08:43.528 DEBUG 22132 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR','ROLE_PATIENT')] for Ant [pattern='/patients/**']
2025-05-28 15:08:43.528 DEBUG 22132 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2025-05-28 15:08:43.532  INFO 22132 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@e280006, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@54e3cba2, org.springframework.security.web.context.SecurityContextPersistenceFilter@77185a2, org.springframework.security.web.header.HeaderWriterFilter@795949fb, org.springframework.web.filter.CorsFilter@4f1aa2bc, org.springframework.security.web.authentication.logout.LogoutFilter@742aa00a, com.example.patientmanagementsystem.security.JwtAuthenticationFilter@5186b78a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7d381eae, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@787b7796, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@13e5c53c, org.springframework.security.web.session.SessionManagementFilter@3cc2c4b8, org.springframework.security.web.access.ExceptionTranslationFilter@3d67e3d3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2eb91767]
2025-05-28 15:08:44.558  INFO 22132 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path '/api'
2025-05-28 15:08:44.575  INFO 22132 --- [main] c.e.p.PatientManagementSystemApplication : Started PatientManagementSystemApplication in 6.28 seconds (JVM running for 6.612)
2025-05-28 15:08:44.583  INFO 22132 --- [main] c.e.p.config.AdminAccountInitializer     : 开始初始化管理员账号...
2025-05-28 15:08:44.588  INFO 22132 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号已存在，ID: 7ae87b7f-1572-4cc1-81c2-3af78bf90e70, isAdmin: true
2025-05-28 15:08:44.702  INFO 22132 --- [main] c.e.p.config.AdminAccountInitializer     : 更新管理员密码和信息完成
2025-05-28 15:08:44.803  INFO 22132 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号验证: ID=7ae87b7f-1572-4cc1-81c2-3af78bf90e70, isAdmin=true, passwordMatches=true
2025-05-28 15:08:44.804  INFO 22132 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号初始化完成
2025-05-28 15:08:44.821  INFO 22132 --- [main] c.e.p.config.AdminUserInitializer        : Default admin user with phone: 13000000000  already exists.
2025-05-28 15:08:44.883  INFO 22132 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 开始全面修复管理员账号和权限...
2025-05-28 15:08:44.894  INFO 22132 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 数据库中管理员角色标志: 1
2025-05-28 15:08:44.953  INFO 22132 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员密码匹配: true
2025-05-28 15:08:44.954  INFO 22132 --- [main] c.e.p.security.JwtTokenProvider          : 生成token: username=13000000000 , roles=ROLE_ADMIN
2025-05-28 15:08:45.012  INFO 22132 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 生成管理员token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCAiLCJyb2xlcyI6IlJPTEVfQURNSU4iLCJpYXQiOjE3NDg0MTYxMjQsImV4cCI6MTc0ODUwMjUyNH0.zYDZE2NoLUPYEZtTuCGqi0-BtUILKCroR79fZBzHgsQ
2025-05-28 15:08:45.042  INFO 22132 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : Token中的角色: ROLE_ADMIN
2025-05-28 15:08:45.042  INFO 22132 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员账号和权限修复完成
2025-05-28 15:08:45.042  INFO 22132 --- [main] c.e.p.config.AdminRoleFixConfig          : 开始修复管理员角色...
2025-05-28 15:08:45.044  INFO 22132 --- [main] c.e.p.config.AdminRoleFixConfig          : 找到管理员账号: 13000000000  (ID: 7ae87b7f-1572-4cc1-81c2-3af78bf90e70)
2025-05-28 15:08:45.046  INFO 22132 --- [main] c.e.p.config.AdminRoleFixConfig          : 管理员角色已正确设置，无需更新
2025-05-28 15:08:45.047  INFO 22132 --- [main] c.e.p.config.AdminRoleFixConfig          : 数据库中管理员角色标志: 1
2025-05-28 15:08:45.048  INFO 22132 --- [main] c.e.p.config.AdminUserFixConfig          : 开始强制重新创建管理员账号...
2025-05-28 15:08:45.051  INFO 22132 --- [main] c.e.p.config.AdminUserFixConfig          : 找到现有管理员账号，准备删除重建: 13000000000 
2025-05-28 15:08:45.143  INFO 22132 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员账号强制重建完成: 13000000000  (ID: 8677c4a6-d763-424a-9365-62a8d0a5f268)
2025-05-28 15:08:45.145  INFO 22132 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员密码已加密: $2a$10$Sk/CdVhYF64a6iKFFtATPOWR7OVBa9kLEGT1Vk7EeInGzM22YnZSW
2025-05-28 15:08:45.205  INFO 22132 --- [main] c.e.p.config.AdminUserFixConfig          : 密码匹配验证: 成功
2025-05-28 15:08:45.205  INFO 22132 --- [main] c.e.p.config.DirectAdminFixConfig        : 开始直接数据库操作修复管理员账号...
2025-05-28 15:08:45.206  INFO 22132 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号已存在，更新账号信息
2025-05-28 15:08:45.274  INFO 22132 --- [main] c.e.p.config.DirectAdminFixConfig        : 更新管理员账号: 1 行受影响
2025-05-28 15:08:45.341  INFO 22132 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号验证: ID=8677c4a6-d763-424a-9365-62a8d0a5f268, isAdmin=true, passwordMatches=true
2025-05-28 15:08:45.342  INFO 22132 --- [main] c.e.p.config.DirectAdminFixConfig        : 直接数据库操作修复管理员账号完成
2025-05-28 15:08:45.342  INFO 22132 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 开始紧急修复管理员账号...
2025-05-28 15:08:45.343  INFO 22132 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员账号已存在，尝试更新角色标志
2025-05-28 15:08:45.345  INFO 22132 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新管理员角色标志: 1 行受影响
2025-05-28 15:08:45.346  INFO 22132 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新后管理员角色标志: 1
2025-05-28 15:08:45.415  INFO 22132 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员密码匹配，无需更新
2025-05-28 15:08:45.416  INFO 22132 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 紧急修复管理员账号完成
2025-05-28 15:08:47.507  INFO 22132 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-28 15:08:47.509  INFO 22132 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-05-28 15:08:47.514  INFO 22132 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 5 ms
2025-05-28 15:08:47.531 DEBUG 22132 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /admin/relations
2025-05-28 15:08:47.535 DEBUG 22132 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 15:08:47.543  INFO 22132 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 处理请求: POST /api/admin/relations
2025-05-28 15:08:47.547  INFO 22132 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 15:08:47.549  INFO 22132 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 15:08:47.549  INFO 22132 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 15:08:47.554  INFO 22132 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 15:08:47.555  INFO 22132 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 15:08:47.556  INFO 22132 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 15:08:47.558  INFO 22132 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 15:08:47.561  INFO 22132 --- [http-nio-8080-exec-1] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 15:08:47.562  INFO 22132 --- [http-nio-8080-exec-1] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 15:08:47.563  INFO 22132 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 15:08:47.571 DEBUG 22132 --- [http-nio-8080-exec-1] o.s.s.w.a.i.FilterSecurityInterceptor    : Failed to authorize filter invocation [POST /admin/relations] with attributes [hasRole('ROLE_ADMIN')]
2025-05-28 15:08:47.573 DEBUG 22132 --- [http-nio-8080-exec-1] o.s.s.w.access.AccessDeniedHandlerImpl   : Responding with 403 status code
2025-05-28 15:08:47.573 DEBUG 22132 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 15:08:47.575 DEBUG 22132 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /error
2025-05-28 15:08:47.576 DEBUG 22132 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 15:08:47.578 DEBUG 22132 --- [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-28 15:08:47.580 DEBUG 22132 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /error
2025-05-28 15:08:47.596 DEBUG 22132 --- [http-nio-8080-exec-1] a.DefaultWebInvocationPrivilegeEvaluator : filter invocation [/error] denied for AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]

org.springframework.security.access.AccessDeniedException: Access is denied
	at org.springframework.security.access.vote.AffirmativeBased.decide(AffirmativeBased.java:73) ~[spring-security-core-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator.isAllowed(DefaultWebInvocationPrivilegeEvaluator.java:100) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator.isAllowed(DefaultWebInvocationPrivilegeEvaluator.java:67) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.RequestMatcherDelegatingWebInvocationPrivilegeEvaluator.isAllowed(RequestMatcherDelegatingWebInvocationPrivilegeEvaluator.java:76) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.boot.web.servlet.filter.ErrorPageSecurityFilter.isAllowed(ErrorPageSecurityFilter.java:88) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.filter.ErrorPageSecurityFilter.doFilter(ErrorPageSecurityFilter.java:76) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.filter.ErrorPageSecurityFilter.doFilter(ErrorPageSecurityFilter.java:70) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:106) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:87) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:427) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:373) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:237) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:166) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.lang.Thread.run(Unknown Source) ~[na:na]

2025-05-28 15:08:47.597 DEBUG 22132 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 15:12:31.828  INFO 22132 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 15:12:31.833  INFO 22132 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-05-28 15:12:31.850  INFO 22132 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-05-28 15:12:34.064  INFO 24488 --- [main] c.e.p.PatientManagementSystemApplication : Starting PatientManagementSystemApplication using Java 21.0.7 on 少华从文 with PID 24488 (C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes started by 10263 in C:\Users\10263\Downloads\patient-management-system-complete)
2025-05-28 15:12:34.066 DEBUG 24488 --- [main] c.e.p.PatientManagementSystemApplication : Running with Spring Boot v2.7.14, Spring v5.3.29
2025-05-28 15:12:34.066  INFO 24488 --- [main] c.e.p.PatientManagementSystemApplication : No active profile set, falling back to 1 default profile: "default"
2025-05-28 15:12:34.793  INFO 24488 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-28 15:12:34.866  INFO 24488 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 66 ms. Found 6 JPA repository interfaces.
2025-05-28 15:12:35.713  INFO 24488 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-05-28 15:12:35.730  INFO 24488 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-05-28 15:12:35.730  INFO 24488 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-05-28 15:12:35.826  INFO 24488 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring embedded WebApplicationContext
2025-05-28 15:12:35.826  INFO 24488 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1713 ms
2025-05-28 15:12:36.139  WARN 24488 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-28 15:12:36.586  INFO 24488 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-28 15:12:36.725  INFO 24488 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-05-28 15:12:37.483  INFO 24488 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 15:12:37.913 DEBUG 24488 --- [main] c.e.p.security.JwtAuthenticationFilter   : Filter 'jwtAuthenticationFilter' configured for use
2025-05-28 15:12:37.931  INFO 24488 --- [main] c.e.p.config.AdminAccountInitializer     : AdminAccountInitializer初始化，管理员账号: 13000000000 
2025-05-28 15:12:38.543 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 15:12:38.549 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.getDoctors(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:38.577 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 15:12:38.578 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.createDoctor(com.example.patientmanagementsystem.dto.DoctorRegistrationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:38.580 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 15:12:38.580 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.updateDoctor(java.lang.String,com.example.patientmanagementsystem.dto.UpdateDoctorRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:38.581 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 15:12:38.581 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.searchDoctors(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:38.582 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 15:12:38.582 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.deleteDoctor(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:38.605  INFO 24488 --- [main] c.e.p.service.AuthService                : === 开始初始化管理员账号 ===
2025-05-28 15:12:38.767  INFO 24488 --- [main] c.e.p.service.AuthService                : 找到管理员账号: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true
2025-05-28 15:12:38.768  INFO 24488 --- [main] c.e.p.service.AuthService                : === 管理员账号初始化完成 ===
2025-05-28 15:12:38.782 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or @doctorSecurityService.isDoctorSelf(#doctorId)") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 15:12:38.789 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.DoctorController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or @doctorSecurityService.isDoctorSelf(#doctorId)', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:38.978 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("@patientSecurityService.canAccessPatientData(#patientId)") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatientReports(java.lang.String)
2025-05-28 15:12:38.979 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatientReports(java.lang.String)]] with attributes [[authorize: '@patientSecurityService.canAccessPatientData(#patientId)', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:38.980 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.searchPatients(java.lang.String)
2025-05-28 15:12:38.981 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.searchPatients(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:38.981 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatients(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 15:12:38.982 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatients(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:38.982 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.updatePatient(java.lang.String,com.example.patientmanagementsystem.dto.UpdatePatientRequestDTO)
2025-05-28 15:12:38.983 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.updatePatient(java.lang.String,com.example.patientmanagementsystem.dto.UpdatePatientRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:38.983 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.deletePatient(java.lang.String)
2025-05-28 15:12:38.984 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.deletePatient(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:38.992 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.getRelations(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 15:12:38.993 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.getRelations(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:38.994 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.addRelation(com.example.patientmanagementsystem.dto.AddRelationRequestDTO)
2025-05-28 15:12:38.995 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.addRelation(com.example.patientmanagementsystem.dto.AddRelationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:38.995 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.deleteRelation(java.lang.String,java.lang.String)
2025-05-28 15:12:38.996 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.deleteRelation(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:38.997 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.updateRelation(com.example.patientmanagementsystem.dto.UpdateRelationRequestDTO)
2025-05-28 15:12:38.997 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.updateRelation(com.example.patientmanagementsystem.dto.UpdateRelationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:39.005 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 15:12:39.005 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.updateReportDetails(java.lang.String,com.example.patientmanagementsystem.dto.UpdateReportRequestDTO)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:39.007 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 15:12:39.007 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.getReportDetail(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:39.007 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 15:12:39.008 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.getPatientReports(java.lang.String,int,int)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:39.008 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 15:12:39.008 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.uploadReport(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:39.009 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 15:12:39.009 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.downloadReport(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:39.075  INFO 24488 --- [main] c.e.p.service.DataService                : Python脚本已复制到临时可执行路径: C:\Users\10263\AppData\Local\Temp\pms_scripts_334a2ee4\processorOfRawData.py
2025-05-28 15:12:39.082 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.UploadController
2025-05-28 15:12:39.082 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.UploadController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.UploadController.uploadFourCsvFiles(org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:39.083 DEBUG 24488 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.UploadController
2025-05-28 15:12:39.083 DEBUG 24488 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.UploadController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.UploadController.getDataRecords(java.lang.String,int,int)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:39.442 DEBUG 24488 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/session']
2025-05-28 15:12:39.443 DEBUG 24488 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/users']
2025-05-28 15:12:39.443 DEBUG 24488 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/h2-console/**']
2025-05-28 15:12:39.443 DEBUG 24488 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')] for Ant [pattern='/admin/relations/**']
2025-05-28 15:12:39.444 DEBUG 24488 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasRole('ROLE_ADMIN')] for Ant [pattern='/admin/**']
2025-05-28 15:12:39.444 DEBUG 24488 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')] for Ant [pattern='/doctors/**']
2025-05-28 15:12:39.444 DEBUG 24488 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR','ROLE_PATIENT')] for Ant [pattern='/patients/**']
2025-05-28 15:12:39.445 DEBUG 24488 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2025-05-28 15:12:39.449  INFO 24488 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4f2a9903, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@294ebdae, org.springframework.security.web.context.SecurityContextPersistenceFilter@62b0792, org.springframework.security.web.header.HeaderWriterFilter@30cb489a, org.springframework.web.filter.CorsFilter@e280006, org.springframework.security.web.authentication.logout.LogoutFilter@3bdc8975, com.example.patientmanagementsystem.security.JwtAuthenticationFilter@5d515e2c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@121c1a08, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3cc2c4b8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54e3cba2, org.springframework.security.web.session.SessionManagementFilter@281028ce, org.springframework.security.web.access.ExceptionTranslationFilter@65a3d7c9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@395abe85]
2025-05-28 15:12:40.507  INFO 24488 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path '/api'
2025-05-28 15:12:40.521  INFO 24488 --- [main] c.e.p.PatientManagementSystemApplication : Started PatientManagementSystemApplication in 6.818 seconds (JVM running for 7.138)
2025-05-28 15:12:40.530  INFO 24488 --- [main] c.e.p.config.AdminAccountInitializer     : 开始初始化管理员账号...
2025-05-28 15:12:40.537  INFO 24488 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号已存在，ID: 8677c4a6-d763-424a-9365-62a8d0a5f268, isAdmin: true
2025-05-28 15:12:40.682  INFO 24488 --- [main] c.e.p.config.AdminAccountInitializer     : 更新管理员密码和信息完成
2025-05-28 15:12:40.782  INFO 24488 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号验证: ID=8677c4a6-d763-424a-9365-62a8d0a5f268, isAdmin=true, passwordMatches=true
2025-05-28 15:12:40.783  INFO 24488 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号初始化完成
2025-05-28 15:12:40.803  INFO 24488 --- [main] c.e.p.config.AdminUserInitializer        : Default admin user with phone: 13000000000  already exists.
2025-05-28 15:12:40.865  INFO 24488 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 开始全面修复管理员账号和权限...
2025-05-28 15:12:40.875  INFO 24488 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 数据库中管理员角色标志: 1
2025-05-28 15:12:40.934  INFO 24488 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员密码匹配: true
2025-05-28 15:12:40.935  INFO 24488 --- [main] c.e.p.security.JwtTokenProvider          : 生成token: username=13000000000 , roles=ROLE_ADMIN
2025-05-28 15:12:40.976  INFO 24488 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 生成管理员token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCAiLCJyb2xlcyI6IlJPTEVfQURNSU4iLCJpYXQiOjE3NDg0MTYzNjAsImV4cCI6MTc0ODUwMjc2MH0.8gMBuxFsrMLX--Af_9e7PRpjouwTjpi5ONi0BhCJXVs
2025-05-28 15:12:41.000  INFO 24488 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : Token中的角色: ROLE_ADMIN
2025-05-28 15:12:41.001  INFO 24488 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员账号和权限修复完成
2025-05-28 15:12:41.002  INFO 24488 --- [main] c.e.p.config.AdminRoleFixConfig          : 开始修复管理员角色...
2025-05-28 15:12:41.006  INFO 24488 --- [main] c.e.p.config.AdminRoleFixConfig          : 找到管理员账号: 13000000000  (ID: 8677c4a6-d763-424a-9365-62a8d0a5f268)
2025-05-28 15:12:41.007  INFO 24488 --- [main] c.e.p.config.AdminRoleFixConfig          : 管理员角色已正确设置，无需更新
2025-05-28 15:12:41.008  INFO 24488 --- [main] c.e.p.config.AdminRoleFixConfig          : 数据库中管理员角色标志: 1
2025-05-28 15:12:41.009  INFO 24488 --- [main] c.e.p.config.AdminUserFixConfig          : 开始强制重新创建管理员账号...
2025-05-28 15:12:41.012  INFO 24488 --- [main] c.e.p.config.AdminUserFixConfig          : 找到现有管理员账号，准备删除重建: 13000000000 
2025-05-28 15:12:41.105  INFO 24488 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员账号强制重建完成: 13000000000  (ID: e86513c3-6bd9-4047-89c9-64994fedbe4e)
2025-05-28 15:12:41.106  INFO 24488 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员密码已加密: $2a$10$Y8gXdhkRp.BQXcYuxoVXxenu9WhA7.vA0cXinrEN/f/rsD1sHDYYO
2025-05-28 15:12:41.169  INFO 24488 --- [main] c.e.p.config.AdminUserFixConfig          : 密码匹配验证: 成功
2025-05-28 15:12:41.171  INFO 24488 --- [main] c.e.p.config.DirectAdminFixConfig        : 开始直接数据库操作修复管理员账号...
2025-05-28 15:12:41.174  INFO 24488 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号已存在，更新账号信息
2025-05-28 15:12:41.238  INFO 24488 --- [main] c.e.p.config.DirectAdminFixConfig        : 更新管理员账号: 1 行受影响
2025-05-28 15:12:41.315  INFO 24488 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号验证: ID=e86513c3-6bd9-4047-89c9-64994fedbe4e, isAdmin=true, passwordMatches=true
2025-05-28 15:12:41.316  INFO 24488 --- [main] c.e.p.config.DirectAdminFixConfig        : 直接数据库操作修复管理员账号完成
2025-05-28 15:12:41.316  INFO 24488 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 开始紧急修复管理员账号...
2025-05-28 15:12:41.318  INFO 24488 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员账号已存在，尝试更新角色标志
2025-05-28 15:12:41.319  INFO 24488 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新管理员角色标志: 1 行受影响
2025-05-28 15:12:41.321  INFO 24488 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新后管理员角色标志: 1
2025-05-28 15:12:41.420  INFO 24488 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员密码匹配，无需更新
2025-05-28 15:12:41.421  INFO 24488 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 紧急修复管理员账号完成
2025-05-28 15:12:48.192  INFO 24488 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-28 15:12:48.193  INFO 24488 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-05-28 15:12:48.195  INFO 24488 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2025-05-28 15:12:48.205 DEBUG 24488 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing POST /admin/relations
2025-05-28 15:12:48.209 DEBUG 24488 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 15:12:48.215  INFO 24488 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 处理请求: POST /api/admin/relations
2025-05-28 15:12:48.216  INFO 24488 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 15:12:48.217  INFO 24488 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 15:12:48.218  INFO 24488 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 15:12:48.222  INFO 24488 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 15:12:48.223  INFO 24488 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 15:12:48.223  INFO 24488 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 15:12:48.225  INFO 24488 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 15:12:48.227  INFO 24488 --- [http-nio-8080-exec-1] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 15:12:48.227  INFO 24488 --- [http-nio-8080-exec-1] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 15:12:48.228  INFO 24488 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 15:12:48.238 DEBUG 24488 --- [http-nio-8080-exec-1] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /admin/relations] with attributes [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')]
2025-05-28 15:12:48.239 DEBUG 24488 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured POST /admin/relations
2025-05-28 15:12:48.331 DEBUG 24488 --- [http-nio-8080-exec-1] o.s.s.a.i.a.MethodSecurityInterceptor    : Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.addRelation(com.example.patientmanagementsystem.dto.AddRelationRequestDTO); target is of class [com.example.patientmanagementsystem.controller.RelationController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:12:48.333  INFO 24488 --- [http-nio-8080-exec-1] c.e.p.controller.RelationController      : POST /admin/relations invoked. Request DTO: AddRelationRequestDTO(doctorId=18b36498-9bb5-4492-bdae-dbd2616b2890, patientId=c49f68f3-43dc-4411-b09a-f04a5cbe9624)
2025-05-28 15:12:48.336 DEBUG 24488 --- [http-nio-8080-exec-1] c.e.p.controller.RelationController      : Attempting to call relationService.addRelation
2025-05-28 15:12:48.341  INFO 24488 --- [http-nio-8080-exec-1] c.e.p.service.RelationService            : Attempting to add relation. Requested doctorId: 18b36498-9bb5-4492-bdae-dbd2616b2890, patientId: c49f68f3-43dc-4411-b09a-f04a5cbe9624
2025-05-28 15:12:48.342  INFO 24488 --- [http-nio-8080-exec-1] c.e.p.service.RelationService            : Authenticated username: 18743005518
2025-05-28 15:12:48.343  INFO 24488 --- [http-nio-8080-exec-1] c.e.p.service.RelationService            : User roles: isDoctor=true, isAdmin=false
2025-05-28 15:12:48.349  INFO 24488 --- [http-nio-8080-exec-1] c.e.p.service.RelationService            : User found by phone (18743005518): 223ffe8a-50ac-4006-82bb-70df8606d203
2025-05-28 15:12:48.365  INFO 24488 --- [http-nio-8080-exec-1] c.e.p.service.RelationService            : Doctor entity found by userId (223ffe8a-50ac-4006-82bb-70df8606d203): 18b36498-9bb5-4492-bdae-dbd2616b2890
2025-05-28 15:12:48.365  INFO 24488 --- [http-nio-8080-exec-1] c.e.p.service.RelationService            : Determined doctorId for current doctor: 18b36498-9bb5-4492-bdae-dbd2616b2890
2025-05-28 15:12:48.366  INFO 24488 --- [http-nio-8080-exec-1] c.e.p.service.RelationService            : Final doctorId to use for operation: 18b36498-9bb5-4492-bdae-dbd2616b2890
2025-05-28 15:12:48.390  WARN 24488 --- [http-nio-8080-exec-1] c.e.p.service.RelationService            : Relation already exists for doctorId: 18b36498-9bb5-4492-bdae-dbd2616b2890 and patientId: c49f68f3-43dc-4411-b09a-f04a5cbe9624
2025-05-28 15:12:48.409 ERROR 24488 --- [http-nio-8080-exec-1] c.e.p.controller.RelationController      : Exception in RelationController.addRelation: doctorId=18b36498-9bb5-4492-bdae-dbd2616b2890, patientId=c49f68f3-43dc-4411-b09a-f04a5cbe9624. Error: 该医患关系已存在

com.example.patientmanagementsystem.exception.ResourceAlreadyExistsException: 该医患关系已存在
	at com.example.patientmanagementsystem.service.RelationService.addRelation(RelationService.java:191) ~[classes/:na]
	at com.example.patientmanagementsystem.service.RelationService$$FastClassBySpringCGLIB$$48f38218.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.29.jar:5.3.29]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.29.jar:5.3.29]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.29.jar:5.3.29]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.29.jar:5.3.29]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-5.3.29.jar:5.3.29]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388) ~[spring-tx-5.3.29.jar:5.3.29]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-5.3.29.jar:5.3.29]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.29.jar:5.3.29]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.29.jar:5.3.29]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.29.jar:5.3.29]
	at com.example.patientmanagementsystem.service.RelationService$$EnhancerBySpringCGLIB$$b46fabc4.addRelation(<generated>) ~[classes/:na]
	at com.example.patientmanagementsystem.controller.RelationController.addRelation(RelationController.java:78) ~[classes/:na]
	at com.example.patientmanagementsystem.controller.RelationController$$FastClassBySpringCGLIB$$ad6a36c2.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.29.jar:5.3.29]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.29.jar:5.3.29]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.29.jar:5.3.29]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.29.jar:5.3.29]
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:61) ~[spring-security-core-5.7.10.jar:5.7.10]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.29.jar:5.3.29]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.29.jar:5.3.29]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.29.jar:5.3.29]
	at com.example.patientmanagementsystem.controller.RelationController$$EnhancerBySpringCGLIB$$f82e1d50.addRelation(<generated>) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Unknown Source) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555) ~[tomcat-embed-core-9.0.78.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623) ~[tomcat-embed-core-9.0.78.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at com.example.patientmanagementsystem.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:75) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.lang.Thread.run(Unknown Source) ~[na:na]

2025-05-28 15:12:48.418  WARN 24488 --- [http-nio-8080-exec-1] c.e.p.exception.GlobalExceptionHandler   : 操作失败，资源已存在: 该医患关系已存在
2025-05-28 15:12:48.454 DEBUG 24488 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 15:13:39.877 DEBUG 24488 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /admin/relations
2025-05-28 15:13:39.877 DEBUG 24488 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 15:13:39.878  INFO 24488 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 处理请求: POST /api/admin/relations
2025-05-28 15:13:39.880  INFO 24488 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 15:13:39.882  INFO 24488 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 15:13:39.882  INFO 24488 --- [http-nio-8080-exec-3] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 15:13:39.886  INFO 24488 --- [http-nio-8080-exec-3] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 15:13:39.886  INFO 24488 --- [http-nio-8080-exec-3] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 15:13:39.886  INFO 24488 --- [http-nio-8080-exec-3] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 15:13:39.887  INFO 24488 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 15:13:39.889  INFO 24488 --- [http-nio-8080-exec-3] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 15:13:39.889  INFO 24488 --- [http-nio-8080-exec-3] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 15:13:39.890  INFO 24488 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 15:13:39.890 DEBUG 24488 --- [http-nio-8080-exec-3] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /admin/relations] with attributes [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')]
2025-05-28 15:13:39.890 DEBUG 24488 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /admin/relations
2025-05-28 15:13:39.892 DEBUG 24488 --- [http-nio-8080-exec-3] o.s.s.a.i.a.MethodSecurityInterceptor    : Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.addRelation(com.example.patientmanagementsystem.dto.AddRelationRequestDTO); target is of class [com.example.patientmanagementsystem.controller.RelationController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:13:39.892  INFO 24488 --- [http-nio-8080-exec-3] c.e.p.controller.RelationController      : POST /admin/relations invoked. Request DTO: AddRelationRequestDTO(doctorId=18b36498-9bb5-4492-bdae-dbd2616b2890, patientId=c49f68f3-43dc-4411-b09a-f04a5cbe9624)
2025-05-28 15:13:39.892 DEBUG 24488 --- [http-nio-8080-exec-3] c.e.p.controller.RelationController      : Attempting to call relationService.addRelation
2025-05-28 15:13:39.893  INFO 24488 --- [http-nio-8080-exec-3] c.e.p.service.RelationService            : Attempting to add relation. Requested doctorId: 18b36498-9bb5-4492-bdae-dbd2616b2890, patientId: c49f68f3-43dc-4411-b09a-f04a5cbe9624
2025-05-28 15:13:39.894  INFO 24488 --- [http-nio-8080-exec-3] c.e.p.service.RelationService            : Authenticated username: 18743005518
2025-05-28 15:13:39.894  INFO 24488 --- [http-nio-8080-exec-3] c.e.p.service.RelationService            : User roles: isDoctor=true, isAdmin=false
2025-05-28 15:13:39.897  INFO 24488 --- [http-nio-8080-exec-3] c.e.p.service.RelationService            : User found by phone (18743005518): 223ffe8a-50ac-4006-82bb-70df8606d203
2025-05-28 15:13:39.900  INFO 24488 --- [http-nio-8080-exec-3] c.e.p.service.RelationService            : Doctor entity found by userId (223ffe8a-50ac-4006-82bb-70df8606d203): 18b36498-9bb5-4492-bdae-dbd2616b2890
2025-05-28 15:13:39.900  INFO 24488 --- [http-nio-8080-exec-3] c.e.p.service.RelationService            : Determined doctorId for current doctor: 18b36498-9bb5-4492-bdae-dbd2616b2890
2025-05-28 15:13:39.901  INFO 24488 --- [http-nio-8080-exec-3] c.e.p.service.RelationService            : Final doctorId to use for operation: 18b36498-9bb5-4492-bdae-dbd2616b2890
2025-05-28 15:13:39.917  INFO 24488 --- [http-nio-8080-exec-3] c.e.p.service.RelationService            : Successfully added relation for doctorId: 18b36498-9bb5-4492-bdae-dbd2616b2890 and patientId: c49f68f3-43dc-4411-b09a-f04a5cbe9624
2025-05-28 15:13:39.926  INFO 24488 --- [http-nio-8080-exec-3] c.e.p.controller.RelationController      : Successfully added relation: {patientName=新用户, doctorName=蔡旭, doctorId=18b36498-9bb5-4492-bdae-dbd2616b2890, patientId=c49f68f3-43dc-4411-b09a-f04a5cbe9624}
2025-05-28 15:13:39.930 DEBUG 24488 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 15:15:01.036 DEBUG 24488 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /session/api/admin/relations
2025-05-28 15:15:01.037 DEBUG 24488 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 15:15:01.039  INFO 24488 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/session/api/admin/relations
2025-05-28 15:15:01.041  INFO 24488 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 15:15:01.044  INFO 24488 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 13000000000
2025-05-28 15:15:01.046  INFO 24488 --- [http-nio-8080-exec-6] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=13000000000
2025-05-28 15:15:01.052  INFO 24488 --- [http-nio-8080-exec-6] c.e.p.security.CustomUserDetailsService  : 找到用户: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true, isDoctor=false, isPatient=false
2025-05-28 15:15:01.054  INFO 24488 --- [http-nio-8080-exec-6] c.e.p.security.CustomUserDetailsService  : 用户拥有管理员角色
2025-05-28 15:15:01.056  INFO 24488 --- [http-nio-8080-exec-6] c.e.p.security.CustomUserDetailsService  : 用户 13000000000 的权限: [ROLE_ADMIN]
2025-05-28 15:15:01.057  INFO 24488 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=13000000000, authorities=[ROLE_ADMIN]
2025-05-28 15:15:01.060  INFO 24488 --- [http-nio-8080-exec-6] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_ADMIN
2025-05-28 15:15:01.061  INFO 24488 --- [http-nio-8080-exec-6] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_ADMIN]
2025-05-28 15:15:01.061  INFO 24488 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=13000000000, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], authorities=[ROLE_ADMIN]
2025-05-28 15:15:01.063 DEBUG 24488 --- [http-nio-8080-exec-6] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /session/api/admin/relations] with attributes [authenticated]
2025-05-28 15:15:01.063 DEBUG 24488 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /session/api/admin/relations
2025-05-28 15:15:01.073 DEBUG 24488 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 15:15:01.078 DEBUG 24488 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /error
2025-05-28 15:15:01.079 DEBUG 24488 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 15:15:01.080 DEBUG 24488 --- [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-28 15:15:01.081 DEBUG 24488 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /error
2025-05-28 15:15:01.098 DEBUG 24488 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 15:15:25.430 DEBUG 24488 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /session/api/admin/relations
2025-05-28 15:15:25.430 DEBUG 24488 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 15:15:25.430  INFO 24488 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/session/api/admin/relations
2025-05-28 15:15:25.432  INFO 24488 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 15:15:25.433  INFO 24488 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 15:15:25.433  INFO 24488 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 15:15:25.436  INFO 24488 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 15:15:25.436  INFO 24488 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 15:15:25.436  INFO 24488 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 15:15:25.437  INFO 24488 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 15:15:25.439  INFO 24488 --- [http-nio-8080-exec-7] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 15:15:25.439  INFO 24488 --- [http-nio-8080-exec-7] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 15:15:25.439  INFO 24488 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 15:15:25.440 DEBUG 24488 --- [http-nio-8080-exec-7] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /session/api/admin/relations] with attributes [authenticated]
2025-05-28 15:15:25.440 DEBUG 24488 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /session/api/admin/relations
2025-05-28 15:15:25.443 DEBUG 24488 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 15:15:25.444 DEBUG 24488 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /error
2025-05-28 15:15:25.444 DEBUG 24488 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 15:15:25.445 DEBUG 24488 --- [http-nio-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-28 15:15:25.445 DEBUG 24488 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /error
2025-05-28 15:15:25.447 DEBUG 24488 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 15:16:28.927 DEBUG 24488 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /admin/relations
2025-05-28 15:16:28.927 DEBUG 24488 --- [http-nio-8080-exec-10] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 15:16:28.928  INFO 24488 --- [http-nio-8080-exec-10] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/admin/relations
2025-05-28 15:16:28.929  INFO 24488 --- [http-nio-8080-exec-10] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 15:16:28.931  INFO 24488 --- [http-nio-8080-exec-10] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 15:16:28.932  INFO 24488 --- [http-nio-8080-exec-10] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 15:16:28.935  INFO 24488 --- [http-nio-8080-exec-10] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 15:16:28.935  INFO 24488 --- [http-nio-8080-exec-10] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 15:16:28.935  INFO 24488 --- [http-nio-8080-exec-10] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 15:16:28.935  INFO 24488 --- [http-nio-8080-exec-10] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 15:16:28.936  INFO 24488 --- [http-nio-8080-exec-10] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 15:16:28.937  INFO 24488 --- [http-nio-8080-exec-10] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 15:16:28.937  INFO 24488 --- [http-nio-8080-exec-10] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 15:16:28.938 DEBUG 24488 --- [http-nio-8080-exec-10] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /admin/relations] with attributes [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')]
2025-05-28 15:16:28.938 DEBUG 24488 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /admin/relations
2025-05-28 15:16:28.944 DEBUG 24488 --- [http-nio-8080-exec-10] o.s.s.a.i.a.MethodSecurityInterceptor    : Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.getRelations(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String); target is of class [com.example.patientmanagementsystem.controller.RelationController] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 15:16:28.944  INFO 24488 --- [http-nio-8080-exec-10] c.e.p.controller.RelationController      : GET /admin/relations called with page: 1, pageSize: 10, doctorName: null, doctorPhone: null, patientName: null, patientPhone: null
2025-05-28 15:16:28.962 DEBUG 24488 --- [http-nio-8080-exec-10] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 15:16:59.189  INFO 24488 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 15:16:59.191  INFO 24488 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-05-28 15:16:59.199  INFO 24488 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-05-28 16:46:42.674  INFO 31460 --- [main] c.e.p.PatientManagementSystemApplication : Starting PatientManagementSystemApplication using Java 21.0.7 on 少华从文 with PID 31460 (C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes started by 10263 in C:\Users\10263\Downloads\patient-management-system-complete)
2025-05-28 16:46:42.676 DEBUG 31460 --- [main] c.e.p.PatientManagementSystemApplication : Running with Spring Boot v2.7.14, Spring v5.3.29
2025-05-28 16:46:42.676  INFO 31460 --- [main] c.e.p.PatientManagementSystemApplication : No active profile set, falling back to 1 default profile: "default"
2025-05-28 16:46:43.603  INFO 31460 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-28 16:46:43.700  INFO 31460 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 85 ms. Found 6 JPA repository interfaces.
2025-05-28 16:46:44.678  INFO 31460 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-05-28 16:46:44.689  INFO 31460 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-05-28 16:46:44.690  INFO 31460 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-05-28 16:46:44.837  INFO 31460 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring embedded WebApplicationContext
2025-05-28 16:46:44.838  INFO 31460 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2107 ms
2025-05-28 16:46:45.144  WARN 31460 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-28 16:46:45.696  INFO 31460 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-28 16:46:45.889  INFO 31460 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-05-28 16:46:46.875  INFO 31460 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 16:46:47.425 DEBUG 31460 --- [main] c.e.p.security.JwtAuthenticationFilter   : Filter 'jwtAuthenticationFilter' configured for use
2025-05-28 16:46:47.445  INFO 31460 --- [main] c.e.p.config.AdminAccountInitializer     : AdminAccountInitializer初始化，管理员账号: 13000000000 
2025-05-28 16:46:47.982 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 16:46:47.985 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.searchDoctors(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.013 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 16:46:48.015 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.deleteDoctor(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.016 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 16:46:48.016 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.createDoctor(com.example.patientmanagementsystem.dto.DoctorRegistrationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.017 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 16:46:48.018 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.updateDoctor(java.lang.String,com.example.patientmanagementsystem.dto.UpdateDoctorRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.019 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 16:46:48.020 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.getDoctors(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.049  INFO 31460 --- [main] c.e.p.service.AuthService                : === 开始初始化管理员账号 ===
2025-05-28 16:46:48.191  INFO 31460 --- [main] c.e.p.service.AuthService                : 找到管理员账号: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true
2025-05-28 16:46:48.192  INFO 31460 --- [main] c.e.p.service.AuthService                : === 管理员账号初始化完成 ===
2025-05-28 16:46:48.202 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or @doctorSecurityService.isDoctorSelf(#doctorId)") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 16:46:48.205 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.DoctorController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or @doctorSecurityService.isDoctorSelf(#doctorId)', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.324 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.deletePatient(java.lang.String)
2025-05-28 16:46:48.324 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.deletePatient(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.326 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatients(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 16:46:48.326 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatients(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.327 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.searchPatients(java.lang.String)
2025-05-28 16:46:48.327 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.searchPatients(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.329 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.updatePatient(java.lang.String,com.example.patientmanagementsystem.dto.UpdatePatientRequestDTO)
2025-05-28 16:46:48.329 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.updatePatient(java.lang.String,com.example.patientmanagementsystem.dto.UpdatePatientRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.330 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("@patientSecurityService.canAccessPatientData(#patientId)") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatientReports(java.lang.String)
2025-05-28 16:46:48.330 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatientReports(java.lang.String)]] with attributes [[authorize: '@patientSecurityService.canAccessPatientData(#patientId)', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.338 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.deleteRelation(java.lang.String,java.lang.String)
2025-05-28 16:46:48.339 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.deleteRelation(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.340 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.updateRelation(com.example.patientmanagementsystem.dto.UpdateRelationRequestDTO)
2025-05-28 16:46:48.341 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.updateRelation(com.example.patientmanagementsystem.dto.UpdateRelationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.341 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.getRelations(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 16:46:48.342 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.getRelations(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.343 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.addRelation(com.example.patientmanagementsystem.dto.AddRelationRequestDTO)
2025-05-28 16:46:48.344 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.addRelation(com.example.patientmanagementsystem.dto.AddRelationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.351 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 16:46:48.352 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.uploadReport(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.353 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 16:46:48.354 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.getPatientReports(java.lang.String,int,int)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.354 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 16:46:48.355 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.downloadReport(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.355 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 16:46:48.356 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.getReportDetail(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.356 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 16:46:48.357 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.updateReportDetails(java.lang.String,com.example.patientmanagementsystem.dto.UpdateReportRequestDTO)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.401  INFO 31460 --- [main] c.e.p.service.DataService                : Python脚本已复制到临时可执行路径: C:\Users\10263\AppData\Local\Temp\pms_scripts_9dabeb3b\processorOfRawData.py
2025-05-28 16:46:48.407 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.UploadController
2025-05-28 16:46:48.408 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.UploadController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.UploadController.uploadFourCsvFiles(org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.409 DEBUG 31460 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.UploadController
2025-05-28 16:46:48.409 DEBUG 31460 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.UploadController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.UploadController.getDataRecords(java.lang.String,int,int)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 16:46:48.725 DEBUG 31460 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/session']
2025-05-28 16:46:48.727 DEBUG 31460 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/users']
2025-05-28 16:46:48.727 DEBUG 31460 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/h2-console/**']
2025-05-28 16:46:48.727 DEBUG 31460 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')] for Ant [pattern='/admin/relations/**']
2025-05-28 16:46:48.727 DEBUG 31460 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasRole('ROLE_ADMIN')] for Ant [pattern='/admin/**']
2025-05-28 16:46:48.728 DEBUG 31460 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')] for Ant [pattern='/doctors/**']
2025-05-28 16:46:48.729 DEBUG 31460 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR','ROLE_PATIENT')] for Ant [pattern='/patients/**']
2025-05-28 16:46:48.729 DEBUG 31460 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2025-05-28 16:46:48.731  INFO 31460 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@22e253c7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2480acc3, org.springframework.security.web.context.SecurityContextPersistenceFilter@65871cfd, org.springframework.security.web.header.HeaderWriterFilter@6ae5e1cf, org.springframework.web.filter.CorsFilter@4fe3199d, org.springframework.security.web.authentication.logout.LogoutFilter@50eae15a, com.example.patientmanagementsystem.security.JwtAuthenticationFilter@f833223, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3bdc8975, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5ed463b7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58ebfbcb, org.springframework.security.web.session.SessionManagementFilter@5058fefb, org.springframework.security.web.access.ExceptionTranslationFilter@325a781c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@48dc9950]
2025-05-28 16:46:49.721  INFO 31460 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path '/api'
2025-05-28 16:46:49.734  INFO 31460 --- [main] c.e.p.PatientManagementSystemApplication : Started PatientManagementSystemApplication in 7.502 seconds (JVM running for 7.908)
2025-05-28 16:46:49.742  INFO 31460 --- [main] c.e.p.config.AdminAccountInitializer     : 开始初始化管理员账号...
2025-05-28 16:46:49.747  INFO 31460 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号已存在，ID: e86513c3-6bd9-4047-89c9-64994fedbe4e, isAdmin: true
2025-05-28 16:46:49.875  INFO 31460 --- [main] c.e.p.config.AdminAccountInitializer     : 更新管理员密码和信息完成
2025-05-28 16:46:50.022  INFO 31460 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号验证: ID=e86513c3-6bd9-4047-89c9-64994fedbe4e, isAdmin=true, passwordMatches=true
2025-05-28 16:46:50.023  INFO 31460 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号初始化完成
2025-05-28 16:46:50.047  INFO 31460 --- [main] c.e.p.config.AdminUserInitializer        : Default admin user with phone: 13000000000  already exists.
2025-05-28 16:46:50.114  INFO 31460 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 开始全面修复管理员账号和权限...
2025-05-28 16:46:50.130  INFO 31460 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 数据库中管理员角色标志: 1
2025-05-28 16:46:50.202  INFO 31460 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员密码匹配: true
2025-05-28 16:46:50.205  INFO 31460 --- [main] c.e.p.security.JwtTokenProvider          : 生成token: username=13000000000 , roles=ROLE_ADMIN
2025-05-28 16:46:50.270  INFO 31460 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 生成管理员token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCAiLCJyb2xlcyI6IlJPTEVfQURNSU4iLCJpYXQiOjE3NDg0MjIwMTAsImV4cCI6MTc0ODUwODQxMH0.OVNCnKj85d0KmRh1qcGBij_52lglZWzwhLZ_GphUM5I
2025-05-28 16:46:50.297  INFO 31460 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : Token中的角色: ROLE_ADMIN
2025-05-28 16:46:50.297  INFO 31460 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员账号和权限修复完成
2025-05-28 16:46:50.297  INFO 31460 --- [main] c.e.p.config.AdminRoleFixConfig          : 开始修复管理员角色...
2025-05-28 16:46:50.303  INFO 31460 --- [main] c.e.p.config.AdminRoleFixConfig          : 找到管理员账号: 13000000000  (ID: e86513c3-6bd9-4047-89c9-64994fedbe4e)
2025-05-28 16:46:50.305  INFO 31460 --- [main] c.e.p.config.AdminRoleFixConfig          : 管理员角色已正确设置，无需更新
2025-05-28 16:46:50.307  INFO 31460 --- [main] c.e.p.config.AdminRoleFixConfig          : 数据库中管理员角色标志: 1
2025-05-28 16:46:50.308  INFO 31460 --- [main] c.e.p.config.AdminUserFixConfig          : 开始强制重新创建管理员账号...
2025-05-28 16:46:50.314  INFO 31460 --- [main] c.e.p.config.AdminUserFixConfig          : 找到现有管理员账号，准备删除重建: 13000000000 
2025-05-28 16:46:50.432  INFO 31460 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员账号强制重建完成: 13000000000  (ID: 11f29236-6d87-4d05-a2aa-f6cfc3731192)
2025-05-28 16:46:50.432  INFO 31460 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员密码已加密: $2a$10$xE6FdhuNoLDwC.AJUCmiJuC15CoAZpweDBuMJY0/sS8b7f070mnym
2025-05-28 16:46:50.490  INFO 31460 --- [main] c.e.p.config.AdminUserFixConfig          : 密码匹配验证: 成功
2025-05-28 16:46:50.491  INFO 31460 --- [main] c.e.p.config.DirectAdminFixConfig        : 开始直接数据库操作修复管理员账号...
2025-05-28 16:46:50.493  INFO 31460 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号已存在，更新账号信息
2025-05-28 16:46:50.556  INFO 31460 --- [main] c.e.p.config.DirectAdminFixConfig        : 更新管理员账号: 1 行受影响
2025-05-28 16:46:50.636  INFO 31460 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号验证: ID=11f29236-6d87-4d05-a2aa-f6cfc3731192, isAdmin=true, passwordMatches=true
2025-05-28 16:46:50.637  INFO 31460 --- [main] c.e.p.config.DirectAdminFixConfig        : 直接数据库操作修复管理员账号完成
2025-05-28 16:46:50.637  INFO 31460 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 开始紧急修复管理员账号...
2025-05-28 16:46:50.638  INFO 31460 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员账号已存在，尝试更新角色标志
2025-05-28 16:46:50.640  INFO 31460 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新管理员角色标志: 1 行受影响
2025-05-28 16:46:50.641  INFO 31460 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新后管理员角色标志: 1
2025-05-28 16:46:50.750  INFO 31460 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员密码匹配，无需更新
2025-05-28 16:46:50.751  INFO 31460 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 紧急修复管理员账号完成
2025-05-28 16:47:02.282  INFO 31460 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-28 16:47:02.282  INFO 31460 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-05-28 16:47:02.284  INFO 31460 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-05-28 16:47:02.298 DEBUG 31460 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /patients/c49f68f3-43dc-4411-b09a-f04a5cbe9624
2025-05-28 16:47:02.302 DEBUG 31460 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 16:47:02.307  INFO 31460 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/patients/c49f68f3-43dc-4411-b09a-f04a5cbe9624
2025-05-28 16:47:02.310  INFO 31460 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 16:47:02.312  INFO 31460 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 16:47:02.313  INFO 31460 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 16:47:02.317  INFO 31460 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 16:47:02.318  INFO 31460 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 16:47:02.318  INFO 31460 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 16:47:02.319  INFO 31460 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 16:47:02.321  INFO 31460 --- [http-nio-8080-exec-1] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 16:47:02.323  INFO 31460 --- [http-nio-8080-exec-1] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 16:47:02.324  INFO 31460 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 16:47:02.334 DEBUG 31460 --- [http-nio-8080-exec-1] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /patients/c49f68f3-43dc-4411-b09a-f04a5cbe9624] with attributes [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR','ROLE_PATIENT')]
2025-05-28 16:47:02.335 DEBUG 31460 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /patients/c49f68f3-43dc-4411-b09a-f04a5cbe9624
2025-05-28 16:47:02.353 DEBUG 31460 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 16:47:02.357 DEBUG 31460 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /error
2025-05-28 16:47:02.358 DEBUG 31460 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 16:47:02.358 DEBUG 31460 --- [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-28 16:47:02.359 DEBUG 31460 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /error
2025-05-28 16:47:02.402 DEBUG 31460 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 16:47:58.847 DEBUG 31460 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /patients/223ffe8a-50ac-4006-82bb-70df8606d203
2025-05-28 16:47:58.849 DEBUG 31460 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 16:47:58.850  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/patients/223ffe8a-50ac-4006-82bb-70df8606d203
2025-05-28 16:47:58.853  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 16:47:58.859  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 16:47:58.859  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 16:47:58.865  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 16:47:58.865  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 16:47:58.866  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 16:47:58.866  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 16:47:58.869  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 16:47:58.869  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 16:47:58.870  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 16:47:58.872 DEBUG 31460 --- [http-nio-8080-exec-3] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /patients/223ffe8a-50ac-4006-82bb-70df8606d203] with attributes [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR','ROLE_PATIENT')]
2025-05-28 16:47:58.873 DEBUG 31460 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /patients/223ffe8a-50ac-4006-82bb-70df8606d203
2025-05-28 16:47:58.883 DEBUG 31460 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 16:47:58.885 DEBUG 31460 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /error
2025-05-28 16:47:58.885 DEBUG 31460 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 16:47:58.886 DEBUG 31460 --- [http-nio-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-28 16:47:58.887 DEBUG 31460 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /error
2025-05-28 16:47:58.890 DEBUG 31460 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 16:50:40.709 DEBUG 31460 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /patients/223ffe8a-50ac-4006-82bb-70df8606d203/reports
2025-05-28 16:50:40.711 DEBUG 31460 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 16:50:40.713  INFO 31460 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/patients/223ffe8a-50ac-4006-82bb-70df8606d203/reports
2025-05-28 16:50:40.720  INFO 31460 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 16:50:40.722  INFO 31460 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 16:50:40.725  INFO 31460 --- [http-nio-8080-exec-6] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 16:50:40.737  INFO 31460 --- [http-nio-8080-exec-6] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 16:50:40.738  INFO 31460 --- [http-nio-8080-exec-6] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 16:50:40.738  INFO 31460 --- [http-nio-8080-exec-6] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 16:50:40.739  INFO 31460 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 16:50:40.745  INFO 31460 --- [http-nio-8080-exec-6] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 16:50:40.746  INFO 31460 --- [http-nio-8080-exec-6] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 16:50:40.747  INFO 31460 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 16:50:40.750 DEBUG 31460 --- [http-nio-8080-exec-6] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /patients/223ffe8a-50ac-4006-82bb-70df8606d203/reports] with attributes [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR','ROLE_PATIENT')]
2025-05-28 16:50:40.751 DEBUG 31460 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /patients/223ffe8a-50ac-4006-82bb-70df8606d203/reports
2025-05-28 16:50:40.803 DEBUG 31460 --- [http-nio-8080-exec-6] o.s.s.a.i.a.MethodSecurityInterceptor    : Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatientReports(java.lang.String); target is of class [com.example.patientmanagementsystem.controller.PatientController] with attributes [[authorize: '@patientSecurityService.canAccessPatientData(#patientId)', filter: 'null', filterTarget: 'null']]
2025-05-28 16:50:40.806  WARN 31460 --- [http-nio-8080-exec-6] c.e.p.exception.GlobalExceptionHandler   : 权限不足: 不允许访问
2025-05-28 16:50:40.841 DEBUG 31460 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 16:51:33.068 DEBUG 31460 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /doctors/223ffe8a-50ac-4006-82bb-70df8606d203/reports
2025-05-28 16:51:33.069 DEBUG 31460 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 16:51:33.071  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/doctors/223ffe8a-50ac-4006-82bb-70df8606d203/reports
2025-05-28 16:51:33.075  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 16:51:33.078  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 16:51:33.080  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 16:51:33.090  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 16:51:33.091  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 16:51:33.091  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 16:51:33.092  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 16:51:33.095  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 16:51:33.096  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 16:51:33.097  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 16:51:33.100 DEBUG 31460 --- [http-nio-8080-exec-7] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /doctors/223ffe8a-50ac-4006-82bb-70df8606d203/reports] with attributes [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')]
2025-05-28 16:51:33.101 DEBUG 31460 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /doctors/223ffe8a-50ac-4006-82bb-70df8606d203/reports
2025-05-28 16:51:33.108 DEBUG 31460 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 16:51:33.110 DEBUG 31460 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /error
2025-05-28 16:51:33.111 DEBUG 31460 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 16:51:33.112 DEBUG 31460 --- [http-nio-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-28 16:51:33.112 DEBUG 31460 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /error
2025-05-28 16:51:33.119 DEBUG 31460 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 16:52:00.613 DEBUG 31460 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /doctors/223ffe8a-50ac-4006-82bb-70df8606d203
2025-05-28 16:52:00.614 DEBUG 31460 --- [http-nio-8080-exec-8] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 16:52:00.614  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/doctors/223ffe8a-50ac-4006-82bb-70df8606d203
2025-05-28 16:52:00.618  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 16:52:00.622  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 16:52:00.625  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 16:52:00.633  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 16:52:00.635  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 16:52:00.636  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 16:52:00.638  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 16:52:00.642  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 16:52:00.643  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 16:52:00.643  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 16:52:00.645 DEBUG 31460 --- [http-nio-8080-exec-8] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /doctors/223ffe8a-50ac-4006-82bb-70df8606d203] with attributes [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')]
2025-05-28 16:52:00.646 DEBUG 31460 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /doctors/223ffe8a-50ac-4006-82bb-70df8606d203
2025-05-28 16:52:00.652 DEBUG 31460 --- [http-nio-8080-exec-8] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 16:52:00.652 DEBUG 31460 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /error
2025-05-28 16:52:00.653 DEBUG 31460 --- [http-nio-8080-exec-8] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 16:52:00.654 DEBUG 31460 --- [http-nio-8080-exec-8] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-28 16:52:00.655 DEBUG 31460 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /error
2025-05-28 16:52:00.659 DEBUG 31460 --- [http-nio-8080-exec-8] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 16:52:25.835 DEBUG 31460 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /doctors/223ffe8a-50ac-4006-82bb-70df8606d203/patients
2025-05-28 16:52:25.836 DEBUG 31460 --- [http-nio-8080-exec-9] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 16:52:25.837  INFO 31460 --- [http-nio-8080-exec-9] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/doctors/223ffe8a-50ac-4006-82bb-70df8606d203/patients
2025-05-28 16:52:25.842  INFO 31460 --- [http-nio-8080-exec-9] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 16:52:25.849  INFO 31460 --- [http-nio-8080-exec-9] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 16:52:25.850  INFO 31460 --- [http-nio-8080-exec-9] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 16:52:25.858  INFO 31460 --- [http-nio-8080-exec-9] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 16:52:25.858  INFO 31460 --- [http-nio-8080-exec-9] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 16:52:25.859  INFO 31460 --- [http-nio-8080-exec-9] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 16:52:25.860  INFO 31460 --- [http-nio-8080-exec-9] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 16:52:25.865  INFO 31460 --- [http-nio-8080-exec-9] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 16:52:25.866  INFO 31460 --- [http-nio-8080-exec-9] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 16:52:25.868  INFO 31460 --- [http-nio-8080-exec-9] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 16:52:25.870 DEBUG 31460 --- [http-nio-8080-exec-9] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /doctors/223ffe8a-50ac-4006-82bb-70df8606d203/patients] with attributes [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')]
2025-05-28 16:52:25.871 DEBUG 31460 --- [http-nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /doctors/223ffe8a-50ac-4006-82bb-70df8606d203/patients
2025-05-28 16:52:25.892 DEBUG 31460 --- [http-nio-8080-exec-9] o.s.s.a.i.a.MethodSecurityInterceptor    : Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String); target is of class [com.example.patientmanagementsystem.controller.DoctorController] with attributes [[authorize: 'hasRole('ADMIN') or @doctorSecurityService.isDoctorSelf(#doctorId)', filter: 'null', filterTarget: 'null']]
2025-05-28 16:52:25.916 DEBUG 31460 --- [http-nio-8080-exec-9] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 16:52:59.464 DEBUG 31460 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 16:52:59.464 DEBUG 31460 --- [http-nio-8080-exec-10] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 16:52:59.465  INFO 31460 --- [http-nio-8080-exec-10] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 16:52:59.467  INFO 31460 --- [http-nio-8080-exec-10] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 16:52:59.468  INFO 31460 --- [http-nio-8080-exec-10] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 16:52:59.469  INFO 31460 --- [http-nio-8080-exec-10] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 16:52:59.474  INFO 31460 --- [http-nio-8080-exec-10] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 16:52:59.474  INFO 31460 --- [http-nio-8080-exec-10] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 16:52:59.475  INFO 31460 --- [http-nio-8080-exec-10] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 16:52:59.475  INFO 31460 --- [http-nio-8080-exec-10] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 16:52:59.478  INFO 31460 --- [http-nio-8080-exec-10] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 16:52:59.480  INFO 31460 --- [http-nio-8080-exec-10] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 16:52:59.480  INFO 31460 --- [http-nio-8080-exec-10] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 16:52:59.482 DEBUG 31460 --- [http-nio-8080-exec-10] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients] with attributes [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')]
2025-05-28 16:52:59.483 DEBUG 31460 --- [http-nio-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 16:52:59.489 DEBUG 31460 --- [http-nio-8080-exec-10] o.s.s.a.i.a.MethodSecurityInterceptor    : Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String); target is of class [com.example.patientmanagementsystem.controller.DoctorController] with attributes [[authorize: 'hasRole('ADMIN') or @doctorSecurityService.isDoctorSelf(#doctorId)', filter: 'null', filterTarget: 'null']]
2025-05-28 16:52:59.490  WARN 31460 --- [http-nio-8080-exec-10] c.e.p.exception.GlobalExceptionHandler   : 权限不足: 不允许访问
2025-05-28 16:52:59.492 DEBUG 31460 --- [http-nio-8080-exec-10] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 16:53:22.527 DEBUG 31460 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 16:53:22.528 DEBUG 31460 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 16:53:22.530  INFO 31460 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 16:53:22.532 ERROR 31460 --- [http-nio-8080-exec-2] c.e.p.security.JwtTokenProvider          : JWT验证失败: JWT strings must contain exactly 2 period characters. Found: 0
2025-05-28 16:53:22.532  INFO 31460 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 请求不包含有效JWT令牌
2025-05-28 16:53:22.532 DEBUG 31460 --- [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-28 16:53:22.533 DEBUG 31460 --- [http-nio-8080-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Failed to authorize filter invocation [GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients] with attributes [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')]
2025-05-28 16:53:22.535 DEBUG 31460 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 16:53:22.536 DEBUG 31460 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /error
2025-05-28 16:53:22.537 DEBUG 31460 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 16:53:22.538 DEBUG 31460 --- [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-28 16:53:22.538 DEBUG 31460 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /error
2025-05-28 16:53:22.555 DEBUG 31460 --- [http-nio-8080-exec-2] a.DefaultWebInvocationPrivilegeEvaluator : filter invocation [/error] denied for AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]

org.springframework.security.access.AccessDeniedException: Access is denied
	at org.springframework.security.access.vote.AffirmativeBased.decide(AffirmativeBased.java:73) ~[spring-security-core-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator.isAllowed(DefaultWebInvocationPrivilegeEvaluator.java:100) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator.isAllowed(DefaultWebInvocationPrivilegeEvaluator.java:67) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.RequestMatcherDelegatingWebInvocationPrivilegeEvaluator.isAllowed(RequestMatcherDelegatingWebInvocationPrivilegeEvaluator.java:76) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.boot.web.servlet.filter.ErrorPageSecurityFilter.isAllowed(ErrorPageSecurityFilter.java:88) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.filter.ErrorPageSecurityFilter.doFilter(ErrorPageSecurityFilter.java:76) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.filter.ErrorPageSecurityFilter.doFilter(ErrorPageSecurityFilter.java:70) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:106) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:87) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:427) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:373) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:237) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:166) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.lang.Thread.run(Unknown Source) ~[na:na]

2025-05-28 16:53:22.559 DEBUG 31460 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 16:53:33.604 DEBUG 31460 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 16:53:33.605 DEBUG 31460 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 16:53:33.607  INFO 31460 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 16:53:33.611 ERROR 31460 --- [http-nio-8080-exec-1] c.e.p.security.JwtTokenProvider          : JWT验证失败: JWT strings must contain exactly 2 period characters. Found: 0
2025-05-28 16:53:33.612  INFO 31460 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 请求不包含有效JWT令牌
2025-05-28 16:53:33.612 DEBUG 31460 --- [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-28 16:53:33.615 DEBUG 31460 --- [http-nio-8080-exec-1] o.s.s.w.a.i.FilterSecurityInterceptor    : Failed to authorize filter invocation [GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients] with attributes [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')]
2025-05-28 16:53:33.617 DEBUG 31460 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 16:53:33.619 DEBUG 31460 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /error
2025-05-28 16:53:33.621 DEBUG 31460 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 16:53:33.623 DEBUG 31460 --- [http-nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-28 16:53:33.624 DEBUG 31460 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /error
2025-05-28 16:53:33.628 DEBUG 31460 --- [http-nio-8080-exec-1] a.DefaultWebInvocationPrivilegeEvaluator : filter invocation [/error] denied for AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]

org.springframework.security.access.AccessDeniedException: Access is denied
	at org.springframework.security.access.vote.AffirmativeBased.decide(AffirmativeBased.java:73) ~[spring-security-core-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator.isAllowed(DefaultWebInvocationPrivilegeEvaluator.java:100) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator.isAllowed(DefaultWebInvocationPrivilegeEvaluator.java:67) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.RequestMatcherDelegatingWebInvocationPrivilegeEvaluator.isAllowed(RequestMatcherDelegatingWebInvocationPrivilegeEvaluator.java:76) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.boot.web.servlet.filter.ErrorPageSecurityFilter.isAllowed(ErrorPageSecurityFilter.java:88) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.filter.ErrorPageSecurityFilter.doFilter(ErrorPageSecurityFilter.java:76) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.filter.ErrorPageSecurityFilter.doFilter(ErrorPageSecurityFilter.java:70) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:106) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:87) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:427) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:373) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:237) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:166) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.lang.Thread.run(Unknown Source) ~[na:na]

2025-05-28 16:53:33.633 DEBUG 31460 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 16:53:39.293 DEBUG 31460 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /session
2025-05-28 16:53:39.295 DEBUG 31460 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 16:53:39.296  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 处理请求: POST /api/session
2025-05-28 16:53:39.296  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 请求不包含有效JWT令牌
2025-05-28 16:53:39.297 DEBUG 31460 --- [http-nio-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-28 16:53:39.298 DEBUG 31460 --- [http-nio-8080-exec-3] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /session] with attributes [permitAll]
2025-05-28 16:53:39.298 DEBUG 31460 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /session
2025-05-28 16:53:39.365  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.controller.AuthController          : 收到登录请求: username=13000000000
2025-05-28 16:53:39.365  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.controller.AuthController          : 检测到管理员登录请求
2025-05-28 16:53:39.371  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.service.AuthService                : 用户登录: username=13000000000
2025-05-28 16:53:39.371  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.service.AuthService                : 检测到管理员登录，使用管理员专用登录方法
2025-05-28 16:53:39.371  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.service.AuthService                : 管理员登录: 13000000000
2025-05-28 16:53:39.376  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.service.AuthService                : 找到管理员用户: id=a421d099-6273-464a-b7d7-266d61cf07ea, isAdmin=true
2025-05-28 16:53:39.448  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.service.AuthService                : 创建管理员认证对象，权限: [ROLE_ADMIN]
2025-05-28 16:53:39.448  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.security.JwtTokenProvider          : 生成token: username=13000000000, roles=ROLE_ADMIN
2025-05-28 16:53:39.450  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.service.AuthService                : 生成管理员token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCIsInJvbGVzIjoiUk9MRV9BRE1JTiIsImlhdCI6MTc0ODQyMjQxOSwiZXhwIjoxNzQ4NTA4ODE5fQ.yKLZULiirMXo-S73BVK-UAy5NxHideTOCmfYMpueVTk
2025-05-28 16:53:39.450  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.service.AuthService                : 管理员登录成功: userId=a421d099-6273-464a-b7d7-266d61cf07ea, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCIsInJvbGVzIjoiUk9MRV9BRE1JTiIsImlhdCI6MTc0ODQyMjQxOSwiZXhwIjoxNzQ4NTA4ODE5fQ.yKLZULiirMXo-S73BVK-UAy5NxHideTOCmfYMpueVTk
2025-05-28 16:53:39.450  INFO 31460 --- [http-nio-8080-exec-3] c.e.p.controller.AuthController          : 登录成功: userId=a421d099-6273-464a-b7d7-266d61cf07ea, isAdmin=true, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCIsInJvbGVzIjoiUk9MRV9BRE1JTiIsImlhdCI6MTc0ODQyMjQxOSwiZXhwIjoxNzQ4NTA4ODE5fQ.yKLZULiirMXo-S73BVK-UAy5NxHideTOCmfYMpueVTk
2025-05-28 16:53:39.454 DEBUG 31460 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 16:53:58.037 DEBUG 31460 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 16:53:58.038 DEBUG 31460 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 16:53:58.038  INFO 31460 --- [http-nio-8080-exec-4] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 16:53:58.041  INFO 31460 --- [http-nio-8080-exec-4] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 16:53:58.042  INFO 31460 --- [http-nio-8080-exec-4] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 13000000000
2025-05-28 16:53:58.043  INFO 31460 --- [http-nio-8080-exec-4] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=13000000000
2025-05-28 16:53:58.047  INFO 31460 --- [http-nio-8080-exec-4] c.e.p.security.CustomUserDetailsService  : 找到用户: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true, isDoctor=false, isPatient=false
2025-05-28 16:53:58.047  INFO 31460 --- [http-nio-8080-exec-4] c.e.p.security.CustomUserDetailsService  : 用户拥有管理员角色
2025-05-28 16:53:58.048  INFO 31460 --- [http-nio-8080-exec-4] c.e.p.security.CustomUserDetailsService  : 用户 13000000000 的权限: [ROLE_ADMIN]
2025-05-28 16:53:58.049  INFO 31460 --- [http-nio-8080-exec-4] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=13000000000, authorities=[ROLE_ADMIN]
2025-05-28 16:53:58.051  INFO 31460 --- [http-nio-8080-exec-4] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_ADMIN
2025-05-28 16:53:58.051  INFO 31460 --- [http-nio-8080-exec-4] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_ADMIN]
2025-05-28 16:53:58.051  INFO 31460 --- [http-nio-8080-exec-4] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=13000000000, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], authorities=[ROLE_ADMIN]
2025-05-28 16:53:58.052 DEBUG 31460 --- [http-nio-8080-exec-4] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients] with attributes [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')]
2025-05-28 16:53:58.052 DEBUG 31460 --- [http-nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 16:53:58.055 DEBUG 31460 --- [http-nio-8080-exec-4] o.s.s.a.i.a.MethodSecurityInterceptor    : Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String); target is of class [com.example.patientmanagementsystem.controller.DoctorController] with attributes [[authorize: 'hasRole('ADMIN') or @doctorSecurityService.isDoctorSelf(#doctorId)', filter: 'null', filterTarget: 'null']]
2025-05-28 16:53:58.097 DEBUG 31460 --- [http-nio-8080-exec-4] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 16:54:58.829 DEBUG 31460 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing POST /session
2025-05-28 16:54:58.830 DEBUG 31460 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 16:54:58.832  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 处理请求: POST /api/session
2025-05-28 16:54:58.832  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 请求不包含有效JWT令牌
2025-05-28 16:54:58.833 DEBUG 31460 --- [http-nio-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-28 16:54:58.834 DEBUG 31460 --- [http-nio-8080-exec-7] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /session] with attributes [permitAll]
2025-05-28 16:54:58.835 DEBUG 31460 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured POST /session
2025-05-28 16:54:58.840  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.controller.AuthController          : 收到登录请求: username=18743005518
2025-05-28 16:54:58.841  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.service.AuthService                : 用户登录: username=18743005518
2025-05-28 16:54:58.954  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 16:54:58.959  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 16:54:58.959  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 16:54:58.960  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 16:54:59.074 DEBUG 31460 --- [http-nio-8080-exec-7] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-05-28 16:54:59.075  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.security.JwtTokenProvider          : 生成token: username=18743005518, roles=ROLE_DOCTOR
2025-05-28 16:54:59.078  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.service.AuthService                : 生成token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxODc0MzAwNTUxOCIsInJvbGVzIjoiUk9MRV9ET0NUT1IiLCJpYXQiOjE3NDg0MjI0OTksImV4cCI6MTc0ODUwODg5OX0.wwuZgOu1gR5uswWMYCcRBy3T64zIahEWVbOUotV4Gb0
2025-05-28 16:54:59.084  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.service.AuthService                : 用户登录成功: id=223ffe8a-50ac-4006-82bb-70df8606d203, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 16:54:59.085  INFO 31460 --- [http-nio-8080-exec-7] c.e.p.controller.AuthController          : 登录成功: userId=223ffe8a-50ac-4006-82bb-70df8606d203, isAdmin=false, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxODc0MzAwNTUxOCIsInJvbGVzIjoiUk9MRV9ET0NUT1IiLCJpYXQiOjE3NDg0MjI0OTksImV4cCI6MTc0ODUwODg5OX0.wwuZgOu1gR5uswWMYCcRBy3T64zIahEWVbOUotV4Gb0
2025-05-28 16:54:59.089 DEBUG 31460 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 16:55:11.937 DEBUG 31460 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 16:55:11.937 DEBUG 31460 --- [http-nio-8080-exec-8] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 16:55:11.938  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 16:55:11.940  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 16:55:11.943  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 16:55:11.945  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 16:55:11.952  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 16:55:11.952  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 16:55:11.952  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 16:55:11.952  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 16:55:11.954  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 16:55:11.954  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 16:55:11.955  INFO 31460 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 16:55:11.956 DEBUG 31460 --- [http-nio-8080-exec-8] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients] with attributes [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')]
2025-05-28 16:55:11.957 DEBUG 31460 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 16:55:11.965 DEBUG 31460 --- [http-nio-8080-exec-8] o.s.s.a.i.a.MethodSecurityInterceptor    : Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String); target is of class [com.example.patientmanagementsystem.controller.DoctorController] with attributes [[authorize: 'hasRole('ADMIN') or @doctorSecurityService.isDoctorSelf(#doctorId)', filter: 'null', filterTarget: 'null']]
2025-05-28 16:55:11.965  WARN 31460 --- [http-nio-8080-exec-8] c.e.p.exception.GlobalExceptionHandler   : 权限不足: 不允许访问
2025-05-28 16:55:11.967 DEBUG 31460 --- [http-nio-8080-exec-8] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 17:00:00.011  INFO 31460 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 17:00:00.016  INFO 31460 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-05-28 17:00:00.053  INFO 31460 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-05-28 17:00:02.399  INFO 16796 --- [main] c.e.p.PatientManagementSystemApplication : Starting PatientManagementSystemApplication using Java 21.0.7 on 少华从文 with PID 16796 (C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes started by 10263 in C:\Users\10263\Downloads\patient-management-system-complete)
2025-05-28 17:00:02.401 DEBUG 16796 --- [main] c.e.p.PatientManagementSystemApplication : Running with Spring Boot v2.7.14, Spring v5.3.29
2025-05-28 17:00:02.402  INFO 16796 --- [main] c.e.p.PatientManagementSystemApplication : No active profile set, falling back to 1 default profile: "default"
2025-05-28 17:00:03.238  INFO 16796 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-28 17:00:03.322  INFO 16796 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 73 ms. Found 6 JPA repository interfaces.
2025-05-28 17:00:04.257  INFO 16796 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-05-28 17:00:04.268  INFO 16796 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-05-28 17:00:04.268  INFO 16796 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-05-28 17:00:04.423  INFO 16796 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring embedded WebApplicationContext
2025-05-28 17:00:04.423  INFO 16796 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1975 ms
2025-05-28 17:00:04.697  WARN 16796 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-28 17:00:05.206  INFO 16796 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-28 17:00:05.387  INFO 16796 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-05-28 17:00:06.458  INFO 16796 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 17:00:06.960 DEBUG 16796 --- [main] c.e.p.security.JwtAuthenticationFilter   : Filter 'jwtAuthenticationFilter' configured for use
2025-05-28 17:00:06.971  INFO 16796 --- [main] c.e.p.config.AdminAccountInitializer     : AdminAccountInitializer初始化，管理员账号: 13000000000 
2025-05-28 17:00:07.478 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 17:00:07.484 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.createDoctor(com.example.patientmanagementsystem.dto.DoctorRegistrationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:07.524 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 17:00:07.525 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.updateDoctor(java.lang.String,com.example.patientmanagementsystem.dto.UpdateDoctorRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:07.526 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 17:00:07.528 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.deleteDoctor(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:07.529 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 17:00:07.530 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.searchDoctors(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:07.533 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 17:00:07.534 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.getDoctors(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:07.557  INFO 16796 --- [main] c.e.p.service.AuthService                : === 开始初始化管理员账号 ===
2025-05-28 17:00:07.663  INFO 16796 --- [main] c.e.p.service.AuthService                : 找到管理员账号: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true
2025-05-28 17:00:07.664  INFO 16796 --- [main] c.e.p.service.AuthService                : === 管理员账号初始化完成 ===
2025-05-28 17:00:07.671 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or @doctorSecurityService.isDoctorSelf(#doctorId)") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 17:00:07.672 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.DoctorController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or @doctorSecurityService.isDoctorSelf(#doctorId)', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:07.794 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.searchPatients(java.lang.String)
2025-05-28 17:00:07.795 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.searchPatients(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:07.795 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatients(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 17:00:07.796 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatients(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:07.796 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.updatePatient(java.lang.String,com.example.patientmanagementsystem.dto.UpdatePatientRequestDTO)
2025-05-28 17:00:07.797 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.updatePatient(java.lang.String,com.example.patientmanagementsystem.dto.UpdatePatientRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:07.797 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.deletePatient(java.lang.String)
2025-05-28 17:00:07.797 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.deletePatient(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:07.798 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("@patientSecurityService.canAccessPatientData(#patientId)") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatientReports(java.lang.String)
2025-05-28 17:00:07.798 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatientReports(java.lang.String)]] with attributes [[authorize: '@patientSecurityService.canAccessPatientData(#patientId)', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:07.806 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.addRelation(com.example.patientmanagementsystem.dto.AddRelationRequestDTO)
2025-05-28 17:00:07.807 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.addRelation(com.example.patientmanagementsystem.dto.AddRelationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:07.807 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.updateRelation(com.example.patientmanagementsystem.dto.UpdateRelationRequestDTO)
2025-05-28 17:00:07.809 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.updateRelation(com.example.patientmanagementsystem.dto.UpdateRelationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:07.809 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.deleteRelation(java.lang.String,java.lang.String)
2025-05-28 17:00:07.809 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.deleteRelation(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:07.810 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.getRelations(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 17:00:07.810 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.getRelations(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:07.817 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 17:00:07.817 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.getReportDetail(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:07.818 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 17:00:07.819 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.downloadReport(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:07.819 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 17:00:07.819 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.uploadReport(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:07.819 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 17:00:07.819 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.getPatientReports(java.lang.String,int,int)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:07.820 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 17:00:07.820 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.updateReportDetails(java.lang.String,com.example.patientmanagementsystem.dto.UpdateReportRequestDTO)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:07.873  INFO 16796 --- [main] c.e.p.service.DataService                : Python脚本已复制到临时可执行路径: C:\Users\10263\AppData\Local\Temp\pms_scripts_fed223fa\processorOfRawData.py
2025-05-28 17:00:07.878 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.UploadController
2025-05-28 17:00:07.879 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.UploadController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.UploadController.uploadFourCsvFiles(org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:07.880 DEBUG 16796 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.UploadController
2025-05-28 17:00:07.881 DEBUG 16796 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.UploadController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.UploadController.getDataRecords(java.lang.String,int,int)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:08.134 DEBUG 16796 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/session']
2025-05-28 17:00:08.136 DEBUG 16796 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/users']
2025-05-28 17:00:08.136 DEBUG 16796 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/h2-console/**']
2025-05-28 17:00:08.136 DEBUG 16796 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')] for Ant [pattern='/admin/relations/**']
2025-05-28 17:00:08.136 DEBUG 16796 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasRole('ROLE_ADMIN')] for Ant [pattern='/admin/**']
2025-05-28 17:00:08.136 DEBUG 16796 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')] for Ant [pattern='/doctors/**']
2025-05-28 17:00:08.137 DEBUG 16796 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR','ROLE_PATIENT')] for Ant [pattern='/patients/**']
2025-05-28 17:00:08.137 DEBUG 16796 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2025-05-28 17:00:08.141  INFO 16796 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5d03df76, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@17f7a1af, org.springframework.security.web.context.SecurityContextPersistenceFilter@47800bd7, org.springframework.security.web.header.HeaderWriterFilter@46ef7340, org.springframework.web.filter.CorsFilter@d62feaf, org.springframework.security.web.authentication.logout.LogoutFilter@1ae90cb9, com.example.patientmanagementsystem.security.JwtAuthenticationFilter@6956eb58, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@212be8c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@325a781c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3093161a, org.springframework.security.web.session.SessionManagementFilter@77185a2, org.springframework.security.web.access.ExceptionTranslationFilter@2aeb3f3b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@294ebdae]
2025-05-28 17:00:09.119  INFO 16796 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path '/api'
2025-05-28 17:00:09.134  INFO 16796 --- [main] c.e.p.PatientManagementSystemApplication : Started PatientManagementSystemApplication in 7.191 seconds (JVM running for 7.669)
2025-05-28 17:00:09.145  INFO 16796 --- [main] c.e.p.config.AdminAccountInitializer     : 开始初始化管理员账号...
2025-05-28 17:00:09.150  INFO 16796 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号已存在，ID: 11f29236-6d87-4d05-a2aa-f6cfc3731192, isAdmin: true
2025-05-28 17:00:09.301  INFO 16796 --- [main] c.e.p.config.AdminAccountInitializer     : 更新管理员密码和信息完成
2025-05-28 17:00:09.397  INFO 16796 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号验证: ID=11f29236-6d87-4d05-a2aa-f6cfc3731192, isAdmin=true, passwordMatches=true
2025-05-28 17:00:09.398  INFO 16796 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号初始化完成
2025-05-28 17:00:09.418  INFO 16796 --- [main] c.e.p.config.AdminUserInitializer        : Default admin user with phone: 13000000000  already exists.
2025-05-28 17:00:09.479  INFO 16796 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 开始全面修复管理员账号和权限...
2025-05-28 17:00:09.488  INFO 16796 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 数据库中管理员角色标志: 1
2025-05-28 17:00:09.550  INFO 16796 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员密码匹配: true
2025-05-28 17:00:09.551  INFO 16796 --- [main] c.e.p.security.JwtTokenProvider          : 生成token: username=13000000000 , roles=ROLE_ADMIN
2025-05-28 17:00:09.616  INFO 16796 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 生成管理员token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCAiLCJyb2xlcyI6IlJPTEVfQURNSU4iLCJpYXQiOjE3NDg0MjI4MDksImV4cCI6MTc0ODUwOTIwOX0.I9VQAXG4mp6jv-YGc2YkMSxBtr-3A36XNhJ0Qxu5nWU
2025-05-28 17:00:09.662  INFO 16796 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : Token中的角色: ROLE_ADMIN
2025-05-28 17:00:09.664  INFO 16796 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员账号和权限修复完成
2025-05-28 17:00:09.665  INFO 16796 --- [main] c.e.p.config.AdminRoleFixConfig          : 开始修复管理员角色...
2025-05-28 17:00:09.673  INFO 16796 --- [main] c.e.p.config.AdminRoleFixConfig          : 找到管理员账号: 13000000000  (ID: 11f29236-6d87-4d05-a2aa-f6cfc3731192)
2025-05-28 17:00:09.674  INFO 16796 --- [main] c.e.p.config.AdminRoleFixConfig          : 管理员角色已正确设置，无需更新
2025-05-28 17:00:09.677  INFO 16796 --- [main] c.e.p.config.AdminRoleFixConfig          : 数据库中管理员角色标志: 1
2025-05-28 17:00:09.679  INFO 16796 --- [main] c.e.p.config.AdminUserFixConfig          : 开始强制重新创建管理员账号...
2025-05-28 17:00:09.687  INFO 16796 --- [main] c.e.p.config.AdminUserFixConfig          : 找到现有管理员账号，准备删除重建: 13000000000 
2025-05-28 17:00:09.817  INFO 16796 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员账号强制重建完成: 13000000000  (ID: cbee8b7a-bd24-4d5e-824f-ae7d3b1cec1c)
2025-05-28 17:00:09.817  INFO 16796 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员密码已加密: $2a$10$t.ouEeNIqqV3ll9u9gIL0uhJeUyc4BMPeW4se5Cf/Bq/go9yExyFW
2025-05-28 17:00:09.878  INFO 16796 --- [main] c.e.p.config.AdminUserFixConfig          : 密码匹配验证: 成功
2025-05-28 17:00:09.879  INFO 16796 --- [main] c.e.p.config.DirectAdminFixConfig        : 开始直接数据库操作修复管理员账号...
2025-05-28 17:00:09.880  INFO 16796 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号已存在，更新账号信息
2025-05-28 17:00:09.947  INFO 16796 --- [main] c.e.p.config.DirectAdminFixConfig        : 更新管理员账号: 1 行受影响
2025-05-28 17:00:10.063  INFO 16796 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号验证: ID=cbee8b7a-bd24-4d5e-824f-ae7d3b1cec1c, isAdmin=true, passwordMatches=true
2025-05-28 17:00:10.064  INFO 16796 --- [main] c.e.p.config.DirectAdminFixConfig        : 直接数据库操作修复管理员账号完成
2025-05-28 17:00:10.065  INFO 16796 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 开始紧急修复管理员账号...
2025-05-28 17:00:10.067  INFO 16796 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员账号已存在，尝试更新角色标志
2025-05-28 17:00:10.069  INFO 16796 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新管理员角色标志: 1 行受影响
2025-05-28 17:00:10.071  INFO 16796 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新后管理员角色标志: 1
2025-05-28 17:00:10.152  INFO 16796 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员密码匹配，无需更新
2025-05-28 17:00:10.153  INFO 16796 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 紧急修复管理员账号完成
2025-05-28 17:00:19.109  INFO 16796 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-28 17:00:19.109  INFO 16796 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-05-28 17:00:19.111  INFO 16796 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-05-28 17:00:19.121 DEBUG 16796 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 17:00:19.124 DEBUG 16796 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 17:00:19.128  INFO 16796 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 17:00:19.130  INFO 16796 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 17:00:19.132  INFO 16796 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 17:00:19.132  INFO 16796 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 17:00:19.135  INFO 16796 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 17:00:19.136  INFO 16796 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 17:00:19.136  INFO 16796 --- [http-nio-8080-exec-1] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 17:00:19.138  INFO 16796 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 17:00:19.140  INFO 16796 --- [http-nio-8080-exec-1] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 17:00:19.142  INFO 16796 --- [http-nio-8080-exec-1] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 17:00:19.143  INFO 16796 --- [http-nio-8080-exec-1] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 17:00:19.150 DEBUG 16796 --- [http-nio-8080-exec-1] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients] with attributes [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')]
2025-05-28 17:00:19.151 DEBUG 16796 --- [http-nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 17:00:19.213 DEBUG 16796 --- [http-nio-8080-exec-1] o.s.s.a.i.a.MethodSecurityInterceptor    : Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String); target is of class [com.example.patientmanagementsystem.controller.DoctorController] with attributes [[authorize: 'hasRole('ADMIN') or @doctorSecurityService.isDoctorSelf(#doctorId)', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:19.291 DEBUG 16796 --- [http-nio-8080-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 17:00:50.037 DEBUG 16796 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 17:00:50.037 DEBUG 16796 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 17:00:50.038  INFO 16796 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 17:00:50.040  INFO 16796 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 17:00:50.042  INFO 16796 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 17:00:50.043  INFO 16796 --- [http-nio-8080-exec-3] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 17:00:50.046  INFO 16796 --- [http-nio-8080-exec-3] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 17:00:50.047  INFO 16796 --- [http-nio-8080-exec-3] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 17:00:50.047  INFO 16796 --- [http-nio-8080-exec-3] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 17:00:50.047  INFO 16796 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 17:00:50.049  INFO 16796 --- [http-nio-8080-exec-3] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 17:00:50.049  INFO 16796 --- [http-nio-8080-exec-3] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 17:00:50.050  INFO 16796 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 17:00:50.050 DEBUG 16796 --- [http-nio-8080-exec-3] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients] with attributes [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')]
2025-05-28 17:00:50.051 DEBUG 16796 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 17:00:50.058 DEBUG 16796 --- [http-nio-8080-exec-3] o.s.s.a.i.a.MethodSecurityInterceptor    : Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String); target is of class [com.example.patientmanagementsystem.controller.DoctorController] with attributes [[authorize: 'hasRole('ADMIN') or @doctorSecurityService.isDoctorSelf(#doctorId)', filter: 'null', filterTarget: 'null']]
2025-05-28 17:00:50.070 DEBUG 16796 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 17:10:02.776  INFO 16796 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 17:10:02.778  INFO 16796 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-05-28 17:10:02.785  INFO 16796 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-05-28 17:10:05.554  INFO 29952 --- [main] c.e.p.PatientManagementSystemApplication : Starting PatientManagementSystemApplication using Java 21.0.7 on 少华从文 with PID 29952 (C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes started by 10263 in C:\Users\10263\Downloads\patient-management-system-complete)
2025-05-28 17:10:05.557 DEBUG 29952 --- [main] c.e.p.PatientManagementSystemApplication : Running with Spring Boot v2.7.14, Spring v5.3.29
2025-05-28 17:10:05.558  INFO 29952 --- [main] c.e.p.PatientManagementSystemApplication : No active profile set, falling back to 1 default profile: "default"
2025-05-28 17:10:06.389  INFO 29952 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-28 17:10:06.469  INFO 29952 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 73 ms. Found 6 JPA repository interfaces.
2025-05-28 17:10:07.403  INFO 29952 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-05-28 17:10:07.414  INFO 29952 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-05-28 17:10:07.415  INFO 29952 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-05-28 17:10:07.571  INFO 29952 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring embedded WebApplicationContext
2025-05-28 17:10:07.572  INFO 29952 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1963 ms
2025-05-28 17:10:07.964  WARN 29952 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-28 17:10:08.502  INFO 29952 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-28 17:10:08.658  INFO 29952 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-05-28 17:10:09.607  INFO 29952 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 17:10:10.116 DEBUG 29952 --- [main] c.e.p.security.JwtAuthenticationFilter   : Filter 'jwtAuthenticationFilter' configured for use
2025-05-28 17:10:10.131  INFO 29952 --- [main] c.e.p.config.AdminAccountInitializer     : AdminAccountInitializer初始化，管理员账号: 13000000000 
2025-05-28 17:10:10.720 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 17:10:10.727 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.createDoctor(com.example.patientmanagementsystem.dto.DoctorRegistrationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:10.781 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 17:10:10.782 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.updateDoctor(java.lang.String,com.example.patientmanagementsystem.dto.UpdateDoctorRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:10.784 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 17:10:10.785 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.deleteDoctor(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:10.787 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 17:10:10.787 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.searchDoctors(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:10.789 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 17:10:10.790 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.getDoctors(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:10.812  INFO 29952 --- [main] c.e.p.service.AuthService                : === 开始初始化管理员账号 ===
2025-05-28 17:10:10.992  INFO 29952 --- [main] c.e.p.service.AuthService                : 找到管理员账号: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true
2025-05-28 17:10:10.992  INFO 29952 --- [main] c.e.p.service.AuthService                : === 管理员账号初始化完成 ===
2025-05-28 17:10:11.002 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or @doctorSecurityService.isDoctorSelf(#userIdOfDoctor)") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 17:10:11.007 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.DoctorController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or @doctorSecurityService.isDoctorSelf(#userIdOfDoctor)', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:11.155 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatients(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 17:10:11.157 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatients(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:11.158 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.searchPatients(java.lang.String)
2025-05-28 17:10:11.159 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.searchPatients(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:11.159 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("@patientSecurityService.canAccessPatientData(#patientId)") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatientReports(java.lang.String)
2025-05-28 17:10:11.159 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatientReports(java.lang.String)]] with attributes [[authorize: '@patientSecurityService.canAccessPatientData(#patientId)', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:11.159 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.updatePatient(java.lang.String,com.example.patientmanagementsystem.dto.UpdatePatientRequestDTO)
2025-05-28 17:10:11.159 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.updatePatient(java.lang.String,com.example.patientmanagementsystem.dto.UpdatePatientRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:11.161 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.deletePatient(java.lang.String)
2025-05-28 17:10:11.161 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.deletePatient(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:11.172 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.updateRelation(com.example.patientmanagementsystem.dto.UpdateRelationRequestDTO)
2025-05-28 17:10:11.172 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.updateRelation(com.example.patientmanagementsystem.dto.UpdateRelationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:11.173 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.getRelations(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 17:10:11.175 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.getRelations(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:11.176 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.deleteRelation(java.lang.String,java.lang.String)
2025-05-28 17:10:11.176 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.deleteRelation(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:11.177 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.addRelation(com.example.patientmanagementsystem.dto.AddRelationRequestDTO)
2025-05-28 17:10:11.177 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.addRelation(com.example.patientmanagementsystem.dto.AddRelationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:11.184 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 17:10:11.185 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.updateReportDetails(java.lang.String,com.example.patientmanagementsystem.dto.UpdateReportRequestDTO)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:11.186 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 17:10:11.186 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.uploadReport(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:11.187 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 17:10:11.187 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.getPatientReports(java.lang.String,int,int)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:11.188 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 17:10:11.188 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.getReportDetail(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:11.190 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 17:10:11.190 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.downloadReport(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:11.247  INFO 29952 --- [main] c.e.p.service.DataService                : Python脚本已复制到临时可执行路径: C:\Users\10263\AppData\Local\Temp\pms_scripts_cdd94365\processorOfRawData.py
2025-05-28 17:10:11.255 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.UploadController
2025-05-28 17:10:11.256 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.UploadController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.UploadController.uploadFourCsvFiles(org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:11.257 DEBUG 29952 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.UploadController
2025-05-28 17:10:11.257 DEBUG 29952 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.UploadController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.UploadController.getDataRecords(java.lang.String,int,int)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:11.559 DEBUG 29952 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/session']
2025-05-28 17:10:11.560 DEBUG 29952 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/users']
2025-05-28 17:10:11.560 DEBUG 29952 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/h2-console/**']
2025-05-28 17:10:11.560 DEBUG 29952 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')] for Ant [pattern='/admin/relations/**']
2025-05-28 17:10:11.560 DEBUG 29952 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasRole('ROLE_ADMIN')] for Ant [pattern='/admin/**']
2025-05-28 17:10:11.560 DEBUG 29952 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')] for Ant [pattern='/doctors/**']
2025-05-28 17:10:11.561 DEBUG 29952 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR','ROLE_PATIENT')] for Ant [pattern='/patients/**']
2025-05-28 17:10:11.561 DEBUG 29952 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2025-05-28 17:10:11.565  INFO 29952 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@28d1b2f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5f32de90, org.springframework.security.web.context.SecurityContextPersistenceFilter@3b62c51e, org.springframework.security.web.header.HeaderWriterFilter@5183131d, org.springframework.web.filter.CorsFilter@1181526e, org.springframework.security.web.authentication.logout.LogoutFilter@5ff8d76f, com.example.patientmanagementsystem.security.JwtAuthenticationFilter@1fc4483f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7dc9b41a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4f93a8f6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5134a7d6, org.springframework.security.web.session.SessionManagementFilter@2be208db, org.springframework.security.web.access.ExceptionTranslationFilter@f31b991, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@68a7f77a]
2025-05-28 17:10:12.552  INFO 29952 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path '/api'
2025-05-28 17:10:12.565  INFO 29952 --- [main] c.e.p.PatientManagementSystemApplication : Started PatientManagementSystemApplication in 7.475 seconds (JVM running for 7.912)
2025-05-28 17:10:12.577  INFO 29952 --- [main] c.e.p.config.AdminAccountInitializer     : 开始初始化管理员账号...
2025-05-28 17:10:12.582  INFO 29952 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号已存在，ID: cbee8b7a-bd24-4d5e-824f-ae7d3b1cec1c, isAdmin: true
2025-05-28 17:10:12.700  INFO 29952 --- [main] c.e.p.config.AdminAccountInitializer     : 更新管理员密码和信息完成
2025-05-28 17:10:12.826  INFO 29952 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号验证: ID=cbee8b7a-bd24-4d5e-824f-ae7d3b1cec1c, isAdmin=true, passwordMatches=true
2025-05-28 17:10:12.827  INFO 29952 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号初始化完成
2025-05-28 17:10:12.843  INFO 29952 --- [main] c.e.p.config.AdminUserInitializer        : Default admin user with phone: 13000000000  already exists.
2025-05-28 17:10:12.906  INFO 29952 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 开始全面修复管理员账号和权限...
2025-05-28 17:10:12.915  INFO 29952 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 数据库中管理员角色标志: 1
2025-05-28 17:10:12.982  INFO 29952 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员密码匹配: true
2025-05-28 17:10:12.985  INFO 29952 --- [main] c.e.p.security.JwtTokenProvider          : 生成token: username=13000000000 , roles=ROLE_ADMIN
2025-05-28 17:10:13.066  INFO 29952 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 生成管理员token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCAiLCJyb2xlcyI6IlJPTEVfQURNSU4iLCJpYXQiOjE3NDg0MjM0MTIsImV4cCI6MTc0ODUwOTgxMn0.rLwKVwlUqCdaobL4cdeNkLVNmMoRTbS8Jkpuq4CAjHM
2025-05-28 17:10:13.101  INFO 29952 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : Token中的角色: ROLE_ADMIN
2025-05-28 17:10:13.102  INFO 29952 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员账号和权限修复完成
2025-05-28 17:10:13.103  INFO 29952 --- [main] c.e.p.config.AdminRoleFixConfig          : 开始修复管理员角色...
2025-05-28 17:10:13.108  INFO 29952 --- [main] c.e.p.config.AdminRoleFixConfig          : 找到管理员账号: 13000000000  (ID: cbee8b7a-bd24-4d5e-824f-ae7d3b1cec1c)
2025-05-28 17:10:13.109  INFO 29952 --- [main] c.e.p.config.AdminRoleFixConfig          : 管理员角色已正确设置，无需更新
2025-05-28 17:10:13.111  INFO 29952 --- [main] c.e.p.config.AdminRoleFixConfig          : 数据库中管理员角色标志: 1
2025-05-28 17:10:13.111  INFO 29952 --- [main] c.e.p.config.AdminUserFixConfig          : 开始强制重新创建管理员账号...
2025-05-28 17:10:13.116  INFO 29952 --- [main] c.e.p.config.AdminUserFixConfig          : 找到现有管理员账号，准备删除重建: 13000000000 
2025-05-28 17:10:13.210  INFO 29952 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员账号强制重建完成: 13000000000  (ID: f175d253-838c-4153-ae14-0a6780b24465)
2025-05-28 17:10:13.211  INFO 29952 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员密码已加密: $2a$10$OHIMcx/4NXpSk4vkIyCF0edUvDx8qOh8829C9Aa6uigK/GNEjOmjG
2025-05-28 17:10:13.273  INFO 29952 --- [main] c.e.p.config.AdminUserFixConfig          : 密码匹配验证: 成功
2025-05-28 17:10:13.274  INFO 29952 --- [main] c.e.p.config.DirectAdminFixConfig        : 开始直接数据库操作修复管理员账号...
2025-05-28 17:10:13.275  INFO 29952 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号已存在，更新账号信息
2025-05-28 17:10:13.346  INFO 29952 --- [main] c.e.p.config.DirectAdminFixConfig        : 更新管理员账号: 1 行受影响
2025-05-28 17:10:13.425  INFO 29952 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号验证: ID=f175d253-838c-4153-ae14-0a6780b24465, isAdmin=true, passwordMatches=true
2025-05-28 17:10:13.426  INFO 29952 --- [main] c.e.p.config.DirectAdminFixConfig        : 直接数据库操作修复管理员账号完成
2025-05-28 17:10:13.426  INFO 29952 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 开始紧急修复管理员账号...
2025-05-28 17:10:13.429  INFO 29952 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员账号已存在，尝试更新角色标志
2025-05-28 17:10:13.431  INFO 29952 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新管理员角色标志: 1 行受影响
2025-05-28 17:10:13.435  INFO 29952 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新后管理员角色标志: 1
2025-05-28 17:10:13.507  INFO 29952 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员密码匹配，无需更新
2025-05-28 17:10:13.507  INFO 29952 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 紧急修复管理员账号完成
2025-05-28 17:10:58.640  INFO 29952 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-28 17:10:58.641  INFO 29952 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-05-28 17:10:58.645  INFO 29952 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2025-05-28 17:10:58.657 DEBUG 29952 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 17:10:58.662 DEBUG 29952 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 17:10:58.667  INFO 29952 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 17:10:58.669  INFO 29952 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 17:10:58.670  INFO 29952 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 17:10:58.671  INFO 29952 --- [http-nio-8080-exec-2] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 17:10:58.675  INFO 29952 --- [http-nio-8080-exec-2] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 17:10:58.676  INFO 29952 --- [http-nio-8080-exec-2] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 17:10:58.676  INFO 29952 --- [http-nio-8080-exec-2] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 17:10:58.678  INFO 29952 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 17:10:58.680  INFO 29952 --- [http-nio-8080-exec-2] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 17:10:58.680  INFO 29952 --- [http-nio-8080-exec-2] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 17:10:58.681  INFO 29952 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 17:10:58.688 DEBUG 29952 --- [http-nio-8080-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients] with attributes [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')]
2025-05-28 17:10:58.690 DEBUG 29952 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /doctors/18b36498-9bb5-4492-bdae-dbd2616b2890/patients
2025-05-28 17:10:58.725 DEBUG 29952 --- [http-nio-8080-exec-2] o.s.s.a.i.a.MethodSecurityInterceptor    : Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String); target is of class [com.example.patientmanagementsystem.controller.DoctorController] with attributes [[authorize: 'hasRole('ADMIN') or @doctorSecurityService.isDoctorSelf(#userIdOfDoctor)', filter: 'null', filterTarget: 'null']]
2025-05-28 17:10:58.727  WARN 29952 --- [http-nio-8080-exec-2] c.e.p.exception.GlobalExceptionHandler   : 权限不足: 不允许访问
2025-05-28 17:10:58.763 DEBUG 29952 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 17:11:19.974 DEBUG 29952 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /doctors/223ffe8a-50ac-4006-82bb-70df8606d203/patients
2025-05-28 17:11:19.975 DEBUG 29952 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 17:11:19.977  INFO 29952 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/doctors/223ffe8a-50ac-4006-82bb-70df8606d203/patients
2025-05-28 17:11:19.983  INFO 29952 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 17:11:19.990  INFO 29952 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 18743005518
2025-05-28 17:11:19.991  INFO 29952 --- [http-nio-8080-exec-3] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=18743005518
2025-05-28 17:11:20.000  INFO 29952 --- [http-nio-8080-exec-3] c.e.p.security.CustomUserDetailsService  : 找到用户: id=223ffe8a-50ac-4006-82bb-70df8606d203, name=蔡旭, isAdmin=false, isDoctor=true, isPatient=false
2025-05-28 17:11:20.003  INFO 29952 --- [http-nio-8080-exec-3] c.e.p.security.CustomUserDetailsService  : 用户拥有医生角色
2025-05-28 17:11:20.004  INFO 29952 --- [http-nio-8080-exec-3] c.e.p.security.CustomUserDetailsService  : 用户 18743005518 的权限: [ROLE_DOCTOR]
2025-05-28 17:11:20.005  INFO 29952 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=18743005518, authorities=[ROLE_DOCTOR]
2025-05-28 17:11:20.009  INFO 29952 --- [http-nio-8080-exec-3] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_DOCTOR
2025-05-28 17:11:20.010  INFO 29952 --- [http-nio-8080-exec-3] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_DOCTOR]
2025-05-28 17:11:20.011  INFO 29952 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=18743005518, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_DOCTOR]], authorities=[ROLE_DOCTOR]
2025-05-28 17:11:20.014 DEBUG 29952 --- [http-nio-8080-exec-3] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /doctors/223ffe8a-50ac-4006-82bb-70df8606d203/patients] with attributes [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')]
2025-05-28 17:11:20.015 DEBUG 29952 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /doctors/223ffe8a-50ac-4006-82bb-70df8606d203/patients
2025-05-28 17:11:20.027 DEBUG 29952 --- [http-nio-8080-exec-3] o.s.s.a.i.a.MethodSecurityInterceptor    : Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String); target is of class [com.example.patientmanagementsystem.controller.DoctorController] with attributes [[authorize: 'hasRole('ADMIN') or @doctorSecurityService.isDoctorSelf(#userIdOfDoctor)', filter: 'null', filterTarget: 'null']]
2025-05-28 17:11:20.107 DEBUG 29952 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 17:12:12.423  INFO 29952 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 17:12:12.427  INFO 29952 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-05-28 17:12:12.439  INFO 29952 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-05-28 17:19:25.607  INFO 3076 --- [main] c.e.p.PatientManagementSystemApplication : Starting PatientManagementSystemApplication using Java 21.0.7 on 少华从文 with PID 3076 (C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes started by 10263 in C:\Users\10263\Downloads\patient-management-system-complete)
2025-05-28 17:19:25.610 DEBUG 3076 --- [main] c.e.p.PatientManagementSystemApplication : Running with Spring Boot v2.7.14, Spring v5.3.29
2025-05-28 17:19:25.611  INFO 3076 --- [main] c.e.p.PatientManagementSystemApplication : No active profile set, falling back to 1 default profile: "default"
2025-05-28 17:19:26.427  INFO 3076 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-28 17:19:26.513  INFO 3076 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 76 ms. Found 6 JPA repository interfaces.
2025-05-28 17:19:27.444  INFO 3076 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-05-28 17:19:27.455  INFO 3076 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-05-28 17:19:27.456  INFO 3076 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-05-28 17:19:27.592  INFO 3076 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring embedded WebApplicationContext
2025-05-28 17:19:27.592  INFO 3076 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1935 ms
2025-05-28 17:19:27.921  WARN 3076 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-28 17:19:28.367  INFO 3076 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-28 17:19:28.556  INFO 3076 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-05-28 17:19:29.554  INFO 3076 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 17:19:30.028 DEBUG 3076 --- [main] c.e.p.security.JwtAuthenticationFilter   : Filter 'jwtAuthenticationFilter' configured for use
2025-05-28 17:19:30.044  INFO 3076 --- [main] c.e.p.config.AdminAccountInitializer     : AdminAccountInitializer初始化，管理员账号: 13000000000 
2025-05-28 17:19:30.564 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 17:19:30.568 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.updateDoctor(java.lang.String,com.example.patientmanagementsystem.dto.UpdateDoctorRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:30.608 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 17:19:30.609 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.createDoctor(com.example.patientmanagementsystem.dto.DoctorRegistrationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:30.611 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 17:19:30.611 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.deleteDoctor(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:30.612 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 17:19:30.613 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.searchDoctors(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:30.613 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 17:19:30.613 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.getDoctors(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:30.641  INFO 3076 --- [main] c.e.p.service.AuthService                : === 开始初始化管理员账号 ===
2025-05-28 17:19:30.790  INFO 3076 --- [main] c.e.p.service.AuthService                : 找到管理员账号: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true
2025-05-28 17:19:30.791  INFO 3076 --- [main] c.e.p.service.AuthService                : === 管理员账号初始化完成 ===
2025-05-28 17:19:30.798 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or @doctorSecurityService.isDoctorSelf(#userIdOfDoctor)") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 17:19:30.801 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.DoctorController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or @doctorSecurityService.isDoctorSelf(#userIdOfDoctor)', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:30.925 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatients(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 17:19:30.925 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatients(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:30.926 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.deletePatient(java.lang.String)
2025-05-28 17:19:30.926 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.deletePatient(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:30.928 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.updatePatient(java.lang.String,com.example.patientmanagementsystem.dto.UpdatePatientRequestDTO)
2025-05-28 17:19:30.928 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.updatePatient(java.lang.String,com.example.patientmanagementsystem.dto.UpdatePatientRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:30.928 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.searchPatients(java.lang.String)
2025-05-28 17:19:30.929 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.searchPatients(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:30.929 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("@patientSecurityService.canAccessPatientData(#patientId)") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatientReports(java.lang.String)
2025-05-28 17:19:30.930 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatientReports(java.lang.String)]] with attributes [[authorize: '@patientSecurityService.canAccessPatientData(#patientId)', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:30.940 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.deleteRelation(java.lang.String,java.lang.String)
2025-05-28 17:19:30.941 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.deleteRelation(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:30.942 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.addRelation(com.example.patientmanagementsystem.dto.AddRelationRequestDTO)
2025-05-28 17:19:30.943 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.addRelation(com.example.patientmanagementsystem.dto.AddRelationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:30.944 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.getRelations(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 17:19:30.944 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.getRelations(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:30.944 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.updateRelation(com.example.patientmanagementsystem.dto.UpdateRelationRequestDTO)
2025-05-28 17:19:30.944 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.updateRelation(com.example.patientmanagementsystem.dto.UpdateRelationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:30.952 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 17:19:30.953 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.getReportDetail(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:30.954 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 17:19:30.954 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.uploadReport(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:30.954 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 17:19:30.956 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.downloadReport(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:30.956 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 17:19:30.957 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.getPatientReports(java.lang.String,int,int)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:30.957 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 17:19:30.957 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.updateReportDetails(java.lang.String,com.example.patientmanagementsystem.dto.UpdateReportRequestDTO)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:31.016  INFO 3076 --- [main] c.e.p.service.DataService                : Python脚本已复制到临时可执行路径: C:\Users\10263\AppData\Local\Temp\pms_scripts_afa5fd8b\processorOfRawData.py
2025-05-28 17:19:31.022 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.UploadController
2025-05-28 17:19:31.022 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.UploadController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.UploadController.uploadFourCsvFiles(org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:31.023 DEBUG 3076 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.UploadController
2025-05-28 17:19:31.023 DEBUG 3076 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.UploadController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.UploadController.getDataRecords(java.lang.String,int,int)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:19:31.298 DEBUG 3076 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/session']
2025-05-28 17:19:31.299 DEBUG 3076 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/users']
2025-05-28 17:19:31.299 DEBUG 3076 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/h2-console/**']
2025-05-28 17:19:31.300 DEBUG 3076 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')] for Ant [pattern='/admin/relations/**']
2025-05-28 17:19:31.300 DEBUG 3076 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasRole('ROLE_ADMIN')] for Ant [pattern='/admin/**']
2025-05-28 17:19:31.300 DEBUG 3076 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')] for Ant [pattern='/doctors/**']
2025-05-28 17:19:31.300 DEBUG 3076 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR','ROLE_PATIENT')] for Ant [pattern='/patients/**']
2025-05-28 17:19:31.300 DEBUG 3076 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2025-05-28 17:19:31.304  INFO 3076 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3b8a8abc, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@72851503, org.springframework.security.web.context.SecurityContextPersistenceFilter@2f09907, org.springframework.security.web.header.HeaderWriterFilter@198a0416, org.springframework.web.filter.CorsFilter@690c3b1f, org.springframework.security.web.authentication.logout.LogoutFilter@5980e29f, com.example.patientmanagementsystem.security.JwtAuthenticationFilter@1fc4483f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5f8a29ca, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@638e8194, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d722bff, org.springframework.security.web.session.SessionManagementFilter@7db679, org.springframework.security.web.access.ExceptionTranslationFilter@496004e3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4ee1c29a]
2025-05-28 17:19:32.326  INFO 3076 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path '/api'
2025-05-28 17:19:32.339  INFO 3076 --- [main] c.e.p.PatientManagementSystemApplication : Started PatientManagementSystemApplication in 7.229 seconds (JVM running for 7.634)
2025-05-28 17:19:32.351  INFO 3076 --- [main] c.e.p.config.AdminAccountInitializer     : 开始初始化管理员账号...
2025-05-28 17:19:32.358  INFO 3076 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号已存在，ID: f175d253-838c-4153-ae14-0a6780b24465, isAdmin: true
2025-05-28 17:19:32.497  INFO 3076 --- [main] c.e.p.config.AdminAccountInitializer     : 更新管理员密码和信息完成
2025-05-28 17:19:32.641  INFO 3076 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号验证: ID=f175d253-838c-4153-ae14-0a6780b24465, isAdmin=true, passwordMatches=true
2025-05-28 17:19:32.642  INFO 3076 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号初始化完成
2025-05-28 17:19:32.662  INFO 3076 --- [main] c.e.p.config.AdminUserInitializer        : Default admin user with phone: 13000000000  already exists.
2025-05-28 17:19:32.725  INFO 3076 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 开始全面修复管理员账号和权限...
2025-05-28 17:19:32.739  INFO 3076 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 数据库中管理员角色标志: 1
2025-05-28 17:19:32.799  INFO 3076 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员密码匹配: true
2025-05-28 17:19:32.800  INFO 3076 --- [main] c.e.p.security.JwtTokenProvider          : 生成token: username=13000000000 , roles=ROLE_ADMIN
2025-05-28 17:19:32.872  INFO 3076 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 生成管理员token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCAiLCJyb2xlcyI6IlJPTEVfQURNSU4iLCJpYXQiOjE3NDg0MjM5NzIsImV4cCI6MTc0ODUxMDM3Mn0.J__-5KQQMonqavnJtHCOHjgTLTysT7qWPGAv32wsE70
2025-05-28 17:19:32.897  INFO 3076 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : Token中的角色: ROLE_ADMIN
2025-05-28 17:19:32.898  INFO 3076 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员账号和权限修复完成
2025-05-28 17:19:32.899  INFO 3076 --- [main] c.e.p.config.AdminRoleFixConfig          : 开始修复管理员角色...
2025-05-28 17:19:32.903  INFO 3076 --- [main] c.e.p.config.AdminRoleFixConfig          : 找到管理员账号: 13000000000  (ID: f175d253-838c-4153-ae14-0a6780b24465)
2025-05-28 17:19:32.904  INFO 3076 --- [main] c.e.p.config.AdminRoleFixConfig          : 管理员角色已正确设置，无需更新
2025-05-28 17:19:32.907  INFO 3076 --- [main] c.e.p.config.AdminRoleFixConfig          : 数据库中管理员角色标志: 1
2025-05-28 17:19:32.908  INFO 3076 --- [main] c.e.p.config.AdminUserFixConfig          : 开始强制重新创建管理员账号...
2025-05-28 17:19:32.913  INFO 3076 --- [main] c.e.p.config.AdminUserFixConfig          : 找到现有管理员账号，准备删除重建: 13000000000 
2025-05-28 17:19:33.027  INFO 3076 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员账号强制重建完成: 13000000000  (ID: aacaa29c-3923-4cce-a1a8-7ee6ca09a7a6)
2025-05-28 17:19:33.029  INFO 3076 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员密码已加密: $2a$10$bzaAB8aHyoSFGIs.2vSVYOASkhpLD/KY.LbandJQOgcqAgV7K.ivS
2025-05-28 17:19:33.112  INFO 3076 --- [main] c.e.p.config.AdminUserFixConfig          : 密码匹配验证: 成功
2025-05-28 17:19:33.113  INFO 3076 --- [main] c.e.p.config.DirectAdminFixConfig        : 开始直接数据库操作修复管理员账号...
2025-05-28 17:19:33.115  INFO 3076 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号已存在，更新账号信息
2025-05-28 17:19:33.215  INFO 3076 --- [main] c.e.p.config.DirectAdminFixConfig        : 更新管理员账号: 1 行受影响
2025-05-28 17:19:33.277  INFO 3076 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号验证: ID=aacaa29c-3923-4cce-a1a8-7ee6ca09a7a6, isAdmin=true, passwordMatches=true
2025-05-28 17:19:33.277  INFO 3076 --- [main] c.e.p.config.DirectAdminFixConfig        : 直接数据库操作修复管理员账号完成
2025-05-28 17:19:33.278  INFO 3076 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 开始紧急修复管理员账号...
2025-05-28 17:19:33.280  INFO 3076 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员账号已存在，尝试更新角色标志
2025-05-28 17:19:33.281  INFO 3076 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新管理员角色标志: 1 行受影响
2025-05-28 17:19:33.283  INFO 3076 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新后管理员角色标志: 1
2025-05-28 17:19:33.356  INFO 3076 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员密码匹配，无需更新
2025-05-28 17:19:33.356  INFO 3076 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 紧急修复管理员账号完成
2025-05-28 17:21:16.190  INFO 3076 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-28 17:21:16.190  INFO 3076 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-05-28 17:21:16.193  INFO 3076 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2025-05-28 17:21:16.208 DEBUG 3076 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /session
2025-05-28 17:21:16.213 DEBUG 3076 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 17:21:16.219  INFO 3076 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 处理请求: POST /api/session
2025-05-28 17:21:16.220  INFO 3076 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 请求不包含有效JWT令牌
2025-05-28 17:21:16.222 DEBUG 3076 --- [http-nio-8080-exec-2] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-28 17:21:16.229 DEBUG 3076 --- [http-nio-8080-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /session] with attributes [permitAll]
2025-05-28 17:21:16.230 DEBUG 3076 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /session
2025-05-28 17:21:16.339  INFO 3076 --- [http-nio-8080-exec-2] c.e.p.controller.AuthController          : 收到登录请求: username=13000000000
2025-05-28 17:21:16.340  INFO 3076 --- [http-nio-8080-exec-2] c.e.p.controller.AuthController          : 检测到管理员登录请求
2025-05-28 17:21:16.345  INFO 3076 --- [http-nio-8080-exec-2] c.e.p.service.AuthService                : 用户登录: username=13000000000
2025-05-28 17:21:16.346  INFO 3076 --- [http-nio-8080-exec-2] c.e.p.service.AuthService                : 检测到管理员登录，使用管理员专用登录方法
2025-05-28 17:21:16.347  INFO 3076 --- [http-nio-8080-exec-2] c.e.p.service.AuthService                : 管理员登录: 13000000000
2025-05-28 17:21:16.351  INFO 3076 --- [http-nio-8080-exec-2] c.e.p.service.AuthService                : 找到管理员用户: id=a421d099-6273-464a-b7d7-266d61cf07ea, isAdmin=true
2025-05-28 17:21:16.423  INFO 3076 --- [http-nio-8080-exec-2] c.e.p.service.AuthService                : 创建管理员认证对象，权限: [ROLE_ADMIN]
2025-05-28 17:21:16.423  INFO 3076 --- [http-nio-8080-exec-2] c.e.p.security.JwtTokenProvider          : 生成token: username=13000000000, roles=ROLE_ADMIN
2025-05-28 17:21:16.425  INFO 3076 --- [http-nio-8080-exec-2] c.e.p.service.AuthService                : 生成管理员token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCIsInJvbGVzIjoiUk9MRV9BRE1JTiIsImlhdCI6MTc0ODQyNDA3NiwiZXhwIjoxNzQ4NTEwNDc2fQ.ujVvrTIikCNxzJncl5YSdNIZ80PiG0VGUx-7jv-Gahk
2025-05-28 17:21:16.426  INFO 3076 --- [http-nio-8080-exec-2] c.e.p.service.AuthService                : 管理员登录成功: userId=a421d099-6273-464a-b7d7-266d61cf07ea, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCIsInJvbGVzIjoiUk9MRV9BRE1JTiIsImlhdCI6MTc0ODQyNDA3NiwiZXhwIjoxNzQ4NTEwNDc2fQ.ujVvrTIikCNxzJncl5YSdNIZ80PiG0VGUx-7jv-Gahk
2025-05-28 17:21:16.427  INFO 3076 --- [http-nio-8080-exec-2] c.e.p.controller.AuthController          : 登录成功: userId=a421d099-6273-464a-b7d7-266d61cf07ea, isAdmin=true, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCIsInJvbGVzIjoiUk9MRV9BRE1JTiIsImlhdCI6MTc0ODQyNDA3NiwiZXhwIjoxNzQ4NTEwNDc2fQ.ujVvrTIikCNxzJncl5YSdNIZ80PiG0VGUx-7jv-Gahk
2025-05-28 17:21:16.459 DEBUG 3076 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 17:23:15.912 DEBUG 3076 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing POST /users
2025-05-28 17:23:15.913 DEBUG 3076 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 17:23:15.916  INFO 3076 --- [http-nio-8080-exec-5] c.e.p.security.JwtAuthenticationFilter   : 处理请求: POST /api/users
2025-05-28 17:23:15.923  INFO 3076 --- [http-nio-8080-exec-5] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 17:23:15.927  INFO 3076 --- [http-nio-8080-exec-5] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 13000000000
2025-05-28 17:23:15.929  INFO 3076 --- [http-nio-8080-exec-5] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=13000000000
2025-05-28 17:23:15.941  INFO 3076 --- [http-nio-8080-exec-5] c.e.p.security.CustomUserDetailsService  : 找到用户: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true, isDoctor=false, isPatient=false
2025-05-28 17:23:15.943  INFO 3076 --- [http-nio-8080-exec-5] c.e.p.security.CustomUserDetailsService  : 用户拥有管理员角色
2025-05-28 17:23:15.943  INFO 3076 --- [http-nio-8080-exec-5] c.e.p.security.CustomUserDetailsService  : 用户 13000000000 的权限: [ROLE_ADMIN]
2025-05-28 17:23:15.945  INFO 3076 --- [http-nio-8080-exec-5] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=13000000000, authorities=[ROLE_ADMIN]
2025-05-28 17:23:15.948  INFO 3076 --- [http-nio-8080-exec-5] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_ADMIN
2025-05-28 17:23:15.950  INFO 3076 --- [http-nio-8080-exec-5] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_ADMIN]
2025-05-28 17:23:15.951  INFO 3076 --- [http-nio-8080-exec-5] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=13000000000, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], authorities=[ROLE_ADMIN]
2025-05-28 17:23:15.953 DEBUG 3076 --- [http-nio-8080-exec-5] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /users] with attributes [permitAll]
2025-05-28 17:23:15.954 DEBUG 3076 --- [http-nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured POST /users
2025-05-28 17:23:15.988  INFO 3076 --- [http-nio-8080-exec-5] c.e.p.controller.UserController          : 收到用户注册请求: phone=13000000001
2025-05-28 17:23:15.992  INFO 3076 --- [http-nio-8080-exec-5] c.e.p.service.AuthService                : 用户注册: phone=13000000001, name=蔡旭
2025-05-28 17:23:16.072  INFO 3076 --- [http-nio-8080-exec-5] c.e.p.service.AuthService                : 用户基础账户创建成功: id=48db6ddb-decd-4d29-a25e-f1bae4c1f583
2025-05-28 17:23:16.080  INFO 3076 --- [http-nio-8080-exec-5] c.e.p.service.AuthService                : 患者详细信息创建成功: patientId=bbdf707c-a4cb-4f5f-94cc-0bc31f1885af, userId=48db6ddb-decd-4d29-a25e-f1bae4c1f583
2025-05-28 17:23:16.153 ERROR 3076 --- [http-nio-8080-exec-5] o.h.engine.jdbc.spi.SqlExceptionHelper   : Duplicate entry '123456789012345678' for key 'patients.UK_dc7o8xt6d3xh28dyq1ace2pyg'
2025-05-28 17:23:16.169 ERROR 3076 --- [http-nio-8080-exec-5] c.e.p.exception.GlobalExceptionHandler   : 发生未知服务器错误

org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [patients.UK_dc7o8xt6d3xh28dyq1ace2pyg]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743) ~[spring-tx-5.3.29.jar:5.3.29]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711) ~[spring-tx-5.3.29.jar:5.3.29]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654) ~[spring-tx-5.3.29.jar:5.3.29]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407) ~[spring-tx-5.3.29.jar:5.3.29]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-5.3.29.jar:5.3.29]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.29.jar:5.3.29]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.29.jar:5.3.29]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.29.jar:5.3.29]
	at com.example.patientmanagementsystem.service.AuthService$$EnhancerBySpringCGLIB$$34ee9a0f.register(<generated>) ~[classes/:na]
	at com.example.patientmanagementsystem.controller.UserController.registerUser(UserController.java:30) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Unknown Source) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555) ~[tomcat-embed-core-9.0.78.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623) ~[tomcat-embed-core-9.0.78.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at com.example.patientmanagementsystem.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:75) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.lang.Thread.run(Unknown Source) ~[na:na]
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:59) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3375) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3937) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at java.base/java.util.LinkedHashMap.forEach(Unknown Source) ~[na:na]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1407) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3303) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2438) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562) ~[spring-orm-5.3.29.jar:5.3.29]
	... 105 common frames omitted
Caused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '123456789012345678' for key 'patients.UK_dc7o8xt6d3xh28dyq1ace2pyg'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1061) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1009) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1320) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:994) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:na]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	... 126 common frames omitted

2025-05-28 17:23:16.189 DEBUG 3076 --- [http-nio-8080-exec-5] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 17:23:35.707 DEBUG 3076 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing POST /users
2025-05-28 17:23:35.709 DEBUG 3076 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 17:23:35.710  INFO 3076 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 处理请求: POST /api/users
2025-05-28 17:23:35.715  INFO 3076 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 17:23:35.721  INFO 3076 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 13000000000
2025-05-28 17:23:35.722  INFO 3076 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=13000000000
2025-05-28 17:23:35.730  INFO 3076 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 找到用户: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true, isDoctor=false, isPatient=false
2025-05-28 17:23:35.731  INFO 3076 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 用户拥有管理员角色
2025-05-28 17:23:35.732  INFO 3076 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 用户 13000000000 的权限: [ROLE_ADMIN]
2025-05-28 17:23:35.733  INFO 3076 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=13000000000, authorities=[ROLE_ADMIN]
2025-05-28 17:23:35.737  INFO 3076 --- [http-nio-8080-exec-7] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_ADMIN
2025-05-28 17:23:35.738  INFO 3076 --- [http-nio-8080-exec-7] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_ADMIN]
2025-05-28 17:23:35.739  INFO 3076 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=13000000000, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], authorities=[ROLE_ADMIN]
2025-05-28 17:23:35.740 DEBUG 3076 --- [http-nio-8080-exec-7] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /users] with attributes [permitAll]
2025-05-28 17:23:35.741 DEBUG 3076 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured POST /users
2025-05-28 17:23:35.743  INFO 3076 --- [http-nio-8080-exec-7] c.e.p.controller.UserController          : 收到用户注册请求: phone=13000000001
2025-05-28 17:23:35.744  INFO 3076 --- [http-nio-8080-exec-7] c.e.p.service.AuthService                : 用户注册: phone=13000000001, name=蔡旭
2025-05-28 17:23:35.825  INFO 3076 --- [http-nio-8080-exec-7] c.e.p.service.AuthService                : 用户基础账户创建成功: id=111a2c5f-ae30-46dc-90d5-f8cc0083ce63
2025-05-28 17:23:35.826  INFO 3076 --- [http-nio-8080-exec-7] c.e.p.service.AuthService                : 患者详细信息创建成功: patientId=9424804e-d71a-4541-9637-b3af89861f40, userId=111a2c5f-ae30-46dc-90d5-f8cc0083ce63
2025-05-28 17:23:35.834 ERROR 3076 --- [http-nio-8080-exec-7] o.h.engine.jdbc.spi.SqlExceptionHelper   : Duplicate entry '123456789012345678' for key 'patients.UK_dc7o8xt6d3xh28dyq1ace2pyg'
2025-05-28 17:23:35.839 ERROR 3076 --- [http-nio-8080-exec-7] c.e.p.exception.GlobalExceptionHandler   : 发生未知服务器错误

org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [patients.UK_dc7o8xt6d3xh28dyq1ace2pyg]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566) ~[spring-orm-5.3.29.jar:5.3.29]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743) ~[spring-tx-5.3.29.jar:5.3.29]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711) ~[spring-tx-5.3.29.jar:5.3.29]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654) ~[spring-tx-5.3.29.jar:5.3.29]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407) ~[spring-tx-5.3.29.jar:5.3.29]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-5.3.29.jar:5.3.29]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.29.jar:5.3.29]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.29.jar:5.3.29]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.29.jar:5.3.29]
	at com.example.patientmanagementsystem.service.AuthService$$EnhancerBySpringCGLIB$$34ee9a0f.register(<generated>) ~[classes/:na]
	at com.example.patientmanagementsystem.controller.UserController.registerUser(UserController.java:30) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Unknown Source) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555) ~[tomcat-embed-core-9.0.78.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.29.jar:5.3.29]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623) ~[tomcat-embed-core-9.0.78.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at com.example.patientmanagementsystem.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:75) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.lang.Thread.run(Unknown Source) ~[na:na]
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:59) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3375) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3937) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at java.base/java.util.LinkedHashMap.forEach(Unknown Source) ~[na:na]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1407) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3303) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2438) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562) ~[spring-orm-5.3.29.jar:5.3.29]
	... 105 common frames omitted
Caused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '123456789012345678' for key 'patients.UK_dc7o8xt6d3xh28dyq1ace2pyg'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1061) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1009) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1320) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:994) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:na]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197) ~[hibernate-core-5.6.15.Final.jar:5.6.15.Final]
	... 126 common frames omitted

2025-05-28 17:23:35.845 DEBUG 3076 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 17:27:06.756  INFO 3076 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 17:27:06.759  INFO 3076 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-05-28 17:27:06.780  INFO 3076 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-05-28 17:27:33.539  INFO 33540 --- [main] c.e.p.PatientManagementSystemApplication : Starting PatientManagementSystemApplication using Java 21.0.7 on 少华从文 with PID 33540 (C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes started by 10263 in C:\Users\10263\Downloads\patient-management-system-complete)
2025-05-28 17:27:33.541 DEBUG 33540 --- [main] c.e.p.PatientManagementSystemApplication : Running with Spring Boot v2.7.14, Spring v5.3.29
2025-05-28 17:27:33.542  INFO 33540 --- [main] c.e.p.PatientManagementSystemApplication : No active profile set, falling back to 1 default profile: "default"
2025-05-28 17:27:34.484  INFO 33540 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-28 17:27:34.579  INFO 33540 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 84 ms. Found 6 JPA repository interfaces.
2025-05-28 17:27:35.531  INFO 33540 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-05-28 17:27:35.544  INFO 33540 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-05-28 17:27:35.545  INFO 33540 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-05-28 17:27:35.770  INFO 33540 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring embedded WebApplicationContext
2025-05-28 17:27:35.770  INFO 33540 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2176 ms
2025-05-28 17:27:36.085  WARN 33540 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-28 17:27:36.714  INFO 33540 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-28 17:27:36.915  INFO 33540 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-05-28 17:27:38.046  INFO 33540 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 17:27:38.585 DEBUG 33540 --- [main] c.e.p.security.JwtAuthenticationFilter   : Filter 'jwtAuthenticationFilter' configured for use
2025-05-28 17:27:38.604  INFO 33540 --- [main] c.e.p.config.AdminAccountInitializer     : AdminAccountInitializer初始化，管理员账号: 13000000000 
2025-05-28 17:27:39.067 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 17:27:39.072 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.getDoctors(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.113 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 17:27:39.115 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.deleteDoctor(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.117 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 17:27:39.118 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.searchDoctors(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.118 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 17:27:39.119 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.createDoctor(com.example.patientmanagementsystem.dto.DoctorRegistrationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.120 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 17:27:39.120 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.updateDoctor(java.lang.String,com.example.patientmanagementsystem.dto.UpdateDoctorRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.148  INFO 33540 --- [main] c.e.p.service.AuthService                : === 开始初始化管理员账号 ===
2025-05-28 17:27:39.277  INFO 33540 --- [main] c.e.p.service.AuthService                : 找到管理员账号: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true
2025-05-28 17:27:39.278  INFO 33540 --- [main] c.e.p.service.AuthService                : === 管理员账号初始化完成 ===
2025-05-28 17:27:39.285 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or @doctorSecurityService.isDoctorSelf(#userIdOfDoctor)") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 17:27:39.287 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.DoctorController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or @doctorSecurityService.isDoctorSelf(#userIdOfDoctor)', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.417 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatients(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 17:27:39.419 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatients(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.420 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.updatePatient(java.lang.String,com.example.patientmanagementsystem.dto.UpdatePatientRequestDTO)
2025-05-28 17:27:39.420 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.updatePatient(java.lang.String,com.example.patientmanagementsystem.dto.UpdatePatientRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.421 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.searchPatients(java.lang.String)
2025-05-28 17:27:39.421 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.searchPatients(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.422 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.deletePatient(java.lang.String)
2025-05-28 17:27:39.422 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.deletePatient(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.422 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("@patientSecurityService.canAccessPatientData(#patientId)") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatientReports(java.lang.String)
2025-05-28 17:27:39.423 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatientReports(java.lang.String)]] with attributes [[authorize: '@patientSecurityService.canAccessPatientData(#patientId)', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.431 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.updateRelation(com.example.patientmanagementsystem.dto.UpdateRelationRequestDTO)
2025-05-28 17:27:39.432 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.updateRelation(com.example.patientmanagementsystem.dto.UpdateRelationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.432 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.deleteRelation(java.lang.String,java.lang.String)
2025-05-28 17:27:39.433 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.deleteRelation(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.433 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.getRelations(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 17:27:39.434 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.getRelations(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.434 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.addRelation(com.example.patientmanagementsystem.dto.AddRelationRequestDTO)
2025-05-28 17:27:39.435 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.addRelation(com.example.patientmanagementsystem.dto.AddRelationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.442 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 17:27:39.443 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.downloadReport(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.444 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 17:27:39.445 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.getReportDetail(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.445 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 17:27:39.446 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.uploadReport(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.446 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 17:27:39.446 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.getPatientReports(java.lang.String,int,int)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.447 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 17:27:39.447 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.updateReportDetails(java.lang.String,com.example.patientmanagementsystem.dto.UpdateReportRequestDTO)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.505  INFO 33540 --- [main] c.e.p.service.DataService                : Python脚本已复制到临时可执行路径: C:\Users\10263\AppData\Local\Temp\pms_scripts_f5eb07bb\processorOfRawData.py
2025-05-28 17:27:39.510 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.UploadController
2025-05-28 17:27:39.510 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.UploadController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.UploadController.getDataRecords(java.lang.String,int,int)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.511 DEBUG 33540 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.UploadController
2025-05-28 17:27:39.513 DEBUG 33540 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.UploadController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.UploadController.uploadFourCsvFiles(org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 17:27:39.793 DEBUG 33540 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/session']
2025-05-28 17:27:39.794 DEBUG 33540 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/users']
2025-05-28 17:27:39.795 DEBUG 33540 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/h2-console/**']
2025-05-28 17:27:39.795 DEBUG 33540 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')] for Ant [pattern='/admin/relations/**']
2025-05-28 17:27:39.795 DEBUG 33540 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasRole('ROLE_ADMIN')] for Ant [pattern='/admin/**']
2025-05-28 17:27:39.796 DEBUG 33540 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')] for Ant [pattern='/doctors/**']
2025-05-28 17:27:39.796 DEBUG 33540 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR','ROLE_PATIENT')] for Ant [pattern='/patients/**']
2025-05-28 17:27:39.796 DEBUG 33540 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2025-05-28 17:27:39.800  INFO 33540 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4f2a9903, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@294ebdae, org.springframework.security.web.context.SecurityContextPersistenceFilter@3cc2c4b8, org.springframework.security.web.header.HeaderWriterFilter@47629063, org.springframework.web.filter.CorsFilter@e280006, org.springframework.security.web.authentication.logout.LogoutFilter@3bdc8975, com.example.patientmanagementsystem.security.JwtAuthenticationFilter@f833223, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1fc4b8d6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4c57ca10, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54e3cba2, org.springframework.security.web.session.SessionManagementFilter@6e5a77ef, org.springframework.security.web.access.ExceptionTranslationFilter@1c76b2fe, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@395abe85]
2025-05-28 17:27:40.980  INFO 33540 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path '/api'
2025-05-28 17:27:40.993  INFO 33540 --- [main] c.e.p.PatientManagementSystemApplication : Started PatientManagementSystemApplication in 8.012 seconds (JVM running for 8.461)
2025-05-28 17:27:41.001  INFO 33540 --- [main] c.e.p.config.AdminAccountInitializer     : 开始初始化管理员账号...
2025-05-28 17:27:41.006  INFO 33540 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号已存在，ID: aacaa29c-3923-4cce-a1a8-7ee6ca09a7a6, isAdmin: true
2025-05-28 17:27:41.095  INFO 33540 --- [main] c.e.p.config.AdminAccountInitializer     : 更新管理员密码和信息完成
2025-05-28 17:27:41.184  INFO 33540 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号验证: ID=aacaa29c-3923-4cce-a1a8-7ee6ca09a7a6, isAdmin=true, passwordMatches=true
2025-05-28 17:27:41.185  INFO 33540 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号初始化完成
2025-05-28 17:27:41.215  INFO 33540 --- [main] c.e.p.config.AdminUserInitializer        : Default admin user with phone: 13000000000  already exists.
2025-05-28 17:27:41.282  INFO 33540 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 开始全面修复管理员账号和权限...
2025-05-28 17:27:41.296  INFO 33540 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 数据库中管理员角色标志: 1
2025-05-28 17:27:41.381  INFO 33540 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员密码匹配: true
2025-05-28 17:27:41.383  INFO 33540 --- [main] c.e.p.security.JwtTokenProvider          : 生成token: username=13000000000 , roles=ROLE_ADMIN
2025-05-28 17:27:41.447  INFO 33540 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 生成管理员token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCAiLCJyb2xlcyI6IlJPTEVfQURNSU4iLCJpYXQiOjE3NDg0MjQ0NjEsImV4cCI6MTc0ODUxMDg2MX0.EjmfrWpf1xv3W9czftE8QUVipYAjep7Z9BjE7ef-Clw
2025-05-28 17:27:41.476  INFO 33540 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : Token中的角色: ROLE_ADMIN
2025-05-28 17:27:41.476  INFO 33540 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员账号和权限修复完成
2025-05-28 17:27:41.477  INFO 33540 --- [main] c.e.p.config.AdminRoleFixConfig          : 开始修复管理员角色...
2025-05-28 17:27:41.480  INFO 33540 --- [main] c.e.p.config.AdminRoleFixConfig          : 找到管理员账号: 13000000000  (ID: aacaa29c-3923-4cce-a1a8-7ee6ca09a7a6)
2025-05-28 17:27:41.480  INFO 33540 --- [main] c.e.p.config.AdminRoleFixConfig          : 管理员角色已正确设置，无需更新
2025-05-28 17:27:41.482  INFO 33540 --- [main] c.e.p.config.AdminRoleFixConfig          : 数据库中管理员角色标志: 1
2025-05-28 17:27:41.482  INFO 33540 --- [main] c.e.p.config.AdminUserFixConfig          : 开始强制重新创建管理员账号...
2025-05-28 17:27:41.486  INFO 33540 --- [main] c.e.p.config.AdminUserFixConfig          : 找到现有管理员账号，准备删除重建: 13000000000 
2025-05-28 17:27:41.599  INFO 33540 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员账号强制重建完成: 13000000000  (ID: dc7a026c-96d8-4a12-9778-87ea43b5a4cf)
2025-05-28 17:27:41.600  INFO 33540 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员密码已加密: $2a$10$wAP7BpJhalmmaVdTX/9zDuAkBONgqUO.jhb2Arz6.TUY5l.7pLNDS
2025-05-28 17:27:41.659  INFO 33540 --- [main] c.e.p.config.AdminUserFixConfig          : 密码匹配验证: 成功
2025-05-28 17:27:41.660  INFO 33540 --- [main] c.e.p.config.DirectAdminFixConfig        : 开始直接数据库操作修复管理员账号...
2025-05-28 17:27:41.661  INFO 33540 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号已存在，更新账号信息
2025-05-28 17:27:41.727  INFO 33540 --- [main] c.e.p.config.DirectAdminFixConfig        : 更新管理员账号: 1 行受影响
2025-05-28 17:27:41.810  INFO 33540 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号验证: ID=dc7a026c-96d8-4a12-9778-87ea43b5a4cf, isAdmin=true, passwordMatches=true
2025-05-28 17:27:41.811  INFO 33540 --- [main] c.e.p.config.DirectAdminFixConfig        : 直接数据库操作修复管理员账号完成
2025-05-28 17:27:41.812  INFO 33540 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 开始紧急修复管理员账号...
2025-05-28 17:27:41.814  INFO 33540 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员账号已存在，尝试更新角色标志
2025-05-28 17:27:41.815  INFO 33540 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新管理员角色标志: 1 行受影响
2025-05-28 17:27:41.817  INFO 33540 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新后管理员角色标志: 1
2025-05-28 17:27:41.901  INFO 33540 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员密码匹配，无需更新
2025-05-28 17:27:41.901  INFO 33540 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 紧急修复管理员账号完成
2025-05-28 17:27:45.150  INFO 33540 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-28 17:27:45.150  INFO 33540 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-05-28 17:27:45.152  INFO 33540 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-05-28 17:27:45.160 DEBUG 33540 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /users
2025-05-28 17:27:45.164 DEBUG 33540 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 17:27:45.168  INFO 33540 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 处理请求: POST /api/users
2025-05-28 17:27:45.171  INFO 33540 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 17:27:45.172  INFO 33540 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 13000000000
2025-05-28 17:27:45.173  INFO 33540 --- [http-nio-8080-exec-2] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=13000000000
2025-05-28 17:27:45.177  INFO 33540 --- [http-nio-8080-exec-2] c.e.p.security.CustomUserDetailsService  : 找到用户: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true, isDoctor=false, isPatient=false
2025-05-28 17:27:45.177  INFO 33540 --- [http-nio-8080-exec-2] c.e.p.security.CustomUserDetailsService  : 用户拥有管理员角色
2025-05-28 17:27:45.178  INFO 33540 --- [http-nio-8080-exec-2] c.e.p.security.CustomUserDetailsService  : 用户 13000000000 的权限: [ROLE_ADMIN]
2025-05-28 17:27:45.180  INFO 33540 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=13000000000, authorities=[ROLE_ADMIN]
2025-05-28 17:27:45.182  INFO 33540 --- [http-nio-8080-exec-2] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_ADMIN
2025-05-28 17:27:45.183  INFO 33540 --- [http-nio-8080-exec-2] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_ADMIN]
2025-05-28 17:27:45.185  INFO 33540 --- [http-nio-8080-exec-2] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=13000000000, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], authorities=[ROLE_ADMIN]
2025-05-28 17:27:45.191 DEBUG 33540 --- [http-nio-8080-exec-2] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /users] with attributes [permitAll]
2025-05-28 17:27:45.192 DEBUG 33540 --- [http-nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /users
2025-05-28 17:27:45.273  INFO 33540 --- [http-nio-8080-exec-2] c.e.p.controller.UserController          : 收到用户注册请求: phone=13000000001
2025-05-28 17:27:45.278  INFO 33540 --- [http-nio-8080-exec-2] c.e.p.service.AuthService                : 用户注册: phone=13000000001, name=蔡旭
2025-05-28 17:27:45.285 ERROR 33540 --- [http-nio-8080-exec-2] c.e.p.service.AuthService                : 用户注册失败: 身份证号码已被注册 123456789012345678
2025-05-28 17:27:45.290  WARN 33540 --- [http-nio-8080-exec-2] c.e.p.exception.GlobalExceptionHandler   : 操作失败，资源已存在: 该身份证号码已被注册
2025-05-28 17:27:45.324 DEBUG 33540 --- [http-nio-8080-exec-2] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 17:27:53.432 DEBUG 33540 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /users
2025-05-28 17:27:53.434 DEBUG 33540 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 17:27:53.435  INFO 33540 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 处理请求: POST /api/users
2025-05-28 17:27:53.441  INFO 33540 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 17:27:53.446  INFO 33540 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 13000000000
2025-05-28 17:27:53.448  INFO 33540 --- [http-nio-8080-exec-3] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=13000000000
2025-05-28 17:27:53.456  INFO 33540 --- [http-nio-8080-exec-3] c.e.p.security.CustomUserDetailsService  : 找到用户: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true, isDoctor=false, isPatient=false
2025-05-28 17:27:53.458  INFO 33540 --- [http-nio-8080-exec-3] c.e.p.security.CustomUserDetailsService  : 用户拥有管理员角色
2025-05-28 17:27:53.459  INFO 33540 --- [http-nio-8080-exec-3] c.e.p.security.CustomUserDetailsService  : 用户 13000000000 的权限: [ROLE_ADMIN]
2025-05-28 17:27:53.460  INFO 33540 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=13000000000, authorities=[ROLE_ADMIN]
2025-05-28 17:27:53.466  INFO 33540 --- [http-nio-8080-exec-3] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_ADMIN
2025-05-28 17:27:53.467  INFO 33540 --- [http-nio-8080-exec-3] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_ADMIN]
2025-05-28 17:27:53.468  INFO 33540 --- [http-nio-8080-exec-3] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=13000000000, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], authorities=[ROLE_ADMIN]
2025-05-28 17:27:53.470 DEBUG 33540 --- [http-nio-8080-exec-3] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /users] with attributes [permitAll]
2025-05-28 17:27:53.471 DEBUG 33540 --- [http-nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /users
2025-05-28 17:27:53.474  INFO 33540 --- [http-nio-8080-exec-3] c.e.p.controller.UserController          : 收到用户注册请求: phone=13000000001
2025-05-28 17:27:53.477  INFO 33540 --- [http-nio-8080-exec-3] c.e.p.service.AuthService                : 用户注册: phone=13000000001, name=蔡旭
2025-05-28 17:27:53.584  INFO 33540 --- [http-nio-8080-exec-3] c.e.p.service.AuthService                : 用户基础账户创建成功: id=4f5d7302-f0b6-46e9-812c-39cc7e793d0b
2025-05-28 17:27:53.591  INFO 33540 --- [http-nio-8080-exec-3] c.e.p.service.AuthService                : 患者详细信息创建成功: patientId=2450e410-e2e8-49cf-8852-960072e9bb5e, userId=4f5d7302-f0b6-46e9-812c-39cc7e793d0b
2025-05-28 17:27:53.613  INFO 33540 --- [http-nio-8080-exec-3] c.e.p.controller.UserController          : 用户注册成功: userId=4f5d7302-f0b6-46e9-812c-39cc7e793d0b
2025-05-28 17:27:53.622 DEBUG 33540 --- [http-nio-8080-exec-3] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 17:30:12.963 DEBUG 33540 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /patient/2450e410-e2e8-49cf-8852-960072e9bb5e/reports
2025-05-28 17:30:12.964 DEBUG 33540 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 17:30:12.965  INFO 33540 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/patient/2450e410-e2e8-49cf-8852-960072e9bb5e/reports
2025-05-28 17:30:12.965  INFO 33540 --- [http-nio-8080-exec-6] c.e.p.security.JwtAuthenticationFilter   : 请求不包含有效JWT令牌
2025-05-28 17:30:12.965 DEBUG 33540 --- [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-28 17:30:12.966 DEBUG 33540 --- [http-nio-8080-exec-6] o.s.s.w.a.i.FilterSecurityInterceptor    : Failed to authorize filter invocation [GET /patient/2450e410-e2e8-49cf-8852-960072e9bb5e/reports] with attributes [authenticated]
2025-05-28 17:30:12.968 DEBUG 33540 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 17:30:12.973 DEBUG 33540 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /error
2025-05-28 17:30:12.974 DEBUG 33540 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 17:30:12.975 DEBUG 33540 --- [http-nio-8080-exec-6] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-28 17:30:12.975 DEBUG 33540 --- [http-nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /error
2025-05-28 17:30:12.995 DEBUG 33540 --- [http-nio-8080-exec-6] a.DefaultWebInvocationPrivilegeEvaluator : filter invocation [/error] denied for AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]

org.springframework.security.access.AccessDeniedException: Access is denied
	at org.springframework.security.access.vote.AffirmativeBased.decide(AffirmativeBased.java:73) ~[spring-security-core-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator.isAllowed(DefaultWebInvocationPrivilegeEvaluator.java:100) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator.isAllowed(DefaultWebInvocationPrivilegeEvaluator.java:67) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.RequestMatcherDelegatingWebInvocationPrivilegeEvaluator.isAllowed(RequestMatcherDelegatingWebInvocationPrivilegeEvaluator.java:76) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.boot.web.servlet.filter.ErrorPageSecurityFilter.isAllowed(ErrorPageSecurityFilter.java:88) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.filter.ErrorPageSecurityFilter.doFilter(ErrorPageSecurityFilter.java:76) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.springframework.boot.web.servlet.filter.ErrorPageSecurityFilter.doFilter(ErrorPageSecurityFilter.java:70) ~[spring-boot-2.7.14.jar:2.7.14]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:106) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:87) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.10.jar:5.7.10]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.29.jar:5.3.29]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102) ~[spring-web-5.3.29.jar:5.3.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:427) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:373) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:237) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:166) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.78.jar:9.0.78]
	at java.base/java.lang.Thread.run(Unknown Source) ~[na:na]

2025-05-28 17:30:12.997 DEBUG 33540 --- [http-nio-8080-exec-6] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 17:30:28.713 DEBUG 33540 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing POST /session
2025-05-28 17:30:28.714 DEBUG 33540 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 17:30:28.714  INFO 33540 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 处理请求: POST /api/session
2025-05-28 17:30:28.715  INFO 33540 --- [http-nio-8080-exec-7] c.e.p.security.JwtAuthenticationFilter   : 请求不包含有效JWT令牌
2025-05-28 17:30:28.715 DEBUG 33540 --- [http-nio-8080-exec-7] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-28 17:30:28.715 DEBUG 33540 --- [http-nio-8080-exec-7] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [POST /session] with attributes [permitAll]
2025-05-28 17:30:28.717 DEBUG 33540 --- [http-nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured POST /session
2025-05-28 17:30:28.726  INFO 33540 --- [http-nio-8080-exec-7] c.e.p.controller.AuthController          : 收到登录请求: username=13000000001
2025-05-28 17:30:28.728  INFO 33540 --- [http-nio-8080-exec-7] c.e.p.service.AuthService                : 用户登录: username=13000000001
2025-05-28 17:30:28.816  INFO 33540 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=13000000001
2025-05-28 17:30:28.823  INFO 33540 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 找到用户: id=4f5d7302-f0b6-46e9-812c-39cc7e793d0b, name=蔡旭, isAdmin=false, isDoctor=false, isPatient=true
2025-05-28 17:30:28.824  INFO 33540 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 用户拥有患者角色
2025-05-28 17:30:28.824  INFO 33540 --- [http-nio-8080-exec-7] c.e.p.security.CustomUserDetailsService  : 用户 13000000001 的权限: [ROLE_PATIENT]
2025-05-28 17:30:28.928 DEBUG 33540 --- [http-nio-8080-exec-7] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2025-05-28 17:30:28.929  INFO 33540 --- [http-nio-8080-exec-7] c.e.p.security.JwtTokenProvider          : 生成token: username=13000000001, roles=ROLE_PATIENT
2025-05-28 17:30:28.932  INFO 33540 --- [http-nio-8080-exec-7] c.e.p.service.AuthService                : 生成token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMSIsInJvbGVzIjoiUk9MRV9QQVRJRU5UIiwiaWF0IjoxNzQ4NDI0NjI4LCJleHAiOjE3NDg1MTEwMjh9.19XlOY-42kjY_fga3oPmRRjTfze_R2Dnc2FeTozp4Lo
2025-05-28 17:30:28.939  INFO 33540 --- [http-nio-8080-exec-7] c.e.p.service.AuthService                : 用户登录成功: id=4f5d7302-f0b6-46e9-812c-39cc7e793d0b, isAdmin=false, isDoctor=false, isPatient=true
2025-05-28 17:30:28.940  INFO 33540 --- [http-nio-8080-exec-7] c.e.p.controller.AuthController          : 登录成功: userId=4f5d7302-f0b6-46e9-812c-39cc7e793d0b, isAdmin=false, token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMSIsInJvbGVzIjoiUk9MRV9QQVRJRU5UIiwiaWF0IjoxNzQ4NDI0NjI4LCJleHAiOjE3NDg1MTEwMjh9.19XlOY-42kjY_fga3oPmRRjTfze_R2Dnc2FeTozp4Lo
2025-05-28 17:30:28.949 DEBUG 33540 --- [http-nio-8080-exec-7] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 17:30:40.702 DEBUG 33540 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /patient/2450e410-e2e8-49cf-8852-960072e9bb5e/reports
2025-05-28 17:30:40.704 DEBUG 33540 --- [http-nio-8080-exec-8] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2025-05-28 17:30:40.705  INFO 33540 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 处理请求: GET /api/patient/2450e410-e2e8-49cf-8852-960072e9bb5e/reports
2025-05-28 17:30:40.712  INFO 33540 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 请求包含有效JWT令牌
2025-05-28 17:30:40.716  INFO 33540 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 从JWT令牌获取用户名: 13000000001
2025-05-28 17:30:40.718  INFO 33540 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 加载用户详情: username=13000000001
2025-05-28 17:30:40.728  INFO 33540 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 找到用户: id=4f5d7302-f0b6-46e9-812c-39cc7e793d0b, name=蔡旭, isAdmin=false, isDoctor=false, isPatient=true
2025-05-28 17:30:40.729  INFO 33540 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 用户拥有患者角色
2025-05-28 17:30:40.731  INFO 33540 --- [http-nio-8080-exec-8] c.e.p.security.CustomUserDetailsService  : 用户 13000000001 的权限: [ROLE_PATIENT]
2025-05-28 17:30:40.731  INFO 33540 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 加载用户详情: username=13000000001, authorities=[ROLE_PATIENT]
2025-05-28 17:30:40.739  INFO 33540 --- [http-nio-8080-exec-8] c.e.p.security.JwtTokenProvider          : 从token获取角色: ROLE_PATIENT
2025-05-28 17:30:40.739  INFO 33540 --- [http-nio-8080-exec-8] c.e.p.security.JwtTokenProvider          : 转换后的权限: [ROLE_PATIENT]
2025-05-28 17:30:40.740  INFO 33540 --- [http-nio-8080-exec-8] c.e.p.security.JwtAuthenticationFilter   : 设置认证上下文: principal=org.springframework.security.core.userdetails.User [Username=13000000001, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_PATIENT]], authorities=[ROLE_PATIENT]
2025-05-28 17:30:40.743 DEBUG 33540 --- [http-nio-8080-exec-8] o.s.s.w.a.i.FilterSecurityInterceptor    : Authorized filter invocation [GET /patient/2450e410-e2e8-49cf-8852-960072e9bb5e/reports] with attributes [authenticated]
2025-05-28 17:30:40.744 DEBUG 33540 --- [http-nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /patient/2450e410-e2e8-49cf-8852-960072e9bb5e/reports
2025-05-28 17:30:40.811 DEBUG 33540 --- [http-nio-8080-exec-8] o.s.s.a.i.a.MethodSecurityInterceptor    : Authorized ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatientReports(java.lang.String); target is of class [com.example.patientmanagementsystem.controller.PatientController] with attributes [[authorize: '@patientSecurityService.canAccessPatientData(#patientId)', filter: 'null', filterTarget: 'null']]
2025-05-28 17:30:40.884 DEBUG 33540 --- [http-nio-8080-exec-8] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
2025-05-28 18:13:36.901  INFO 27224 --- [main] c.e.p.PatientManagementSystemApplication : Starting PatientManagementSystemApplication using Java 21.0.7 on 少华从文 with PID 27224 (C:\Users\10263\Downloads\patient-management-system-complete\patient-management-system\target\classes started by 10263 in C:\Users\10263\Downloads\patient-management-system-complete)
2025-05-28 18:13:36.903 DEBUG 27224 --- [main] c.e.p.PatientManagementSystemApplication : Running with Spring Boot v2.7.14, Spring v5.3.29
2025-05-28 18:13:36.904  INFO 27224 --- [main] c.e.p.PatientManagementSystemApplication : No active profile set, falling back to 1 default profile: "default"
2025-05-28 18:13:37.865  INFO 27224 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-28 18:13:37.981  INFO 27224 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 92 ms. Found 6 JPA repository interfaces.
2025-05-28 18:13:39.109  INFO 27224 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-05-28 18:13:39.123  INFO 27224 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-05-28 18:13:39.124  INFO 27224 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.78]
2025-05-28 18:13:39.262  INFO 27224 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/api]    : Initializing Spring embedded WebApplicationContext
2025-05-28 18:13:39.263  INFO 27224 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2305 ms
2025-05-28 18:13:39.593  WARN 27224 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-28 18:13:40.105  INFO 27224 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-28 18:13:40.293  INFO 27224 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-05-28 18:13:41.269  INFO 27224 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 18:13:41.842 DEBUG 27224 --- [main] c.e.p.security.JwtAuthenticationFilter   : Filter 'jwtAuthenticationFilter' configured for use
2025-05-28 18:13:41.863  INFO 27224 --- [main] c.e.p.config.AdminAccountInitializer     : AdminAccountInitializer初始化，管理员账号: 13000000000 
2025-05-28 18:13:42.399 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 18:13:42.404 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.getDoctors(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:42.438 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 18:13:42.439 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.createDoctor(com.example.patientmanagementsystem.dto.DoctorRegistrationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:42.466 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 18:13:42.467 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.deleteDoctor(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:42.469 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 18:13:42.469 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.updateDoctor(java.lang.String,com.example.patientmanagementsystem.dto.UpdateDoctorRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:42.471 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.example.patientmanagementsystem.controller.AdminController
2025-05-28 18:13:42.472 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.AdminController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.AdminController.searchDoctors(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:42.497  INFO 27224 --- [main] c.e.p.service.AuthService                : === 开始初始化管理员账号 ===
2025-05-28 18:13:42.651  INFO 27224 --- [main] c.e.p.service.AuthService                : 找到管理员账号: id=a421d099-6273-464a-b7d7-266d61cf07ea, name=管理员, isAdmin=true
2025-05-28 18:13:42.652  INFO 27224 --- [main] c.e.p.service.AuthService                : === 管理员账号初始化完成 ===
2025-05-28 18:13:42.663 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or @doctorSecurityService.isDoctorSelf(#userIdOfDoctor)") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 18:13:42.666 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.DoctorController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.DoctorController.getPatientsForDoctor(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or @doctorSecurityService.isDoctorSelf(#userIdOfDoctor)', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:42.805 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.deletePatient(java.lang.String)
2025-05-28 18:13:42.806 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.deletePatient(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:42.807 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("@patientSecurityService.canAccessPatientData(#userId)") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatientReports(java.lang.String)
2025-05-28 18:13:42.808 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatientReports(java.lang.String)]] with attributes [[authorize: '@patientSecurityService.canAccessPatientData(#userId)', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:42.808 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatients(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 18:13:42.809 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.getPatients(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:42.809 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.updatePatient(java.lang.String,com.example.patientmanagementsystem.dto.UpdatePatientRequestDTO)
2025-05-28 18:13:42.810 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.updatePatient(java.lang.String,com.example.patientmanagementsystem.dto.UpdatePatientRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:42.814 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.searchPatients(java.lang.String)
2025-05-28 18:13:42.817 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.PatientController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.PatientController.searchPatients(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:42.837 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.addRelation(com.example.patientmanagementsystem.dto.AddRelationRequestDTO)
2025-05-28 18:13:42.838 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.addRelation(com.example.patientmanagementsystem.dto.AddRelationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:42.839 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.getRelations(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2025-05-28 18:13:42.840 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.getRelations(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:42.841 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.deleteRelation(java.lang.String,java.lang.String)
2025-05-28 18:13:42.842 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.deleteRelation(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:42.843 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\') or hasRole(\'DOCTOR\')") found on specific method: public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.updateRelation(com.example.patientmanagementsystem.dto.UpdateRelationRequestDTO)
2025-05-28 18:13:42.845 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.RelationController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.RelationController.updateRelation(com.example.patientmanagementsystem.dto.UpdateRelationRequestDTO)]] with attributes [[authorize: 'hasRole('ADMIN') or hasRole('DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:42.855 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 18:13:42.855 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.getPatientReports(java.lang.String,int,int)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:42.856 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 18:13:42.857 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.uploadReport(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:42.859 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 18:13:42.861 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.getReportDetail(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:42.863 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 18:13:42.863 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.downloadReport(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:42.864 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.ReportController
2025-05-28 18:13:42.868 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.ReportController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.ReportController.updateReportDetails(java.lang.String,com.example.patientmanagementsystem.dto.UpdateReportRequestDTO)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:42.905  INFO 27224 --- [main] c.e.p.service.DataService                : Python脚本已复制到临时可执行路径: C:\Users\10263\AppData\Local\Temp\pms_scripts_c4e40f42\processorOfRawData.py
2025-05-28 18:13:42.912 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.UploadController
2025-05-28 18:13:42.913 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.UploadController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.UploadController.uploadFourCsvFiles(org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,org.springframework.web.multipart.MultipartFile,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:42.914 DEBUG 27224 --- [main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasAnyRole(\'ADMIN\', \'DOCTOR\')") found on: com.example.patientmanagementsystem.controller.UploadController
2025-05-28 18:13:42.914 DEBUG 27224 --- [main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.example.patientmanagementsystem.controller.UploadController; public org.springframework.http.ResponseEntity com.example.patientmanagementsystem.controller.UploadController.getDataRecords(java.lang.String,int,int)]] with attributes [[authorize: 'hasAnyRole('ADMIN', 'DOCTOR')', filter: 'null', filterTarget: 'null']]
2025-05-28 18:13:43.192 DEBUG 27224 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/session']
2025-05-28 18:13:43.193 DEBUG 27224 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/users']
2025-05-28 18:13:43.194 DEBUG 27224 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [permitAll] for Ant [pattern='/h2-console/**']
2025-05-28 18:13:43.194 DEBUG 27224 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')] for Ant [pattern='/admin/relations/**']
2025-05-28 18:13:43.195 DEBUG 27224 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasRole('ROLE_ADMIN')] for Ant [pattern='/admin/**']
2025-05-28 18:13:43.195 DEBUG 27224 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR')] for Ant [pattern='/doctors/**']
2025-05-28 18:13:43.196 DEBUG 27224 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [hasAnyRole('ROLE_ADMIN','ROLE_DOCTOR','ROLE_PATIENT')] for Ant [pattern='/patients/**']
2025-05-28 18:13:43.196 DEBUG 27224 --- [main] edFilterInvocationSecurityMetadataSource : Adding web access control expression [authenticated] for any request
2025-05-28 18:13:43.203  INFO 27224 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5c59dfc7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@40ed4674, org.springframework.security.web.context.SecurityContextPersistenceFilter@113e6e06, org.springframework.security.web.header.HeaderWriterFilter@13f17b8f, org.springframework.web.filter.CorsFilter@2ef63b6d, org.springframework.security.web.authentication.logout.LogoutFilter@4f93a8f6, com.example.patientmanagementsystem.security.JwtAuthenticationFilter@3a44993c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@f9979cf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@703947bd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@377cc0f8, org.springframework.security.web.session.SessionManagementFilter@a0e35c3, org.springframework.security.web.access.ExceptionTranslationFilter@6e5a77ef, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3093161a]
2025-05-28 18:13:44.382  INFO 27224 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path '/api'
2025-05-28 18:13:44.394  INFO 27224 --- [main] c.e.p.PatientManagementSystemApplication : Started PatientManagementSystemApplication in 7.89 seconds (JVM running for 8.25)
2025-05-28 18:13:44.402  INFO 27224 --- [main] c.e.p.config.AdminAccountInitializer     : 开始初始化管理员账号...
2025-05-28 18:13:44.407  INFO 27224 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号已存在，ID: dc7a026c-96d8-4a12-9778-87ea43b5a4cf, isAdmin: true
2025-05-28 18:13:44.554  INFO 27224 --- [main] c.e.p.config.AdminAccountInitializer     : 更新管理员密码和信息完成
2025-05-28 18:13:44.661  INFO 27224 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号验证: ID=dc7a026c-96d8-4a12-9778-87ea43b5a4cf, isAdmin=true, passwordMatches=true
2025-05-28 18:13:44.662  INFO 27224 --- [main] c.e.p.config.AdminAccountInitializer     : 管理员账号初始化完成
2025-05-28 18:13:44.693  INFO 27224 --- [main] c.e.p.config.AdminUserInitializer        : Default admin user with phone: 13000000000  already exists.
2025-05-28 18:13:44.776  INFO 27224 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 开始全面修复管理员账号和权限...
2025-05-28 18:13:44.796  INFO 27224 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 数据库中管理员角色标志: 1
2025-05-28 18:13:44.892  INFO 27224 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员密码匹配: true
2025-05-28 18:13:44.894  INFO 27224 --- [main] c.e.p.security.JwtTokenProvider          : 生成token: username=13000000000 , roles=ROLE_ADMIN
2025-05-28 18:13:44.958  INFO 27224 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 生成管理员token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMzAwMDAwMDAwMCAiLCJyb2xlcyI6IlJPTEVfQURNSU4iLCJpYXQiOjE3NDg0MjcyMjQsImV4cCI6MTc0ODUxMzYyNH0.XFc0BKmc3x2L2Kt6YwNpv2TWV1fifNOXgsQ7LfUZ67s
2025-05-28 18:13:44.996  INFO 27224 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : Token中的角色: ROLE_ADMIN
2025-05-28 18:13:44.997  INFO 27224 --- [main] c.e.p.c.AdminComprehensiveFixConfig      : 管理员账号和权限修复完成
2025-05-28 18:13:44.998  INFO 27224 --- [main] c.e.p.config.AdminRoleFixConfig          : 开始修复管理员角色...
2025-05-28 18:13:45.005  INFO 27224 --- [main] c.e.p.config.AdminRoleFixConfig          : 找到管理员账号: 13000000000  (ID: dc7a026c-96d8-4a12-9778-87ea43b5a4cf)
2025-05-28 18:13:45.007  INFO 27224 --- [main] c.e.p.config.AdminRoleFixConfig          : 管理员角色已正确设置，无需更新
2025-05-28 18:13:45.010  INFO 27224 --- [main] c.e.p.config.AdminRoleFixConfig          : 数据库中管理员角色标志: 1
2025-05-28 18:13:45.011  INFO 27224 --- [main] c.e.p.config.AdminUserFixConfig          : 开始强制重新创建管理员账号...
2025-05-28 18:13:45.016  INFO 27224 --- [main] c.e.p.config.AdminUserFixConfig          : 找到现有管理员账号，准备删除重建: 13000000000 
2025-05-28 18:13:45.162  INFO 27224 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员账号强制重建完成: 13000000000  (ID: 25e39dc8-cd14-4ba6-aa64-86c0c63c7ec3)
2025-05-28 18:13:45.163  INFO 27224 --- [main] c.e.p.config.AdminUserFixConfig          : 管理员密码已加密: $2a$10$zBmKdlo4kL5wNSTnSHMU0O5slcDT4huwAjgxfV9CqKAiJ3CkJN70y
2025-05-28 18:13:45.246  INFO 27224 --- [main] c.e.p.config.AdminUserFixConfig          : 密码匹配验证: 成功
2025-05-28 18:13:45.247  INFO 27224 --- [main] c.e.p.config.DirectAdminFixConfig        : 开始直接数据库操作修复管理员账号...
2025-05-28 18:13:45.252  INFO 27224 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号已存在，更新账号信息
2025-05-28 18:13:45.342  INFO 27224 --- [main] c.e.p.config.DirectAdminFixConfig        : 更新管理员账号: 1 行受影响
2025-05-28 18:13:45.413  INFO 27224 --- [main] c.e.p.config.DirectAdminFixConfig        : 管理员账号验证: ID=25e39dc8-cd14-4ba6-aa64-86c0c63c7ec3, isAdmin=true, passwordMatches=true
2025-05-28 18:13:45.414  INFO 27224 --- [main] c.e.p.config.DirectAdminFixConfig        : 直接数据库操作修复管理员账号完成
2025-05-28 18:13:45.414  INFO 27224 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 开始紧急修复管理员账号...
2025-05-28 18:13:45.416  INFO 27224 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员账号已存在，尝试更新角色标志
2025-05-28 18:13:45.418  INFO 27224 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新管理员角色标志: 1 行受影响
2025-05-28 18:13:45.420  INFO 27224 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 更新后管理员角色标志: 1
2025-05-28 18:13:45.490  INFO 27224 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 管理员密码匹配，无需更新
2025-05-28 18:13:45.491  INFO 27224 --- [main] c.e.p.config.EmergencyAdminFixConfig     : 紧急修复管理员账号完成
2025-05-28 18:13:47.874  INFO 27224 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-28 18:13:47.876  INFO 27224 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-05-28 18:13:47.887  INFO 27224 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
